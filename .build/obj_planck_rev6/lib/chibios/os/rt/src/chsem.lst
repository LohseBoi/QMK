   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"chsem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.chSemObjectInit,"ax",%progbits
  18              		.align	1
  19              		.global	chSemObjectInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	chSemObjectInit:
  27              	.LVL0:
  28              	.LFB289:
  29              		.file 1 "lib/chibios/os/rt/src/chsem.c"
   1:lib/chibios/os/rt/src/chsem.c **** /*
   2:lib/chibios/os/rt/src/chsem.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chsem.c **** 
   4:lib/chibios/os/rt/src/chsem.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chsem.c **** 
   6:lib/chibios/os/rt/src/chsem.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chsem.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chsem.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chsem.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chsem.c **** 
  11:lib/chibios/os/rt/src/chsem.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chsem.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chsem.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chsem.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chsem.c **** 
  16:lib/chibios/os/rt/src/chsem.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chsem.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chsem.c **** */
  19:lib/chibios/os/rt/src/chsem.c **** 
  20:lib/chibios/os/rt/src/chsem.c **** /**
  21:lib/chibios/os/rt/src/chsem.c ****  * @file    rt/src/chsem.c
  22:lib/chibios/os/rt/src/chsem.c ****  * @brief   Semaphores code.
  23:lib/chibios/os/rt/src/chsem.c ****  *
  24:lib/chibios/os/rt/src/chsem.c ****  * @addtogroup semaphores
  25:lib/chibios/os/rt/src/chsem.c ****  * @details Semaphores related APIs and services.
  26:lib/chibios/os/rt/src/chsem.c ****  *          <h2>Operation mode</h2>
  27:lib/chibios/os/rt/src/chsem.c ****  *          Semaphores are a flexible synchronization primitive, ChibiOS/RT
  28:lib/chibios/os/rt/src/chsem.c ****  *          implements semaphores in their "counting semaphores" variant as
  29:lib/chibios/os/rt/src/chsem.c ****  *          defined by Edsger Dijkstra plus several enhancements like:
  30:lib/chibios/os/rt/src/chsem.c ****  *          - Wait operation with timeout.
  31:lib/chibios/os/rt/src/chsem.c ****  *          - Reset operation.
  32:lib/chibios/os/rt/src/chsem.c ****  *          - Atomic wait+signal operation.
  33:lib/chibios/os/rt/src/chsem.c ****  *          - Return message from the wait operation (OK, RESET, TIMEOUT).
  34:lib/chibios/os/rt/src/chsem.c ****  *          .
  35:lib/chibios/os/rt/src/chsem.c ****  *          The binary semaphores variant can be easily implemented using
  36:lib/chibios/os/rt/src/chsem.c ****  *          counting semaphores.<br>
  37:lib/chibios/os/rt/src/chsem.c ****  *          Operations defined for semaphores:
  38:lib/chibios/os/rt/src/chsem.c ****  *          - <b>Signal</b>: The semaphore counter is increased and if the
  39:lib/chibios/os/rt/src/chsem.c ****  *            result is non-positive then a waiting thread is removed from
  40:lib/chibios/os/rt/src/chsem.c ****  *            the semaphore queue and made ready for execution.
  41:lib/chibios/os/rt/src/chsem.c ****  *          - <b>Wait</b>: The semaphore counter is decreased and if the result
  42:lib/chibios/os/rt/src/chsem.c ****  *            becomes negative the thread is queued in the semaphore and
  43:lib/chibios/os/rt/src/chsem.c ****  *            suspended.
  44:lib/chibios/os/rt/src/chsem.c ****  *          - <b>Reset</b>: The semaphore counter is reset to a non-negative
  45:lib/chibios/os/rt/src/chsem.c ****  *            value and all the threads in the queue are released.
  46:lib/chibios/os/rt/src/chsem.c ****  *          .
  47:lib/chibios/os/rt/src/chsem.c ****  *          Semaphores can be used as guards for mutual exclusion zones
  48:lib/chibios/os/rt/src/chsem.c ****  *          (note that mutexes are recommended for this kind of use) but
  49:lib/chibios/os/rt/src/chsem.c ****  *          also have other uses, queues guards and counters for example.<br>
  50:lib/chibios/os/rt/src/chsem.c ****  *          Semaphores usually use a FIFO queuing strategy but it is possible
  51:lib/chibios/os/rt/src/chsem.c ****  *          to make them order threads by priority by enabling
  52:lib/chibios/os/rt/src/chsem.c ****  *          @p CH_CFG_USE_SEMAPHORES_PRIORITY in @p chconf.h.
  53:lib/chibios/os/rt/src/chsem.c ****  * @pre     In order to use the semaphore APIs the @p CH_CFG_USE_SEMAPHORES
  54:lib/chibios/os/rt/src/chsem.c ****  *          option must be enabled in @p chconf.h.
  55:lib/chibios/os/rt/src/chsem.c ****  * @{
  56:lib/chibios/os/rt/src/chsem.c ****  */
  57:lib/chibios/os/rt/src/chsem.c **** 
  58:lib/chibios/os/rt/src/chsem.c **** #include "ch.h"
  59:lib/chibios/os/rt/src/chsem.c **** 
  60:lib/chibios/os/rt/src/chsem.c **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
  61:lib/chibios/os/rt/src/chsem.c **** 
  62:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  63:lib/chibios/os/rt/src/chsem.c **** /* Module exported variables.                                                */
  64:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  65:lib/chibios/os/rt/src/chsem.c **** 
  66:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  67:lib/chibios/os/rt/src/chsem.c **** /* Module local types.                                                       */
  68:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  69:lib/chibios/os/rt/src/chsem.c **** 
  70:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  71:lib/chibios/os/rt/src/chsem.c **** /* Module local variables.                                                   */
  72:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  73:lib/chibios/os/rt/src/chsem.c **** 
  74:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  75:lib/chibios/os/rt/src/chsem.c **** /* Module local functions.                                                   */
  76:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  77:lib/chibios/os/rt/src/chsem.c **** 
  78:lib/chibios/os/rt/src/chsem.c **** #if CH_CFG_USE_SEMAPHORES_PRIORITY == TRUE
  79:lib/chibios/os/rt/src/chsem.c **** #define sem_insert(tp, qp) ch_sch_prio_insert(&tp->hdr.queue, qp)
  80:lib/chibios/os/rt/src/chsem.c **** #else
  81:lib/chibios/os/rt/src/chsem.c **** #define sem_insert(tp, qp) ch_queue_insert(&tp->hdr.queue, qp)
  82:lib/chibios/os/rt/src/chsem.c **** #endif
  83:lib/chibios/os/rt/src/chsem.c **** 
  84:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  85:lib/chibios/os/rt/src/chsem.c **** /* Module exported functions.                                                */
  86:lib/chibios/os/rt/src/chsem.c **** /*===========================================================================*/
  87:lib/chibios/os/rt/src/chsem.c **** 
  88:lib/chibios/os/rt/src/chsem.c **** /**
  89:lib/chibios/os/rt/src/chsem.c ****  * @brief   Initializes a semaphore with the specified counter value.
  90:lib/chibios/os/rt/src/chsem.c ****  *
  91:lib/chibios/os/rt/src/chsem.c ****  * @param[out] sp       pointer to a @p semaphore_t structure
  92:lib/chibios/os/rt/src/chsem.c ****  * @param[in] n         initial value of the semaphore counter. Must be
  93:lib/chibios/os/rt/src/chsem.c ****  *                      non-negative.
  94:lib/chibios/os/rt/src/chsem.c ****  *
  95:lib/chibios/os/rt/src/chsem.c ****  * @init
  96:lib/chibios/os/rt/src/chsem.c ****  */
  97:lib/chibios/os/rt/src/chsem.c **** void chSemObjectInit(semaphore_t *sp, cnt_t n) {
  30              		.loc 1 97 48 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  98:lib/chibios/os/rt/src/chsem.c **** 
  99:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck((sp != NULL) && (n >= (cnt_t)0));
  35              		.loc 1 99 3 view .LVU1
  36              		.loc 1 99 3 view .LVU2
  37              		.loc 1 99 3 view .LVU3
 100:lib/chibios/os/rt/src/chsem.c **** 
 101:lib/chibios/os/rt/src/chsem.c ****   ch_queue_init(&sp->queue);
  38              		.loc 1 101 3 view .LVU4
  39              	.LBB90:
  40              	.LBI90:
  41              		.file 2 "./lib/chibios/os/rt/include/chlists.h"
   1:./lib/chibios/os/rt/include/chlists.h **** /*
   2:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chlists.h **** 
   4:./lib/chibios/os/rt/include/chlists.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chlists.h **** 
   6:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chlists.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chlists.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chlists.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chlists.h **** 
  11:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chlists.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chlists.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chlists.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chlists.h **** 
  16:./lib/chibios/os/rt/include/chlists.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chlists.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chlists.h **** */
  19:./lib/chibios/os/rt/include/chlists.h **** 
  20:./lib/chibios/os/rt/include/chlists.h **** /**
  21:./lib/chibios/os/rt/include/chlists.h ****  * @file    chlists.h
  22:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Lists and Queues header.
  23:./lib/chibios/os/rt/include/chlists.h ****  *
  24:./lib/chibios/os/rt/include/chlists.h ****  * @addtogroup os_lists
  25:./lib/chibios/os/rt/include/chlists.h ****  * @{
  26:./lib/chibios/os/rt/include/chlists.h ****  */
  27:./lib/chibios/os/rt/include/chlists.h **** 
  28:./lib/chibios/os/rt/include/chlists.h **** #ifndef CHLISTS_H
  29:./lib/chibios/os/rt/include/chlists.h **** #define CHLISTS_H
  30:./lib/chibios/os/rt/include/chlists.h **** 
  31:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chlists.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chlists.h **** 
  35:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chlists.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chlists.h **** 
  39:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chlists.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chlists.h **** 
  43:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chlists.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chlists.h **** 
  47:./lib/chibios/os/rt/include/chlists.h **** /**
  48:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic single link list header and element.
  49:./lib/chibios/os/rt/include/chlists.h ****  */
  50:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_list ch_list_t;
  51:./lib/chibios/os/rt/include/chlists.h **** 
  52:./lib/chibios/os/rt/include/chlists.h **** /**
  53:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic single link list header
  54:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  55:./lib/chibios/os/rt/include/chlists.h ****  */
  56:./lib/chibios/os/rt/include/chlists.h **** struct ch_list {
  57:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t             *next;      /**< @brief Next in the list/queue.     */
  58:./lib/chibios/os/rt/include/chlists.h **** };
  59:./lib/chibios/os/rt/include/chlists.h **** 
  60:./lib/chibios/os/rt/include/chlists.h **** /**
  61:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked list header and element.
  62:./lib/chibios/os/rt/include/chlists.h ****  */
  63:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_queue ch_queue_t;
  64:./lib/chibios/os/rt/include/chlists.h **** 
  65:./lib/chibios/os/rt/include/chlists.h **** /**
  66:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic bidirectional linked list header
  67:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  68:./lib/chibios/os/rt/include/chlists.h ****  */
  69:./lib/chibios/os/rt/include/chlists.h **** struct ch_queue {
  70:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *next;      /**< @brief Next in the list/queue.     */
  71:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *prev;      /**< @brief Previous in the queue.      */
  72:./lib/chibios/os/rt/include/chlists.h **** };
  73:./lib/chibios/os/rt/include/chlists.h **** 
  74:./lib/chibios/os/rt/include/chlists.h **** /**
  75:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic priority-ordered bidirectional linked list
  76:./lib/chibios/os/rt/include/chlists.h ****  *          header and element.
  77:./lib/chibios/os/rt/include/chlists.h ****  */
  78:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_priority_queue ch_priority_queue_t;
  79:./lib/chibios/os/rt/include/chlists.h **** 
  80:./lib/chibios/os/rt/include/chlists.h **** /**
  81:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic priority-ordered bidirectional
  82:./lib/chibios/os/rt/include/chlists.h ****  *          linked list header and element.
  83:./lib/chibios/os/rt/include/chlists.h ****  * @note    Link fields are void pointers in order to avoid aliasing issues.
  84:./lib/chibios/os/rt/include/chlists.h ****  */
  85:./lib/chibios/os/rt/include/chlists.h **** struct ch_priority_queue {
  86:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *next;      /**< @brief Next in the list/queue.     */
  87:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *prev;      /**< @brief Previous in the queue.      */
  88:./lib/chibios/os/rt/include/chlists.h ****   tprio_t               prio;
  89:./lib/chibios/os/rt/include/chlists.h **** };
  90:./lib/chibios/os/rt/include/chlists.h **** 
  91:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  92:./lib/chibios/os/rt/include/chlists.h **** /* Module macros.                                                            */
  93:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  94:./lib/chibios/os/rt/include/chlists.h **** 
  95:./lib/chibios/os/rt/include/chlists.h **** /**
  96:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Data part of a static queue object initializer.
  97:./lib/chibios/os/rt/include/chlists.h ****  * @details This macro should be used when statically initializing a
  98:./lib/chibios/os/rt/include/chlists.h ****  *          queue that is part of a bigger structure.
  99:./lib/chibios/os/rt/include/chlists.h ****  *
 100:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 101:./lib/chibios/os/rt/include/chlists.h ****  */
 102:./lib/chibios/os/rt/include/chlists.h **** #define _CH_QUEUE_DATA(name) {(ch_queue_t *)&name, (ch_queue_t *)&name}
 103:./lib/chibios/os/rt/include/chlists.h **** 
 104:./lib/chibios/os/rt/include/chlists.h **** /**
 105:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Static queue object initializer.
 106:./lib/chibios/os/rt/include/chlists.h ****  * @details Statically initialized queues require no explicit
 107:./lib/chibios/os/rt/include/chlists.h ****  *          initialization using @p queue_init().
 108:./lib/chibios/os/rt/include/chlists.h ****  *
 109:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 110:./lib/chibios/os/rt/include/chlists.h ****  */
 111:./lib/chibios/os/rt/include/chlists.h **** #define CH_QUEUE_DECL(name)                                                 \
 112:./lib/chibios/os/rt/include/chlists.h ****     ch_queue_t name = _CH_QUEUE_DATA(name)
 113:./lib/chibios/os/rt/include/chlists.h **** 
 114:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 115:./lib/chibios/os/rt/include/chlists.h **** /* External declarations.                                                    */
 116:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chlists.h **** 
 118:./lib/chibios/os/rt/include/chlists.h **** /* Early function prototypes required by the following headers.*/
 119:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 120:./lib/chibios/os/rt/include/chlists.h **** extern "C" {
 121:./lib/chibios/os/rt/include/chlists.h **** #endif
 122:./lib/chibios/os/rt/include/chlists.h **** 
 123:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 124:./lib/chibios/os/rt/include/chlists.h **** }
 125:./lib/chibios/os/rt/include/chlists.h **** #endif
 126:./lib/chibios/os/rt/include/chlists.h **** 
 127:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 128:./lib/chibios/os/rt/include/chlists.h **** /* Module inline functions.                                                  */
 129:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 130:./lib/chibios/os/rt/include/chlists.h **** 
 131:./lib/chibios/os/rt/include/chlists.h **** /**
 132:./lib/chibios/os/rt/include/chlists.h ****  * @brief   List initialization.
 133:./lib/chibios/os/rt/include/chlists.h ****  *
 134:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] lp       pointer to the list header
 135:./lib/chibios/os/rt/include/chlists.h ****  *
 136:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 137:./lib/chibios/os/rt/include/chlists.h ****  */
 138:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_init(ch_list_t *lp) {
 139:./lib/chibios/os/rt/include/chlists.h **** 
 140:./lib/chibios/os/rt/include/chlists.h ****   lp->next = lp;
 141:./lib/chibios/os/rt/include/chlists.h **** }
 142:./lib/chibios/os/rt/include/chlists.h **** 
 143:./lib/chibios/os/rt/include/chlists.h **** /**
 144:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is empty.
 145:./lib/chibios/os/rt/include/chlists.h ****  *
 146:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 147:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 148:./lib/chibios/os/rt/include/chlists.h ****  *
 149:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 150:./lib/chibios/os/rt/include/chlists.h ****  */
 151:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_isempty(ch_list_t *lp) {
 152:./lib/chibios/os/rt/include/chlists.h **** 
 153:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next == lp);
 154:./lib/chibios/os/rt/include/chlists.h **** }
 155:./lib/chibios/os/rt/include/chlists.h **** 
 156:./lib/chibios/os/rt/include/chlists.h **** /**
 157:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is not empty.
 158:./lib/chibios/os/rt/include/chlists.h ****  *
 159:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 160:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 161:./lib/chibios/os/rt/include/chlists.h ****  *
 162:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 163:./lib/chibios/os/rt/include/chlists.h ****  */
 164:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_notempty(ch_list_t *lp) {
 165:./lib/chibios/os/rt/include/chlists.h **** 
 166:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next != lp);
 167:./lib/chibios/os/rt/include/chlists.h **** }
 168:./lib/chibios/os/rt/include/chlists.h **** 
 169:./lib/chibios/os/rt/include/chlists.h **** /**
 170:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pushes an element on top of a stack list.
 171:./lib/chibios/os/rt/include/chlists.h ****  *
 172:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p     the pointer to the element to be inserted in the list
 173:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp    the pointer to the list header
 174:./lib/chibios/os/rt/include/chlists.h ****  *
 175:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 176:./lib/chibios/os/rt/include/chlists.h ****  */
 177:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_push(ch_list_t *p, ch_list_t *lp) {
 178:./lib/chibios/os/rt/include/chlists.h **** 
 179:./lib/chibios/os/rt/include/chlists.h ****   p->next = lp->next;
 180:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 181:./lib/chibios/os/rt/include/chlists.h **** }
 182:./lib/chibios/os/rt/include/chlists.h **** 
 183:./lib/chibios/os/rt/include/chlists.h **** /**
 184:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pops an element from the top of a stack list and returns it.
 185:./lib/chibios/os/rt/include/chlists.h ****  * @pre     The list must be non-empty before calling this function.
 186:./lib/chibios/os/rt/include/chlists.h ****  *
 187:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        the pointer to the list header
 188:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 189:./lib/chibios/os/rt/include/chlists.h ****  *
 190:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 191:./lib/chibios/os/rt/include/chlists.h ****  */
 192:./lib/chibios/os/rt/include/chlists.h **** static inline ch_list_t *ch_list_pop(ch_list_t *lp) {
 193:./lib/chibios/os/rt/include/chlists.h **** 
 194:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t *p = lp->next;
 195:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p->next;
 196:./lib/chibios/os/rt/include/chlists.h **** 
 197:./lib/chibios/os/rt/include/chlists.h ****   return p;
 198:./lib/chibios/os/rt/include/chlists.h **** }
 199:./lib/chibios/os/rt/include/chlists.h **** 
 200:./lib/chibios/os/rt/include/chlists.h **** /**
 201:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Queue initialization.
 202:./lib/chibios/os/rt/include/chlists.h ****  *
 203:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] qp       pointer to the queue header
 204:./lib/chibios/os/rt/include/chlists.h ****  *
 205:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 206:./lib/chibios/os/rt/include/chlists.h ****  */
 207:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_init(ch_queue_t *qp) {
  42              		.loc 2 207 20 view .LVU5
  43              	.LBB91:
 208:./lib/chibios/os/rt/include/chlists.h **** 
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->next = qp;
  44              		.loc 2 209 3 view .LVU6
 210:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
  45              		.loc 2 210 12 is_stmt 0 view .LVU7
  46 0000 C0E90000 		strd	r0, r0, [r0]
  47              	.LVL1:
  48              		.loc 2 210 12 view .LVU8
  49              	.LBE91:
  50              	.LBE90:
 102:lib/chibios/os/rt/src/chsem.c ****   sp->cnt = n;
  51              		.loc 1 102 3 is_stmt 1 view .LVU9
  52              		.loc 1 102 11 is_stmt 0 view .LVU10
  53 0004 8160     		str	r1, [r0, #8]
 103:lib/chibios/os/rt/src/chsem.c **** }
  54              		.loc 1 103 1 view .LVU11
  55 0006 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE289:
  59              		.section	.text.chSemResetWithMessageI,"ax",%progbits
  60              		.align	1
  61              		.global	chSemResetWithMessageI
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	chSemResetWithMessageI:
  68              	.LVL2:
  69              	.LFB291:
 104:lib/chibios/os/rt/src/chsem.c **** 
 105:lib/chibios/os/rt/src/chsem.c **** /**
 106:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a reset operation on the semaphore.
 107:lib/chibios/os/rt/src/chsem.c ****  * @post    After invoking this function all the threads waiting on the
 108:lib/chibios/os/rt/src/chsem.c ****  *          semaphore, if any, are released and the semaphore counter is set
 109:lib/chibios/os/rt/src/chsem.c ****  *          to the specified, non negative, value.
 110:lib/chibios/os/rt/src/chsem.c ****  *
 111:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 112:lib/chibios/os/rt/src/chsem.c ****  * @param[in] n         the new value of the semaphore counter. The value must
 113:lib/chibios/os/rt/src/chsem.c ****  *                      be non-negative.
 114:lib/chibios/os/rt/src/chsem.c ****  * @param[in] msg       message to be sent
 115:lib/chibios/os/rt/src/chsem.c ****  *
 116:lib/chibios/os/rt/src/chsem.c ****  * @api
 117:lib/chibios/os/rt/src/chsem.c ****  */
 118:lib/chibios/os/rt/src/chsem.c **** void chSemResetWithMessage(semaphore_t *sp, cnt_t n, msg_t msg) {
 119:lib/chibios/os/rt/src/chsem.c **** 
 120:lib/chibios/os/rt/src/chsem.c ****   chSysLock();
 121:lib/chibios/os/rt/src/chsem.c ****   chSemResetWithMessageI(sp, n, msg);
 122:lib/chibios/os/rt/src/chsem.c ****   chSchRescheduleS();
 123:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 124:lib/chibios/os/rt/src/chsem.c **** }
 125:lib/chibios/os/rt/src/chsem.c **** 
 126:lib/chibios/os/rt/src/chsem.c **** /**
 127:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a reset operation on the semaphore.
 128:lib/chibios/os/rt/src/chsem.c ****  * @post    After invoking this function all the threads waiting on the
 129:lib/chibios/os/rt/src/chsem.c ****  *          semaphore, if any, are released and the semaphore counter is set
 130:lib/chibios/os/rt/src/chsem.c ****  *          to the specified, non negative, value.
 131:lib/chibios/os/rt/src/chsem.c ****  * @post    This function does not reschedule so a call to a rescheduling
 132:lib/chibios/os/rt/src/chsem.c ****  *          function must be performed before unlocking the kernel. Note that
 133:lib/chibios/os/rt/src/chsem.c ****  *          interrupt handlers always reschedule on exit so an explicit
 134:lib/chibios/os/rt/src/chsem.c ****  *          reschedule must not be performed in ISRs.
 135:lib/chibios/os/rt/src/chsem.c ****  *
 136:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 137:lib/chibios/os/rt/src/chsem.c ****  * @param[in] n         the new value of the semaphore counter. The value must
 138:lib/chibios/os/rt/src/chsem.c ****  *                      be non-negative.
 139:lib/chibios/os/rt/src/chsem.c ****  * @param[in] msg       message to be sent
 140:lib/chibios/os/rt/src/chsem.c ****  *
 141:lib/chibios/os/rt/src/chsem.c ****  * @iclass
 142:lib/chibios/os/rt/src/chsem.c ****  */
 143:lib/chibios/os/rt/src/chsem.c **** void chSemResetWithMessageI(semaphore_t *sp, cnt_t n, msg_t msg) {
  70              		.loc 1 143 66 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
 144:lib/chibios/os/rt/src/chsem.c **** 
 145:lib/chibios/os/rt/src/chsem.c ****   chDbgCheckClassI();
  74              		.loc 1 145 21 view .LVU13
 146:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck((sp != NULL) && (n >= (cnt_t)0));
  75              		.loc 1 146 3 view .LVU14
  76              		.loc 1 146 3 view .LVU15
  77              		.loc 1 146 3 view .LVU16
 147:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sp->cnt >= (cnt_t)0) && ch_queue_isempty(&sp->queue)) ||
  78              		.loc 1 147 3 view .LVU17
  79              		.loc 1 147 3 view .LVU18
  80              		.loc 1 147 3 view .LVU19
 148:lib/chibios/os/rt/src/chsem.c ****               ((sp->cnt < (cnt_t)0) && ch_queue_notempty(&sp->queue)),
 149:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 150:lib/chibios/os/rt/src/chsem.c **** 
 151:lib/chibios/os/rt/src/chsem.c ****   sp->cnt = n;
  81              		.loc 1 151 3 view .LVU20
 143:lib/chibios/os/rt/src/chsem.c **** 
  82              		.loc 1 143 66 is_stmt 0 view .LVU21
  83 0000 38B5     		push	{r3, r4, r5, lr}
  84              		.cfi_def_cfa_offset 16
  85              		.cfi_offset 3, -16
  86              		.cfi_offset 4, -12
  87              		.cfi_offset 5, -8
  88              		.cfi_offset 14, -4
 143:lib/chibios/os/rt/src/chsem.c **** 
  89              		.loc 1 143 66 view .LVU22
  90 0002 0446     		mov	r4, r0
  91 0004 1546     		mov	r5, r2
  92              		.loc 1 151 11 view .LVU23
  93 0006 8160     		str	r1, [r0, #8]
 152:lib/chibios/os/rt/src/chsem.c ****   while (ch_queue_notempty(&sp->queue)) {
  94              		.loc 1 152 3 is_stmt 1 view .LVU24
  95              	.LVL3:
  96              	.L3:
  97              		.loc 1 152 10 view .LVU25
  98              	.LBB92:
  99              	.LBI92:
 211:./lib/chibios/os/rt/include/chlists.h **** }
 212:./lib/chibios/os/rt/include/chlists.h **** 
 213:./lib/chibios/os/rt/include/chlists.h **** /**
 214:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified queue is empty.
 215:./lib/chibios/os/rt/include/chlists.h ****  *
 216:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        pointer to the queue header
 217:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the queue.
 218:./lib/chibios/os/rt/include/chlists.h ****  *
 219:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 220:./lib/chibios/os/rt/include/chlists.h ****  */
 221:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_queue_isempty(const ch_queue_t *qp) {
 222:./lib/chibios/os/rt/include/chlists.h **** 
 223:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(qp->next == qp);
 224:./lib/chibios/os/rt/include/chlists.h **** }
 225:./lib/chibios/os/rt/include/chlists.h **** 
 226:./lib/chibios/os/rt/include/chlists.h **** /**
 227:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified queue is not empty.
 228:./lib/chibios/os/rt/include/chlists.h ****  *
 229:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        pointer to the queue header
 230:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the queue.
 231:./lib/chibios/os/rt/include/chlists.h ****  *
 232:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 233:./lib/chibios/os/rt/include/chlists.h ****  */
 234:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_queue_notempty(const ch_queue_t *qp) {
 100              		.loc 2 234 20 view .LVU26
 101              	.LBB93:
 235:./lib/chibios/os/rt/include/chlists.h **** 
 236:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(qp->next != qp);
 102              		.loc 2 236 3 view .LVU27
 103              		.loc 2 236 3 is_stmt 0 view .LVU28
 104              	.LBE93:
 105              	.LBE92:
 106              		.loc 1 152 10 view .LVU29
 107 0008 2368     		ldr	r3, [r4]
 108 000a 9C42     		cmp	r4, r3
 109 000c 00D1     		bne	.L4
 153:lib/chibios/os/rt/src/chsem.c ****     chSchReadyI((thread_t *)ch_queue_lifo_remove(&sp->queue))->u.rdymsg = msg;
 154:lib/chibios/os/rt/src/chsem.c ****   }
 155:lib/chibios/os/rt/src/chsem.c **** }
 110              		.loc 1 155 1 view .LVU30
 111 000e 38BD     		pop	{r3, r4, r5, pc}
 112              	.LVL4:
 113              	.L4:
 153:lib/chibios/os/rt/src/chsem.c ****     chSchReadyI((thread_t *)ch_queue_lifo_remove(&sp->queue))->u.rdymsg = msg;
 114              		.loc 1 153 5 is_stmt 1 view .LVU31
 115              	.LBB94:
 116              	.LBI94:
 237:./lib/chibios/os/rt/include/chlists.h **** }
 238:./lib/chibios/os/rt/include/chlists.h **** 
 239:./lib/chibios/os/rt/include/chlists.h **** /**
 240:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Inserts an element into a queue.
 241:./lib/chibios/os/rt/include/chlists.h ****  *
 242:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p         the pointer to the element to be inserted in the queue
 243:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        the pointer to the queue header
 244:./lib/chibios/os/rt/include/chlists.h ****  *
 245:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 246:./lib/chibios/os/rt/include/chlists.h ****  */
 247:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_insert(ch_queue_t *p, ch_queue_t *qp) {
 248:./lib/chibios/os/rt/include/chlists.h **** 
 249:./lib/chibios/os/rt/include/chlists.h ****   p->next       = qp;
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 251:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 252:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 253:./lib/chibios/os/rt/include/chlists.h **** }
 254:./lib/chibios/os/rt/include/chlists.h **** 
 255:./lib/chibios/os/rt/include/chlists.h **** /**
 256:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Removes the first-out element from a queue and returns it.
 257:./lib/chibios/os/rt/include/chlists.h ****  * @note    If the queue is priority ordered then this function returns the
 258:./lib/chibios/os/rt/include/chlists.h ****  *          element with the highest priority.
 259:./lib/chibios/os/rt/include/chlists.h ****  *
 260:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp        the pointer to the queue list header
 261:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 262:./lib/chibios/os/rt/include/chlists.h ****  *
 263:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 264:./lib/chibios/os/rt/include/chlists.h ****  */
 265:./lib/chibios/os/rt/include/chlists.h **** static inline ch_queue_t *ch_queue_fifo_remove(ch_queue_t *qp) {
 266:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 267:./lib/chibios/os/rt/include/chlists.h **** 
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next       = p->next;
 269:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 270:./lib/chibios/os/rt/include/chlists.h **** 
 271:./lib/chibios/os/rt/include/chlists.h ****   return p;
 272:./lib/chibios/os/rt/include/chlists.h **** }
 273:./lib/chibios/os/rt/include/chlists.h **** 
 274:./lib/chibios/os/rt/include/chlists.h **** /**
 275:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Removes the last-out element from a queue and returns it.
 276:./lib/chibios/os/rt/include/chlists.h ****  * @note    If the queue is priority ordered then this function returns the
 277:./lib/chibios/os/rt/include/chlists.h ****  *          element with the lowest priority.
 278:./lib/chibios/os/rt/include/chlists.h ****  *
 279:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] qp    the pointer to the queue list header
 280:./lib/chibios/os/rt/include/chlists.h ****  * @return          The removed element pointer.
 281:./lib/chibios/os/rt/include/chlists.h ****  *
 282:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 283:./lib/chibios/os/rt/include/chlists.h ****  */
 284:./lib/chibios/os/rt/include/chlists.h **** static inline ch_queue_t *ch_queue_lifo_remove(ch_queue_t *qp) {
 117              		.loc 2 284 27 view .LVU32
 118              	.LBB95:
 285:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->prev;
 119              		.loc 2 285 3 view .LVU33
 120              		.loc 2 285 15 is_stmt 0 view .LVU34
 121 0010 6068     		ldr	r0, [r4, #4]
 122              	.LVL5:
 286:./lib/chibios/os/rt/include/chlists.h **** 
 287:./lib/chibios/os/rt/include/chlists.h ****   qp->prev       = p->prev;
 123              		.loc 2 287 3 is_stmt 1 view .LVU35
 124              		.loc 2 287 21 is_stmt 0 view .LVU36
 125 0012 4368     		ldr	r3, [r0, #4]
 126              		.loc 2 287 18 view .LVU37
 127 0014 6360     		str	r3, [r4, #4]
 288:./lib/chibios/os/rt/include/chlists.h ****   qp->prev->next = qp;
 128              		.loc 2 288 3 is_stmt 1 view .LVU38
 129              		.loc 2 288 18 is_stmt 0 view .LVU39
 130 0016 1C60     		str	r4, [r3]
 289:./lib/chibios/os/rt/include/chlists.h **** 
 290:./lib/chibios/os/rt/include/chlists.h ****   return p;
 131              		.loc 2 290 3 is_stmt 1 view .LVU40
 132              	.LVL6:
 133              		.loc 2 290 3 is_stmt 0 view .LVU41
 134              	.LBE95:
 135              	.LBE94:
 153:lib/chibios/os/rt/src/chsem.c ****   }
 136              		.loc 1 153 5 view .LVU42
 137 0018 FFF7FEFF 		bl	chSchReadyI
 138              	.LVL7:
 153:lib/chibios/os/rt/src/chsem.c ****   }
 139              		.loc 1 153 73 view .LVU43
 140 001c 4562     		str	r5, [r0, #36]
 141 001e F3E7     		b	.L3
 142              		.cfi_endproc
 143              	.LFE291:
 145              		.section	.text.chSemResetWithMessage,"ax",%progbits
 146              		.align	1
 147              		.global	chSemResetWithMessage
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	chSemResetWithMessage:
 154              	.LVL8:
 155              	.LFB290:
 118:lib/chibios/os/rt/src/chsem.c **** 
 156              		.loc 1 118 65 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 120:lib/chibios/os/rt/src/chsem.c ****   chSemResetWithMessageI(sp, n, msg);
 160              		.loc 1 120 3 view .LVU45
 161              	.LBB96:
 162              	.LBI96:
 163              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 164              		.loc 3 355 20 view .LVU46
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 165              		.loc 3 357 3 view .LVU47
 166              	.LBB97:
 167              	.LBI97:
 168              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 169              		.loc 4 669 27 view .LVU48
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 170              		.loc 4 677 3 view .LVU49
 171              	.LBB98:
 172              	.LBI98:
 173              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 174              		.loc 5 491 27 view .LVU50
 175              	.LBB99:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 176              		.loc 5 493 3 view .LVU51
 177              	.LBE99:
 178              	.LBE98:
 179              	.LBE97:
 180              	.LBE96:
 118:lib/chibios/os/rt/src/chsem.c **** 
 181              		.loc 1 118 65 is_stmt 0 view .LVU52
 182 0000 08B5     		push	{r3, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 3, -8
 185              		.cfi_offset 14, -4
 186              	.LBB103:
 187              	.LBB102:
 188              	.LBB101:
 189              	.LBB100:
 190              		.loc 5 493 3 view .LVU53
 191 0002 2023     		movs	r3, #32
 192              		.syntax unified
 193              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 194 0004 83F31188 		MSR basepri, r3
 195              	@ 0 "" 2
 196              	.LVL9:
 197              		.loc 5 493 3 view .LVU54
 198              		.thumb
 199              		.syntax unified
 200              	.LBE100:
 201              	.LBE101:
 202              	.LBE102:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 203              		.loc 3 358 34 is_stmt 1 view .LVU55
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 204              		.loc 3 359 20 view .LVU56
 205              	.LBE103:
 121:lib/chibios/os/rt/src/chsem.c ****   chSchRescheduleS();
 206              		.loc 1 121 3 view .LVU57
 207 0008 FFF7FEFF 		bl	chSemResetWithMessageI
 208              	.LVL10:
 122:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 209              		.loc 1 122 3 view .LVU58
 210 000c FFF7FEFF 		bl	chSchRescheduleS
 211              	.LVL11:
 123:lib/chibios/os/rt/src/chsem.c **** }
 212              		.loc 1 123 3 view .LVU59
 213              	.LBB104:
 214              	.LBI104:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 215              		.loc 3 367 20 view .LVU60
 216              	.LBB105:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 217              		.loc 3 369 22 view .LVU61
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 218              		.loc 3 370 33 view .LVU62
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 219              		.loc 3 376 3 view .LVU63
 220              		.loc 3 376 3 view .LVU64
 221              		.loc 3 376 3 view .LVU65
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 222              		.loc 3 380 3 view .LVU66
 223              	.LBB106:
 224              	.LBI106:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 225              		.loc 4 693 27 view .LVU67
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 226              		.loc 4 696 3 view .LVU68
 227              	.LBB107:
 228              	.LBI107:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 229              		.loc 5 491 27 view .LVU69
 230              	.LBB108:
 231              		.loc 5 493 3 view .LVU70
 232 0010 0023     		movs	r3, #0
 233              		.syntax unified
 234              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 235 0012 83F31188 		MSR basepri, r3
 236              	@ 0 "" 2
 237              	.LVL12:
 238              		.loc 5 493 3 is_stmt 0 view .LVU71
 239              		.thumb
 240              		.syntax unified
 241              	.LBE108:
 242              	.LBE107:
 243              	.LBE106:
 244              	.LBE105:
 245              	.LBE104:
 124:lib/chibios/os/rt/src/chsem.c **** 
 246              		.loc 1 124 1 view .LVU72
 247 0016 08BD     		pop	{r3, pc}
 248              		.cfi_endproc
 249              	.LFE290:
 251              		.section	.text.chSemWaitS,"ax",%progbits
 252              		.align	1
 253              		.global	chSemWaitS
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	chSemWaitS:
 260              	.LVL13:
 261              	.LFB293:
 156:lib/chibios/os/rt/src/chsem.c **** 
 157:lib/chibios/os/rt/src/chsem.c **** /**
 158:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a wait operation on a semaphore.
 159:lib/chibios/os/rt/src/chsem.c ****  *
 160:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 161:lib/chibios/os/rt/src/chsem.c ****  * @return              A message specifying how the invoking thread has been
 162:lib/chibios/os/rt/src/chsem.c ****  *                      released from the semaphore.
 163:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_OK       if the thread has not stopped on the semaphore or the
 164:lib/chibios/os/rt/src/chsem.c ****  *                      semaphore has been signaled.
 165:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_RESET    if the semaphore has been reset using @p chSemReset().
 166:lib/chibios/os/rt/src/chsem.c ****  *
 167:lib/chibios/os/rt/src/chsem.c ****  * @api
 168:lib/chibios/os/rt/src/chsem.c ****  */
 169:lib/chibios/os/rt/src/chsem.c **** msg_t chSemWait(semaphore_t *sp) {
 170:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 171:lib/chibios/os/rt/src/chsem.c **** 
 172:lib/chibios/os/rt/src/chsem.c ****   chSysLock();
 173:lib/chibios/os/rt/src/chsem.c ****   msg = chSemWaitS(sp);
 174:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 175:lib/chibios/os/rt/src/chsem.c **** 
 176:lib/chibios/os/rt/src/chsem.c ****   return msg;
 177:lib/chibios/os/rt/src/chsem.c **** }
 178:lib/chibios/os/rt/src/chsem.c **** 
 179:lib/chibios/os/rt/src/chsem.c **** /**
 180:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a wait operation on a semaphore.
 181:lib/chibios/os/rt/src/chsem.c ****  *
 182:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 183:lib/chibios/os/rt/src/chsem.c ****  * @return              A message specifying how the invoking thread has been
 184:lib/chibios/os/rt/src/chsem.c ****  *                      released from the semaphore.
 185:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_OK       if the thread has not stopped on the semaphore or the
 186:lib/chibios/os/rt/src/chsem.c ****  *                      semaphore has been signaled.
 187:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_RESET    if the semaphore has been reset using @p chSemReset().
 188:lib/chibios/os/rt/src/chsem.c ****  *
 189:lib/chibios/os/rt/src/chsem.c ****  * @sclass
 190:lib/chibios/os/rt/src/chsem.c ****  */
 191:lib/chibios/os/rt/src/chsem.c **** msg_t chSemWaitS(semaphore_t *sp) {
 262              		.loc 1 191 35 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 192:lib/chibios/os/rt/src/chsem.c **** 
 193:lib/chibios/os/rt/src/chsem.c ****   chDbgCheckClassS();
 266              		.loc 1 193 21 view .LVU74
 194:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck(sp != NULL);
 267              		.loc 1 194 3 view .LVU75
 268              		.loc 1 194 3 view .LVU76
 269              		.loc 1 194 3 view .LVU77
 195:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sp->cnt >= (cnt_t)0) && ch_queue_isempty(&sp->queue)) ||
 270              		.loc 1 195 3 view .LVU78
 271              		.loc 1 195 3 view .LVU79
 272              		.loc 1 195 3 view .LVU80
 196:lib/chibios/os/rt/src/chsem.c ****               ((sp->cnt < (cnt_t)0) && ch_queue_notempty(&sp->queue)),
 197:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 198:lib/chibios/os/rt/src/chsem.c **** 
 199:lib/chibios/os/rt/src/chsem.c ****   if (--sp->cnt < (cnt_t)0) {
 273              		.loc 1 199 3 view .LVU81
 274              		.loc 1 199 7 is_stmt 0 view .LVU82
 275 0000 8368     		ldr	r3, [r0, #8]
 276 0002 013B     		subs	r3, r3, #1
 277              		.loc 1 199 6 view .LVU83
 278 0004 002B     		cmp	r3, #0
 191:lib/chibios/os/rt/src/chsem.c **** 
 279              		.loc 1 191 35 view .LVU84
 280 0006 10B5     		push	{r4, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 284              		.loc 1 199 6 view .LVU85
 285 0008 8360     		str	r3, [r0, #8]
 286 000a 0DDA     		bge	.L8
 287              	.LVL14:
 288              	.LBB113:
 289              	.LBI113:
 191:lib/chibios/os/rt/src/chsem.c **** 
 290              		.loc 1 191 7 is_stmt 1 view .LVU86
 291              	.LBB114:
 200:lib/chibios/os/rt/src/chsem.c ****     currp->u.wtsemp = sp;
 292              		.loc 1 200 5 view .LVU87
 293 000c 074C     		ldr	r4, .L9
 294              	.LBB115:
 295              	.LBB116:
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 296              		.loc 2 250 21 is_stmt 0 view .LVU88
 297 000e 4268     		ldr	r2, [r0, #4]
 298              	.LBE116:
 299              	.LBE115:
 300              		.loc 1 200 5 view .LVU89
 301 0010 A369     		ldr	r3, [r4, #24]
 302              		.loc 1 200 21 view .LVU90
 303 0012 5862     		str	r0, [r3, #36]
 201:lib/chibios/os/rt/src/chsem.c ****     sem_insert(currp, &sp->queue);
 304              		.loc 1 201 5 is_stmt 1 view .LVU91
 305              	.LVL15:
 306              	.LBB118:
 307              	.LBI115:
 247:./lib/chibios/os/rt/include/chlists.h **** 
 308              		.loc 2 247 20 view .LVU92
 309              	.LBB117:
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 310              		.loc 2 249 3 view .LVU93
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 311              		.loc 2 249 17 is_stmt 0 view .LVU94
 312 0014 1860     		str	r0, [r3]
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 313              		.loc 2 250 3 is_stmt 1 view .LVU95
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 314              		.loc 2 250 17 is_stmt 0 view .LVU96
 315 0016 5A60     		str	r2, [r3, #4]
 251:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 316              		.loc 2 251 3 is_stmt 1 view .LVU97
 251:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 317              		.loc 2 251 17 is_stmt 0 view .LVU98
 318 0018 1360     		str	r3, [r2]
 252:./lib/chibios/os/rt/include/chlists.h **** }
 319              		.loc 2 252 3 is_stmt 1 view .LVU99
 252:./lib/chibios/os/rt/include/chlists.h **** }
 320              		.loc 2 252 17 is_stmt 0 view .LVU100
 321 001a 4360     		str	r3, [r0, #4]
 322              	.LVL16:
 252:./lib/chibios/os/rt/include/chlists.h **** }
 323              		.loc 2 252 17 view .LVU101
 324              	.LBE117:
 325              	.LBE118:
 202:lib/chibios/os/rt/src/chsem.c ****     chSchGoSleepS(CH_STATE_WTSEM);
 326              		.loc 1 202 5 is_stmt 1 view .LVU102
 327 001c 0520     		movs	r0, #5
 328              	.LVL17:
 329              		.loc 1 202 5 is_stmt 0 view .LVU103
 330 001e FFF7FEFF 		bl	chSchGoSleepS
 331              	.LVL18:
 203:lib/chibios/os/rt/src/chsem.c **** 
 204:lib/chibios/os/rt/src/chsem.c ****     return currp->u.rdymsg;
 332              		.loc 1 204 5 is_stmt 1 view .LVU104
 333              		.loc 1 204 20 is_stmt 0 view .LVU105
 334 0022 A369     		ldr	r3, [r4, #24]
 335 0024 586A     		ldr	r0, [r3, #36]
 336              	.LVL19:
 337              	.L6:
 338              		.loc 1 204 20 view .LVU106
 339              	.LBE114:
 340              	.LBE113:
 205:lib/chibios/os/rt/src/chsem.c ****   }
 206:lib/chibios/os/rt/src/chsem.c **** 
 207:lib/chibios/os/rt/src/chsem.c ****   return MSG_OK;
 208:lib/chibios/os/rt/src/chsem.c **** }
 341              		.loc 1 208 1 view .LVU107
 342 0026 10BD     		pop	{r4, pc}
 343              	.LVL20:
 344              	.L8:
 207:lib/chibios/os/rt/src/chsem.c **** }
 345              		.loc 1 207 10 view .LVU108
 346 0028 0020     		movs	r0, #0
 347              	.LVL21:
 207:lib/chibios/os/rt/src/chsem.c **** }
 348              		.loc 1 207 10 view .LVU109
 349 002a FCE7     		b	.L6
 350              	.L10:
 351              		.align	2
 352              	.L9:
 353 002c 00000000 		.word	ch
 354              		.cfi_endproc
 355              	.LFE293:
 357              		.section	.text.chSemWait,"ax",%progbits
 358              		.align	1
 359              		.global	chSemWait
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	chSemWait:
 366              	.LVL22:
 367              	.LFB292:
 169:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 368              		.loc 1 169 34 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 170:lib/chibios/os/rt/src/chsem.c **** 
 372              		.loc 1 170 3 view .LVU111
 172:lib/chibios/os/rt/src/chsem.c ****   msg = chSemWaitS(sp);
 373              		.loc 1 172 3 view .LVU112
 374              	.LBB119:
 375              	.LBI119:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 376              		.loc 3 355 20 view .LVU113
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 377              		.loc 3 357 3 view .LVU114
 378              	.LBB120:
 379              	.LBI120:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 380              		.loc 4 669 27 view .LVU115
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 381              		.loc 4 677 3 view .LVU116
 382              	.LBB121:
 383              	.LBI121:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384              		.loc 5 491 27 view .LVU117
 385              	.LBB122:
 386              		.loc 5 493 3 view .LVU118
 387              	.LBE122:
 388              	.LBE121:
 389              	.LBE120:
 390              	.LBE119:
 169:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 391              		.loc 1 169 34 is_stmt 0 view .LVU119
 392 0000 08B5     		push	{r3, lr}
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 396              	.LBB126:
 397              	.LBB125:
 398              	.LBB124:
 399              	.LBB123:
 400              		.loc 5 493 3 view .LVU120
 401 0002 2023     		movs	r3, #32
 402              		.syntax unified
 403              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 404 0004 83F31188 		MSR basepri, r3
 405              	@ 0 "" 2
 406              	.LVL23:
 407              		.loc 5 493 3 view .LVU121
 408              		.thumb
 409              		.syntax unified
 410              	.LBE123:
 411              	.LBE124:
 412              	.LBE125:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 413              		.loc 3 358 34 is_stmt 1 view .LVU122
 359:./lib/chibios/os/rt/include/chsys.h **** }
 414              		.loc 3 359 20 view .LVU123
 415              	.LBE126:
 173:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 416              		.loc 1 173 3 view .LVU124
 173:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 417              		.loc 1 173 9 is_stmt 0 view .LVU125
 418 0008 FFF7FEFF 		bl	chSemWaitS
 419              	.LVL24:
 174:lib/chibios/os/rt/src/chsem.c **** 
 420              		.loc 1 174 3 is_stmt 1 view .LVU126
 421              	.LBB127:
 422              	.LBI127:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 423              		.loc 3 367 20 view .LVU127
 424              	.LBB128:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 425              		.loc 3 369 22 view .LVU128
 370:./lib/chibios/os/rt/include/chsys.h **** 
 426              		.loc 3 370 33 view .LVU129
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 427              		.loc 3 376 3 view .LVU130
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 428              		.loc 3 376 3 view .LVU131
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 429              		.loc 3 376 3 view .LVU132
 430              		.loc 3 380 3 view .LVU133
 431              	.LBB129:
 432              	.LBI129:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 433              		.loc 4 693 27 view .LVU134
 434              		.loc 4 696 3 view .LVU135
 435              	.LBB130:
 436              	.LBI130:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 437              		.loc 5 491 27 view .LVU136
 438              	.LBB131:
 439              		.loc 5 493 3 view .LVU137
 440 000c 0023     		movs	r3, #0
 441              		.syntax unified
 442              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 443 000e 83F31188 		MSR basepri, r3
 444              	@ 0 "" 2
 445              	.LVL25:
 446              		.loc 5 493 3 is_stmt 0 view .LVU138
 447              		.thumb
 448              		.syntax unified
 449              	.LBE131:
 450              	.LBE130:
 451              	.LBE129:
 452              	.LBE128:
 453              	.LBE127:
 176:lib/chibios/os/rt/src/chsem.c **** }
 454              		.loc 1 176 3 is_stmt 1 view .LVU139
 177:lib/chibios/os/rt/src/chsem.c **** 
 455              		.loc 1 177 1 is_stmt 0 view .LVU140
 456 0012 08BD     		pop	{r3, pc}
 457              		.cfi_endproc
 458              	.LFE292:
 460              		.section	.text.chSemWaitTimeoutS,"ax",%progbits
 461              		.align	1
 462              		.global	chSemWaitTimeoutS
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	chSemWaitTimeoutS:
 469              	.LVL26:
 470              	.LFB295:
 209:lib/chibios/os/rt/src/chsem.c **** 
 210:lib/chibios/os/rt/src/chsem.c **** /**
 211:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a wait operation on a semaphore with timeout specification.
 212:lib/chibios/os/rt/src/chsem.c ****  *
 213:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 214:lib/chibios/os/rt/src/chsem.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 215:lib/chibios/os/rt/src/chsem.c ****  *                      the following special values are allowed:
 216:lib/chibios/os/rt/src/chsem.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 217:lib/chibios/os/rt/src/chsem.c ****  *                      - @a TIME_INFINITE no timeout.
 218:lib/chibios/os/rt/src/chsem.c ****  *                      .
 219:lib/chibios/os/rt/src/chsem.c ****  * @return              A message specifying how the invoking thread has been
 220:lib/chibios/os/rt/src/chsem.c ****  *                      released from the semaphore.
 221:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_OK       if the thread has not stopped on the semaphore or the
 222:lib/chibios/os/rt/src/chsem.c ****  *                      semaphore has been signaled.
 223:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_RESET    if the semaphore has been reset using @p chSemReset().
 224:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_TIMEOUT  if the semaphore has not been signaled or reset within
 225:lib/chibios/os/rt/src/chsem.c ****  *                      the specified timeout.
 226:lib/chibios/os/rt/src/chsem.c ****  *
 227:lib/chibios/os/rt/src/chsem.c ****  * @api
 228:lib/chibios/os/rt/src/chsem.c ****  */
 229:lib/chibios/os/rt/src/chsem.c **** msg_t chSemWaitTimeout(semaphore_t *sp, sysinterval_t timeout) {
 230:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 231:lib/chibios/os/rt/src/chsem.c **** 
 232:lib/chibios/os/rt/src/chsem.c ****   chSysLock();
 233:lib/chibios/os/rt/src/chsem.c ****   msg = chSemWaitTimeoutS(sp, timeout);
 234:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 235:lib/chibios/os/rt/src/chsem.c **** 
 236:lib/chibios/os/rt/src/chsem.c ****   return msg;
 237:lib/chibios/os/rt/src/chsem.c **** }
 238:lib/chibios/os/rt/src/chsem.c **** 
 239:lib/chibios/os/rt/src/chsem.c **** /**
 240:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a wait operation on a semaphore with timeout specification.
 241:lib/chibios/os/rt/src/chsem.c ****  *
 242:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 243:lib/chibios/os/rt/src/chsem.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 244:lib/chibios/os/rt/src/chsem.c ****  *                      the following special values are allowed:
 245:lib/chibios/os/rt/src/chsem.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 246:lib/chibios/os/rt/src/chsem.c ****  *                      - @a TIME_INFINITE no timeout.
 247:lib/chibios/os/rt/src/chsem.c ****  *                      .
 248:lib/chibios/os/rt/src/chsem.c ****  * @return              A message specifying how the invoking thread has been
 249:lib/chibios/os/rt/src/chsem.c ****  *                      released from the semaphore.
 250:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_OK       if the thread has not stopped on the semaphore or the
 251:lib/chibios/os/rt/src/chsem.c ****  *                      semaphore has been signaled.
 252:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_RESET    if the semaphore has been reset using @p chSemReset().
 253:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_TIMEOUT  if the semaphore has not been signaled or reset within
 254:lib/chibios/os/rt/src/chsem.c ****  *                      the specified timeout.
 255:lib/chibios/os/rt/src/chsem.c ****  *
 256:lib/chibios/os/rt/src/chsem.c ****  * @sclass
 257:lib/chibios/os/rt/src/chsem.c ****  */
 258:lib/chibios/os/rt/src/chsem.c **** msg_t chSemWaitTimeoutS(semaphore_t *sp, sysinterval_t timeout) {
 471              		.loc 1 258 65 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 259:lib/chibios/os/rt/src/chsem.c **** 
 260:lib/chibios/os/rt/src/chsem.c ****   chDbgCheckClassS();
 476              		.loc 1 260 21 view .LVU142
 261:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck(sp != NULL);
 477              		.loc 1 261 3 view .LVU143
 478              		.loc 1 261 3 view .LVU144
 479              		.loc 1 261 3 view .LVU145
 262:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sp->cnt >= (cnt_t)0) && ch_queue_isempty(&sp->queue)) ||
 480              		.loc 1 262 3 view .LVU146
 481              		.loc 1 262 3 view .LVU147
 482              		.loc 1 262 3 view .LVU148
 263:lib/chibios/os/rt/src/chsem.c ****               ((sp->cnt < (cnt_t)0) && ch_queue_notempty(&sp->queue)),
 264:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 265:lib/chibios/os/rt/src/chsem.c **** 
 266:lib/chibios/os/rt/src/chsem.c ****   if (--sp->cnt < (cnt_t)0) {
 483              		.loc 1 266 3 view .LVU149
 484              		.loc 1 266 11 is_stmt 0 view .LVU150
 485 0000 8268     		ldr	r2, [r0, #8]
 258:lib/chibios/os/rt/src/chsem.c **** 
 486              		.loc 1 258 65 view .LVU151
 487 0002 10B4     		push	{r4}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 4, -4
 490              		.loc 1 266 7 view .LVU152
 491 0004 541E     		subs	r4, r2, #1
 492              		.loc 1 266 6 view .LVU153
 493 0006 002C     		cmp	r4, #0
 494 0008 8460     		str	r4, [r0, #8]
 495 000a 13DA     		bge	.L15
 267:lib/chibios/os/rt/src/chsem.c ****     if (TIME_IMMEDIATE == timeout) {
 496              		.loc 1 267 5 is_stmt 1 view .LVU154
 497              		.loc 1 267 8 is_stmt 0 view .LVU155
 498 000c 29B9     		cbnz	r1, .L14
 268:lib/chibios/os/rt/src/chsem.c ****       sp->cnt++;
 499              		.loc 1 268 7 is_stmt 1 view .LVU156
 500              		.loc 1 268 14 is_stmt 0 view .LVU157
 501 000e 8260     		str	r2, [r0, #8]
 269:lib/chibios/os/rt/src/chsem.c **** 
 270:lib/chibios/os/rt/src/chsem.c ****       return MSG_TIMEOUT;
 502              		.loc 1 270 7 is_stmt 1 view .LVU158
 503              		.loc 1 270 14 is_stmt 0 view .LVU159
 504 0010 4FF0FF30 		mov	r0, #-1
 505              	.LVL27:
 506              	.L12:
 271:lib/chibios/os/rt/src/chsem.c ****     }
 272:lib/chibios/os/rt/src/chsem.c ****     currp->u.wtsemp = sp;
 273:lib/chibios/os/rt/src/chsem.c ****     sem_insert(currp, &sp->queue);
 274:lib/chibios/os/rt/src/chsem.c **** 
 275:lib/chibios/os/rt/src/chsem.c ****     return chSchGoSleepTimeoutS(CH_STATE_WTSEM, timeout);
 276:lib/chibios/os/rt/src/chsem.c ****   }
 277:lib/chibios/os/rt/src/chsem.c **** 
 278:lib/chibios/os/rt/src/chsem.c ****   return MSG_OK;
 279:lib/chibios/os/rt/src/chsem.c **** }
 507              		.loc 1 279 1 view .LVU160
 508 0014 5DF8044B 		ldr	r4, [sp], #4
 509              		.cfi_remember_state
 510              		.cfi_restore 4
 511              		.cfi_def_cfa_offset 0
 512 0018 7047     		bx	lr
 513              	.LVL28:
 514              	.L14:
 515              		.cfi_restore_state
 516              	.LBB136:
 517              	.LBI136:
 258:lib/chibios/os/rt/src/chsem.c **** 
 518              		.loc 1 258 7 is_stmt 1 view .LVU161
 519              	.LBB137:
 272:lib/chibios/os/rt/src/chsem.c ****     sem_insert(currp, &sp->queue);
 520              		.loc 1 272 5 view .LVU162
 521 001a 074B     		ldr	r3, .L16
 522              	.LBB138:
 523              	.LBB139:
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 524              		.loc 2 250 21 is_stmt 0 view .LVU163
 525 001c 4268     		ldr	r2, [r0, #4]
 526              	.LBE139:
 527              	.LBE138:
 272:lib/chibios/os/rt/src/chsem.c ****     sem_insert(currp, &sp->queue);
 528              		.loc 1 272 5 view .LVU164
 529 001e 9B69     		ldr	r3, [r3, #24]
 530              	.LBE137:
 531              	.LBE136:
 532              		.loc 1 279 1 view .LVU165
 533 0020 5DF8044B 		ldr	r4, [sp], #4
 534              		.cfi_remember_state
 535              		.cfi_restore 4
 536              		.cfi_def_cfa_offset 0
 537              	.LBB143:
 538              	.LBB142:
 272:lib/chibios/os/rt/src/chsem.c ****     sem_insert(currp, &sp->queue);
 539              		.loc 1 272 21 view .LVU166
 540 0024 5862     		str	r0, [r3, #36]
 273:lib/chibios/os/rt/src/chsem.c **** 
 541              		.loc 1 273 5 is_stmt 1 view .LVU167
 542              	.LVL29:
 543              	.LBB141:
 544              	.LBI138:
 247:./lib/chibios/os/rt/include/chlists.h **** 
 545              		.loc 2 247 20 view .LVU168
 546              	.LBB140:
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 547              		.loc 2 249 3 view .LVU169
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 548              		.loc 2 249 17 is_stmt 0 view .LVU170
 549 0026 1860     		str	r0, [r3]
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 550              		.loc 2 250 3 is_stmt 1 view .LVU171
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 551              		.loc 2 250 17 is_stmt 0 view .LVU172
 552 0028 5A60     		str	r2, [r3, #4]
 251:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 553              		.loc 2 251 3 is_stmt 1 view .LVU173
 251:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 554              		.loc 2 251 17 is_stmt 0 view .LVU174
 555 002a 1360     		str	r3, [r2]
 252:./lib/chibios/os/rt/include/chlists.h **** }
 556              		.loc 2 252 3 is_stmt 1 view .LVU175
 252:./lib/chibios/os/rt/include/chlists.h **** }
 557              		.loc 2 252 17 is_stmt 0 view .LVU176
 558 002c 4360     		str	r3, [r0, #4]
 559              	.LVL30:
 252:./lib/chibios/os/rt/include/chlists.h **** }
 560              		.loc 2 252 17 view .LVU177
 561              	.LBE140:
 562              	.LBE141:
 275:lib/chibios/os/rt/src/chsem.c ****   }
 563              		.loc 1 275 5 is_stmt 1 view .LVU178
 275:lib/chibios/os/rt/src/chsem.c ****   }
 564              		.loc 1 275 12 is_stmt 0 view .LVU179
 565 002e 0520     		movs	r0, #5
 566              	.LVL31:
 275:lib/chibios/os/rt/src/chsem.c ****   }
 567              		.loc 1 275 12 view .LVU180
 568 0030 FFF7FEBF 		b	chSchGoSleepTimeoutS
 569              	.LVL32:
 570              	.L15:
 571              		.cfi_restore_state
 275:lib/chibios/os/rt/src/chsem.c ****   }
 572              		.loc 1 275 12 view .LVU181
 573              	.LBE142:
 574              	.LBE143:
 278:lib/chibios/os/rt/src/chsem.c **** }
 575              		.loc 1 278 10 view .LVU182
 576 0034 0020     		movs	r0, #0
 577              	.LVL33:
 278:lib/chibios/os/rt/src/chsem.c **** }
 578              		.loc 1 278 10 view .LVU183
 579 0036 EDE7     		b	.L12
 580              	.L17:
 581              		.align	2
 582              	.L16:
 583 0038 00000000 		.word	ch
 584              		.cfi_endproc
 585              	.LFE295:
 587              		.section	.text.chSemWaitTimeout,"ax",%progbits
 588              		.align	1
 589              		.global	chSemWaitTimeout
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	chSemWaitTimeout:
 596              	.LVL34:
 597              	.LFB294:
 229:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 598              		.loc 1 229 64 is_stmt 1 view -0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 230:lib/chibios/os/rt/src/chsem.c **** 
 602              		.loc 1 230 3 view .LVU185
 232:lib/chibios/os/rt/src/chsem.c ****   msg = chSemWaitTimeoutS(sp, timeout);
 603              		.loc 1 232 3 view .LVU186
 604              	.LBB144:
 605              	.LBI144:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 606              		.loc 3 355 20 view .LVU187
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 607              		.loc 3 357 3 view .LVU188
 608              	.LBB145:
 609              	.LBI145:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 610              		.loc 4 669 27 view .LVU189
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 611              		.loc 4 677 3 view .LVU190
 612              	.LBB146:
 613              	.LBI146:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 614              		.loc 5 491 27 view .LVU191
 615              	.LBB147:
 616              		.loc 5 493 3 view .LVU192
 617              	.LBE147:
 618              	.LBE146:
 619              	.LBE145:
 620              	.LBE144:
 229:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 621              		.loc 1 229 64 is_stmt 0 view .LVU193
 622 0000 08B5     		push	{r3, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 3, -8
 625              		.cfi_offset 14, -4
 626              	.LBB151:
 627              	.LBB150:
 628              	.LBB149:
 629              	.LBB148:
 630              		.loc 5 493 3 view .LVU194
 631 0002 2023     		movs	r3, #32
 632              		.syntax unified
 633              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 634 0004 83F31188 		MSR basepri, r3
 635              	@ 0 "" 2
 636              	.LVL35:
 637              		.loc 5 493 3 view .LVU195
 638              		.thumb
 639              		.syntax unified
 640              	.LBE148:
 641              	.LBE149:
 642              	.LBE150:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 643              		.loc 3 358 34 is_stmt 1 view .LVU196
 359:./lib/chibios/os/rt/include/chsys.h **** }
 644              		.loc 3 359 20 view .LVU197
 645              	.LBE151:
 233:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 646              		.loc 1 233 3 view .LVU198
 233:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 647              		.loc 1 233 9 is_stmt 0 view .LVU199
 648 0008 FFF7FEFF 		bl	chSemWaitTimeoutS
 649              	.LVL36:
 234:lib/chibios/os/rt/src/chsem.c **** 
 650              		.loc 1 234 3 is_stmt 1 view .LVU200
 651              	.LBB152:
 652              	.LBI152:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 653              		.loc 3 367 20 view .LVU201
 654              	.LBB153:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 655              		.loc 3 369 22 view .LVU202
 370:./lib/chibios/os/rt/include/chsys.h **** 
 656              		.loc 3 370 33 view .LVU203
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 657              		.loc 3 376 3 view .LVU204
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 658              		.loc 3 376 3 view .LVU205
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 659              		.loc 3 376 3 view .LVU206
 660              		.loc 3 380 3 view .LVU207
 661              	.LBB154:
 662              	.LBI154:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 663              		.loc 4 693 27 view .LVU208
 664              		.loc 4 696 3 view .LVU209
 665              	.LBB155:
 666              	.LBI155:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 667              		.loc 5 491 27 view .LVU210
 668              	.LBB156:
 669              		.loc 5 493 3 view .LVU211
 670 000c 0023     		movs	r3, #0
 671              		.syntax unified
 672              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 673 000e 83F31188 		MSR basepri, r3
 674              	@ 0 "" 2
 675              	.LVL37:
 676              		.loc 5 493 3 is_stmt 0 view .LVU212
 677              		.thumb
 678              		.syntax unified
 679              	.LBE156:
 680              	.LBE155:
 681              	.LBE154:
 682              	.LBE153:
 683              	.LBE152:
 236:lib/chibios/os/rt/src/chsem.c **** }
 684              		.loc 1 236 3 is_stmt 1 view .LVU213
 237:lib/chibios/os/rt/src/chsem.c **** 
 685              		.loc 1 237 1 is_stmt 0 view .LVU214
 686 0012 08BD     		pop	{r3, pc}
 687              		.cfi_endproc
 688              	.LFE294:
 690              		.section	.text.chSemSignal,"ax",%progbits
 691              		.align	1
 692              		.global	chSemSignal
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	chSemSignal:
 699              	.LVL38:
 700              	.LFB296:
 280:lib/chibios/os/rt/src/chsem.c **** 
 281:lib/chibios/os/rt/src/chsem.c **** /**
 282:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a signal operation on a semaphore.
 283:lib/chibios/os/rt/src/chsem.c ****  *
 284:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 285:lib/chibios/os/rt/src/chsem.c ****  *
 286:lib/chibios/os/rt/src/chsem.c ****  * @api
 287:lib/chibios/os/rt/src/chsem.c ****  */
 288:lib/chibios/os/rt/src/chsem.c **** void chSemSignal(semaphore_t *sp) {
 701              		.loc 1 288 35 is_stmt 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 289:lib/chibios/os/rt/src/chsem.c **** 
 290:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck(sp != NULL);
 705              		.loc 1 290 3 view .LVU216
 706              		.loc 1 290 3 view .LVU217
 707              		.loc 1 290 3 view .LVU218
 291:lib/chibios/os/rt/src/chsem.c **** 
 292:lib/chibios/os/rt/src/chsem.c ****   chSysLock();
 708              		.loc 1 292 3 view .LVU219
 709              	.LBB157:
 710              	.LBI157:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 711              		.loc 3 355 20 view .LVU220
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 712              		.loc 3 357 3 view .LVU221
 713              	.LBB158:
 714              	.LBI158:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 715              		.loc 4 669 27 view .LVU222
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 716              		.loc 4 677 3 view .LVU223
 717              	.LBB159:
 718              	.LBI159:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 719              		.loc 5 491 27 view .LVU224
 720              	.LBB160:
 721              		.loc 5 493 3 view .LVU225
 722              	.LBE160:
 723              	.LBE159:
 724              	.LBE158:
 725              	.LBE157:
 288:lib/chibios/os/rt/src/chsem.c **** 
 726              		.loc 1 288 35 is_stmt 0 view .LVU226
 727 0000 08B5     		push	{r3, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 3, -8
 730              		.cfi_offset 14, -4
 731              	.LBB164:
 732              	.LBB163:
 733              	.LBB162:
 734              	.LBB161:
 735              		.loc 5 493 3 view .LVU227
 736 0002 2023     		movs	r3, #32
 737              		.syntax unified
 738              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 739 0004 83F31188 		MSR basepri, r3
 740              	@ 0 "" 2
 741              	.LVL39:
 742              		.loc 5 493 3 view .LVU228
 743              		.thumb
 744              		.syntax unified
 745              	.LBE161:
 746              	.LBE162:
 747              	.LBE163:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 748              		.loc 3 358 34 is_stmt 1 view .LVU229
 359:./lib/chibios/os/rt/include/chsys.h **** }
 749              		.loc 3 359 20 view .LVU230
 750              	.LBE164:
 293:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sp->cnt >= (cnt_t)0) && ch_queue_isempty(&sp->queue)) ||
 751              		.loc 1 293 3 view .LVU231
 752              		.loc 1 293 3 view .LVU232
 753              		.loc 1 293 3 view .LVU233
 294:lib/chibios/os/rt/src/chsem.c ****               ((sp->cnt < (cnt_t)0) && ch_queue_notempty(&sp->queue)),
 295:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 296:lib/chibios/os/rt/src/chsem.c ****   if (++sp->cnt <= (cnt_t)0) {
 754              		.loc 1 296 3 view .LVU234
 755              		.loc 1 296 7 is_stmt 0 view .LVU235
 756 0008 8368     		ldr	r3, [r0, #8]
 757 000a 0133     		adds	r3, r3, #1
 758              		.loc 1 296 6 view .LVU236
 759 000c 002B     		cmp	r3, #0
 760 000e 8360     		str	r3, [r0, #8]
 761 0010 07DC     		bgt	.L20
 297:lib/chibios/os/rt/src/chsem.c ****     chSchWakeupS((thread_t *)ch_queue_fifo_remove(&sp->queue), MSG_OK);
 762              		.loc 1 297 5 is_stmt 1 view .LVU237
 763              	.LVL40:
 764              	.LBB165:
 765              	.LBI165:
 265:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 766              		.loc 2 265 27 view .LVU238
 767              	.LBB166:
 266:./lib/chibios/os/rt/include/chlists.h **** 
 768              		.loc 2 266 3 view .LVU239
 266:./lib/chibios/os/rt/include/chlists.h **** 
 769              		.loc 2 266 15 is_stmt 0 view .LVU240
 770 0012 0368     		ldr	r3, [r0]
 771              	.LVL41:
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 772              		.loc 2 268 3 is_stmt 1 view .LVU241
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 773              		.loc 2 268 21 is_stmt 0 view .LVU242
 774 0014 1A68     		ldr	r2, [r3]
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 775              		.loc 2 268 18 view .LVU243
 776 0016 0260     		str	r2, [r0]
 269:./lib/chibios/os/rt/include/chlists.h **** 
 777              		.loc 2 269 3 is_stmt 1 view .LVU244
 778              	.LBE166:
 779              	.LBE165:
 780              		.loc 1 297 5 is_stmt 0 view .LVU245
 781 0018 0021     		movs	r1, #0
 782              	.LBB168:
 783              	.LBB167:
 269:./lib/chibios/os/rt/include/chlists.h **** 
 784              		.loc 2 269 18 view .LVU246
 785 001a 5060     		str	r0, [r2, #4]
 271:./lib/chibios/os/rt/include/chlists.h **** }
 786              		.loc 2 271 3 is_stmt 1 view .LVU247
 787              	.LVL42:
 271:./lib/chibios/os/rt/include/chlists.h **** }
 788              		.loc 2 271 3 is_stmt 0 view .LVU248
 789              	.LBE167:
 790              	.LBE168:
 791              		.loc 1 297 5 view .LVU249
 792 001c 1846     		mov	r0, r3
 793              	.LVL43:
 794              		.loc 1 297 5 view .LVU250
 795 001e FFF7FEFF 		bl	chSchWakeupS
 796              	.LVL44:
 797              	.L20:
 298:lib/chibios/os/rt/src/chsem.c ****   }
 299:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 798              		.loc 1 299 3 is_stmt 1 view .LVU251
 799              	.LBB169:
 800              	.LBI169:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 801              		.loc 3 367 20 view .LVU252
 802              	.LBB170:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 803              		.loc 3 369 22 view .LVU253
 370:./lib/chibios/os/rt/include/chsys.h **** 
 804              		.loc 3 370 33 view .LVU254
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 805              		.loc 3 376 3 view .LVU255
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 806              		.loc 3 376 3 view .LVU256
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 807              		.loc 3 376 3 view .LVU257
 808              		.loc 3 380 3 view .LVU258
 809              	.LBB171:
 810              	.LBI171:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 811              		.loc 4 693 27 view .LVU259
 812              		.loc 4 696 3 view .LVU260
 813              	.LBB172:
 814              	.LBI172:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 815              		.loc 5 491 27 view .LVU261
 816              	.LBB173:
 817              		.loc 5 493 3 view .LVU262
 818 0022 0023     		movs	r3, #0
 819              		.syntax unified
 820              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 821 0024 83F31188 		MSR basepri, r3
 822              	@ 0 "" 2
 823              	.LVL45:
 824              		.loc 5 493 3 is_stmt 0 view .LVU263
 825              		.thumb
 826              		.syntax unified
 827              	.LBE173:
 828              	.LBE172:
 829              	.LBE171:
 830              	.LBE170:
 831              	.LBE169:
 300:lib/chibios/os/rt/src/chsem.c **** }
 832              		.loc 1 300 1 view .LVU264
 833 0028 08BD     		pop	{r3, pc}
 834              		.cfi_endproc
 835              	.LFE296:
 837              		.section	.text.chSemSignalI,"ax",%progbits
 838              		.align	1
 839              		.global	chSemSignalI
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu fpv4-sp-d16
 845              	chSemSignalI:
 846              	.LVL46:
 847              	.LFB297:
 301:lib/chibios/os/rt/src/chsem.c **** 
 302:lib/chibios/os/rt/src/chsem.c **** /**
 303:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs a signal operation on a semaphore.
 304:lib/chibios/os/rt/src/chsem.c ****  * @post    This function does not reschedule so a call to a rescheduling
 305:lib/chibios/os/rt/src/chsem.c ****  *          function must be performed before unlocking the kernel. Note that
 306:lib/chibios/os/rt/src/chsem.c ****  *          interrupt handlers always reschedule on exit so an explicit
 307:lib/chibios/os/rt/src/chsem.c ****  *          reschedule must not be performed in ISRs.
 308:lib/chibios/os/rt/src/chsem.c ****  *
 309:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp    pointer to a @p semaphore_t structure
 310:lib/chibios/os/rt/src/chsem.c ****  *
 311:lib/chibios/os/rt/src/chsem.c ****  * @iclass
 312:lib/chibios/os/rt/src/chsem.c ****  */
 313:lib/chibios/os/rt/src/chsem.c **** void chSemSignalI(semaphore_t *sp) {
 848              		.loc 1 313 36 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 314:lib/chibios/os/rt/src/chsem.c **** 
 315:lib/chibios/os/rt/src/chsem.c ****   chDbgCheckClassI();
 853              		.loc 1 315 21 view .LVU266
 316:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck(sp != NULL);
 854              		.loc 1 316 3 view .LVU267
 855              		.loc 1 316 3 view .LVU268
 856              		.loc 1 316 3 view .LVU269
 317:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sp->cnt >= (cnt_t)0) && ch_queue_isempty(&sp->queue)) ||
 857              		.loc 1 317 3 view .LVU270
 858              		.loc 1 317 3 view .LVU271
 859              		.loc 1 317 3 view .LVU272
 318:lib/chibios/os/rt/src/chsem.c ****               ((sp->cnt < (cnt_t)0) && ch_queue_notempty(&sp->queue)),
 319:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 320:lib/chibios/os/rt/src/chsem.c **** 
 321:lib/chibios/os/rt/src/chsem.c ****   if (++sp->cnt <= (cnt_t)0) {
 860              		.loc 1 321 3 view .LVU273
 861              		.loc 1 321 7 is_stmt 0 view .LVU274
 862 0000 8368     		ldr	r3, [r0, #8]
 863 0002 0133     		adds	r3, r3, #1
 864              		.loc 1 321 6 view .LVU275
 865 0004 002B     		cmp	r3, #0
 866 0006 8360     		str	r3, [r0, #8]
 867 0008 08DC     		bgt	.L21
 868              	.LBB174:
 322:lib/chibios/os/rt/src/chsem.c ****     /* Note, it is done this way in order to allow a tail call on
 323:lib/chibios/os/rt/src/chsem.c ****              chSchReadyI().*/
 324:lib/chibios/os/rt/src/chsem.c ****     thread_t *tp = (thread_t *)ch_queue_fifo_remove(&sp->queue);
 869              		.loc 1 324 5 is_stmt 1 view .LVU276
 870              	.LVL47:
 871              	.LBB175:
 872              	.LBI175:
 265:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 873              		.loc 2 265 27 view .LVU277
 874              	.LBB176:
 266:./lib/chibios/os/rt/include/chlists.h **** 
 875              		.loc 2 266 3 view .LVU278
 266:./lib/chibios/os/rt/include/chlists.h **** 
 876              		.loc 2 266 15 is_stmt 0 view .LVU279
 877 000a 0368     		ldr	r3, [r0]
 878              	.LVL48:
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 879              		.loc 2 268 3 is_stmt 1 view .LVU280
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 880              		.loc 2 268 21 is_stmt 0 view .LVU281
 881 000c 1A68     		ldr	r2, [r3]
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 882              		.loc 2 268 18 view .LVU282
 883 000e 0260     		str	r2, [r0]
 269:./lib/chibios/os/rt/include/chlists.h **** 
 884              		.loc 2 269 3 is_stmt 1 view .LVU283
 269:./lib/chibios/os/rt/include/chlists.h **** 
 885              		.loc 2 269 18 is_stmt 0 view .LVU284
 886 0010 5060     		str	r0, [r2, #4]
 271:./lib/chibios/os/rt/include/chlists.h **** }
 887              		.loc 2 271 3 is_stmt 1 view .LVU285
 888              	.LVL49:
 271:./lib/chibios/os/rt/include/chlists.h **** }
 889              		.loc 2 271 3 is_stmt 0 view .LVU286
 890              	.LBE176:
 891              	.LBE175:
 325:lib/chibios/os/rt/src/chsem.c ****     tp->u.rdymsg = MSG_OK;
 892              		.loc 1 325 5 is_stmt 1 view .LVU287
 893              		.loc 1 325 18 is_stmt 0 view .LVU288
 894 0012 0022     		movs	r2, #0
 895 0014 5A62     		str	r2, [r3, #36]
 326:lib/chibios/os/rt/src/chsem.c ****     (void) chSchReadyI(tp);
 896              		.loc 1 326 5 is_stmt 1 view .LVU289
 897              		.loc 1 326 12 is_stmt 0 view .LVU290
 898 0016 1846     		mov	r0, r3
 899              	.LVL50:
 900              		.loc 1 326 12 view .LVU291
 901 0018 FFF7FEBF 		b	chSchReadyI
 902              	.LVL51:
 903              	.L21:
 904              		.loc 1 326 12 view .LVU292
 905              	.LBE174:
 327:lib/chibios/os/rt/src/chsem.c ****   }
 328:lib/chibios/os/rt/src/chsem.c **** }
 906              		.loc 1 328 1 view .LVU293
 907 001c 7047     		bx	lr
 908              		.cfi_endproc
 909              	.LFE297:
 911              		.section	.text.chSemAddCounterI,"ax",%progbits
 912              		.align	1
 913              		.global	chSemAddCounterI
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv4-sp-d16
 919              	chSemAddCounterI:
 920              	.LVL52:
 921              	.LFB298:
 329:lib/chibios/os/rt/src/chsem.c **** 
 330:lib/chibios/os/rt/src/chsem.c **** /**
 331:lib/chibios/os/rt/src/chsem.c ****  * @brief   Adds the specified value to the semaphore counter.
 332:lib/chibios/os/rt/src/chsem.c ****  * @post    This function does not reschedule so a call to a rescheduling
 333:lib/chibios/os/rt/src/chsem.c ****  *          function must be performed before unlocking the kernel. Note that
 334:lib/chibios/os/rt/src/chsem.c ****  *          interrupt handlers always reschedule on exit so an explicit
 335:lib/chibios/os/rt/src/chsem.c ****  *          reschedule must not be performed in ISRs.
 336:lib/chibios/os/rt/src/chsem.c ****  *
 337:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sp        pointer to a @p semaphore_t structure
 338:lib/chibios/os/rt/src/chsem.c ****  * @param[in] n         value to be added to the semaphore counter. The value
 339:lib/chibios/os/rt/src/chsem.c ****  *                      must be positive.
 340:lib/chibios/os/rt/src/chsem.c ****  *
 341:lib/chibios/os/rt/src/chsem.c ****  * @iclass
 342:lib/chibios/os/rt/src/chsem.c ****  */
 343:lib/chibios/os/rt/src/chsem.c **** void chSemAddCounterI(semaphore_t *sp, cnt_t n) {
 922              		.loc 1 343 49 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 344:lib/chibios/os/rt/src/chsem.c **** 
 345:lib/chibios/os/rt/src/chsem.c ****   chDbgCheckClassI();
 926              		.loc 1 345 21 view .LVU295
 346:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck((sp != NULL) && (n > (cnt_t)0));
 927              		.loc 1 346 3 view .LVU296
 928              		.loc 1 346 3 view .LVU297
 929              		.loc 1 346 3 view .LVU298
 347:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sp->cnt >= (cnt_t)0) && ch_queue_isempty(&sp->queue)) ||
 930              		.loc 1 347 3 view .LVU299
 931              		.loc 1 347 3 view .LVU300
 343:lib/chibios/os/rt/src/chsem.c **** 
 932              		.loc 1 343 49 is_stmt 0 view .LVU301
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 4, -16
 936              		.cfi_offset 5, -12
 937              		.cfi_offset 6, -8
 938              		.cfi_offset 14, -4
 343:lib/chibios/os/rt/src/chsem.c **** 
 939              		.loc 1 343 49 view .LVU302
 940 0002 0446     		mov	r4, r0
 941 0004 0D46     		mov	r5, r1
 348:lib/chibios/os/rt/src/chsem.c ****               ((sp->cnt < (cnt_t)0) && ch_queue_notempty(&sp->queue)),
 349:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 350:lib/chibios/os/rt/src/chsem.c **** 
 351:lib/chibios/os/rt/src/chsem.c ****   while (n > (cnt_t)0) {
 352:lib/chibios/os/rt/src/chsem.c ****     if (++sp->cnt <= (cnt_t)0) {
 353:lib/chibios/os/rt/src/chsem.c ****       chSchReadyI((thread_t *)ch_queue_fifo_remove(&sp->queue))->u.rdymsg = MSG_OK;
 942              		.loc 1 353 75 view .LVU303
 943 0006 0026     		movs	r6, #0
 944              	.LVL53:
 945              	.L24:
 351:lib/chibios/os/rt/src/chsem.c ****     if (++sp->cnt <= (cnt_t)0) {
 946              		.loc 1 351 12 is_stmt 1 view .LVU304
 947 0008 002D     		cmp	r5, #0
 948 000a 00DC     		bgt	.L26
 354:lib/chibios/os/rt/src/chsem.c ****     }
 355:lib/chibios/os/rt/src/chsem.c ****     n--;
 356:lib/chibios/os/rt/src/chsem.c ****   }
 357:lib/chibios/os/rt/src/chsem.c **** }
 949              		.loc 1 357 1 is_stmt 0 view .LVU305
 950 000c 70BD     		pop	{r4, r5, r6, pc}
 951              	.LVL54:
 952              	.L26:
 352:lib/chibios/os/rt/src/chsem.c ****       chSchReadyI((thread_t *)ch_queue_fifo_remove(&sp->queue))->u.rdymsg = MSG_OK;
 953              		.loc 1 352 5 is_stmt 1 view .LVU306
 352:lib/chibios/os/rt/src/chsem.c ****       chSchReadyI((thread_t *)ch_queue_fifo_remove(&sp->queue))->u.rdymsg = MSG_OK;
 954              		.loc 1 352 9 is_stmt 0 view .LVU307
 955 000e A368     		ldr	r3, [r4, #8]
 956 0010 0133     		adds	r3, r3, #1
 352:lib/chibios/os/rt/src/chsem.c ****       chSchReadyI((thread_t *)ch_queue_fifo_remove(&sp->queue))->u.rdymsg = MSG_OK;
 957              		.loc 1 352 8 view .LVU308
 958 0012 002B     		cmp	r3, #0
 959 0014 A360     		str	r3, [r4, #8]
 960 0016 06DC     		bgt	.L25
 353:lib/chibios/os/rt/src/chsem.c ****     }
 961              		.loc 1 353 7 is_stmt 1 view .LVU309
 962              	.LVL55:
 963              	.LBB177:
 964              	.LBI177:
 265:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 965              		.loc 2 265 27 view .LVU310
 966              	.LBB178:
 266:./lib/chibios/os/rt/include/chlists.h **** 
 967              		.loc 2 266 3 view .LVU311
 266:./lib/chibios/os/rt/include/chlists.h **** 
 968              		.loc 2 266 15 is_stmt 0 view .LVU312
 969 0018 2068     		ldr	r0, [r4]
 970              	.LVL56:
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 971              		.loc 2 268 3 is_stmt 1 view .LVU313
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 972              		.loc 2 268 21 is_stmt 0 view .LVU314
 973 001a 0368     		ldr	r3, [r0]
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 974              		.loc 2 268 18 view .LVU315
 975 001c 2360     		str	r3, [r4]
 269:./lib/chibios/os/rt/include/chlists.h **** 
 976              		.loc 2 269 3 is_stmt 1 view .LVU316
 269:./lib/chibios/os/rt/include/chlists.h **** 
 977              		.loc 2 269 18 is_stmt 0 view .LVU317
 978 001e 5C60     		str	r4, [r3, #4]
 271:./lib/chibios/os/rt/include/chlists.h **** }
 979              		.loc 2 271 3 is_stmt 1 view .LVU318
 980              	.LVL57:
 271:./lib/chibios/os/rt/include/chlists.h **** }
 981              		.loc 2 271 3 is_stmt 0 view .LVU319
 982              	.LBE178:
 983              	.LBE177:
 353:lib/chibios/os/rt/src/chsem.c ****     }
 984              		.loc 1 353 7 view .LVU320
 985 0020 FFF7FEFF 		bl	chSchReadyI
 986              	.LVL58:
 353:lib/chibios/os/rt/src/chsem.c ****     }
 987              		.loc 1 353 75 view .LVU321
 988 0024 4662     		str	r6, [r0, #36]
 989              	.L25:
 355:lib/chibios/os/rt/src/chsem.c ****   }
 990              		.loc 1 355 5 is_stmt 1 view .LVU322
 355:lib/chibios/os/rt/src/chsem.c ****   }
 991              		.loc 1 355 6 is_stmt 0 view .LVU323
 992 0026 013D     		subs	r5, r5, #1
 993              	.LVL59:
 355:lib/chibios/os/rt/src/chsem.c ****   }
 994              		.loc 1 355 6 view .LVU324
 995 0028 EEE7     		b	.L24
 996              		.cfi_endproc
 997              	.LFE298:
 999              		.section	.text.chSemSignalWait,"ax",%progbits
 1000              		.align	1
 1001              		.global	chSemSignalWait
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv4-sp-d16
 1007              	chSemSignalWait:
 1008              	.LVL60:
 1009              	.LFB299:
 358:lib/chibios/os/rt/src/chsem.c **** 
 359:lib/chibios/os/rt/src/chsem.c **** /**
 360:lib/chibios/os/rt/src/chsem.c ****  * @brief   Performs atomic signal and wait operations on two semaphores.
 361:lib/chibios/os/rt/src/chsem.c ****  *
 362:lib/chibios/os/rt/src/chsem.c ****  * @param[in] sps       pointer to a @p semaphore_t structure to be signaled
 363:lib/chibios/os/rt/src/chsem.c ****  * @param[in] spw       pointer to a @p semaphore_t structure to wait on
 364:lib/chibios/os/rt/src/chsem.c ****  * @return              A message specifying how the invoking thread has been
 365:lib/chibios/os/rt/src/chsem.c ****  *                      released from the semaphore.
 366:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_OK       if the thread has not stopped on the semaphore or the
 367:lib/chibios/os/rt/src/chsem.c ****  *                      semaphore has been signaled.
 368:lib/chibios/os/rt/src/chsem.c ****  * @retval MSG_RESET    if the semaphore has been reset using @p chSemReset().
 369:lib/chibios/os/rt/src/chsem.c ****  *
 370:lib/chibios/os/rt/src/chsem.c ****  * @api
 371:lib/chibios/os/rt/src/chsem.c ****  */
 372:lib/chibios/os/rt/src/chsem.c **** msg_t chSemSignalWait(semaphore_t *sps, semaphore_t *spw) {
 1010              		.loc 1 372 59 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 373:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 1014              		.loc 1 373 3 view .LVU326
 374:lib/chibios/os/rt/src/chsem.c **** 
 375:lib/chibios/os/rt/src/chsem.c ****   chDbgCheck((sps != NULL) && (spw != NULL));
 1015              		.loc 1 375 3 view .LVU327
 1016              		.loc 1 375 3 view .LVU328
 1017              		.loc 1 375 3 view .LVU329
 376:lib/chibios/os/rt/src/chsem.c **** 
 377:lib/chibios/os/rt/src/chsem.c ****   chSysLock();
 1018              		.loc 1 377 3 view .LVU330
 1019              	.LBB179:
 1020              	.LBI179:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1021              		.loc 3 355 20 view .LVU331
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1022              		.loc 3 357 3 view .LVU332
 1023              	.LBB180:
 1024              	.LBI180:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1025              		.loc 4 669 27 view .LVU333
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1026              		.loc 4 677 3 view .LVU334
 1027              	.LBB181:
 1028              	.LBI181:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1029              		.loc 5 491 27 view .LVU335
 1030              	.LBB182:
 1031              		.loc 5 493 3 view .LVU336
 1032              	.LBE182:
 1033              	.LBE181:
 1034              	.LBE180:
 1035              	.LBE179:
 372:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 1036              		.loc 1 372 59 is_stmt 0 view .LVU337
 1037 0000 38B5     		push	{r3, r4, r5, lr}
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 3, -16
 1040              		.cfi_offset 4, -12
 1041              		.cfi_offset 5, -8
 1042              		.cfi_offset 14, -4
 372:lib/chibios/os/rt/src/chsem.c ****   msg_t msg;
 1043              		.loc 1 372 59 view .LVU338
 1044 0002 0C46     		mov	r4, r1
 1045              	.LBB186:
 1046              	.LBB185:
 1047              	.LBB184:
 1048              	.LBB183:
 1049              		.loc 5 493 3 view .LVU339
 1050 0004 2023     		movs	r3, #32
 1051              		.syntax unified
 1052              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1053 0006 83F31188 		MSR basepri, r3
 1054              	@ 0 "" 2
 1055              	.LVL61:
 1056              		.loc 5 493 3 view .LVU340
 1057              		.thumb
 1058              		.syntax unified
 1059              	.LBE183:
 1060              	.LBE184:
 1061              	.LBE185:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1062              		.loc 3 358 34 is_stmt 1 view .LVU341
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1063              		.loc 3 359 20 view .LVU342
 1064              	.LBE186:
 378:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((sps->cnt >= (cnt_t)0) && ch_queue_isempty(&sps->queue)) ||
 1065              		.loc 1 378 3 view .LVU343
 1066              		.loc 1 378 3 view .LVU344
 1067              		.loc 1 378 3 view .LVU345
 379:lib/chibios/os/rt/src/chsem.c ****               ((sps->cnt < (cnt_t)0) && ch_queue_notempty(&sps->queue)),
 380:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 381:lib/chibios/os/rt/src/chsem.c ****   chDbgAssert(((spw->cnt >= (cnt_t)0) && ch_queue_isempty(&spw->queue)) ||
 1068              		.loc 1 381 3 view .LVU346
 1069              		.loc 1 381 3 view .LVU347
 1070              		.loc 1 381 3 view .LVU348
 382:lib/chibios/os/rt/src/chsem.c ****               ((spw->cnt < (cnt_t)0) && ch_queue_notempty(&spw->queue)),
 383:lib/chibios/os/rt/src/chsem.c ****               "inconsistent semaphore");
 384:lib/chibios/os/rt/src/chsem.c ****   if (++sps->cnt <= (cnt_t)0) {
 1071              		.loc 1 384 3 view .LVU349
 1072              		.loc 1 384 7 is_stmt 0 view .LVU350
 1073 000a 8368     		ldr	r3, [r0, #8]
 1074 000c 0133     		adds	r3, r3, #1
 1075              		.loc 1 384 6 view .LVU351
 1076 000e 002B     		cmp	r3, #0
 1077 0010 8360     		str	r3, [r0, #8]
 1078 0012 08DC     		bgt	.L28
 385:lib/chibios/os/rt/src/chsem.c ****     chSchReadyI((thread_t *)ch_queue_fifo_remove(&sps->queue))->u.rdymsg = MSG_OK;
 1079              		.loc 1 385 5 is_stmt 1 view .LVU352
 1080              	.LVL62:
 1081              	.LBB187:
 1082              	.LBI187:
 265:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 1083              		.loc 2 265 27 view .LVU353
 1084              	.LBB188:
 266:./lib/chibios/os/rt/include/chlists.h **** 
 1085              		.loc 2 266 3 view .LVU354
 266:./lib/chibios/os/rt/include/chlists.h **** 
 1086              		.loc 2 266 15 is_stmt 0 view .LVU355
 1087 0014 0368     		ldr	r3, [r0]
 1088              	.LVL63:
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 1089              		.loc 2 268 3 is_stmt 1 view .LVU356
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 1090              		.loc 2 268 21 is_stmt 0 view .LVU357
 1091 0016 1A68     		ldr	r2, [r3]
 268:./lib/chibios/os/rt/include/chlists.h ****   qp->next->prev = qp;
 1092              		.loc 2 268 18 view .LVU358
 1093 0018 0260     		str	r2, [r0]
 269:./lib/chibios/os/rt/include/chlists.h **** 
 1094              		.loc 2 269 3 is_stmt 1 view .LVU359
 269:./lib/chibios/os/rt/include/chlists.h **** 
 1095              		.loc 2 269 18 is_stmt 0 view .LVU360
 1096 001a 5060     		str	r0, [r2, #4]
 271:./lib/chibios/os/rt/include/chlists.h **** }
 1097              		.loc 2 271 3 is_stmt 1 view .LVU361
 1098              	.LVL64:
 271:./lib/chibios/os/rt/include/chlists.h **** }
 1099              		.loc 2 271 3 is_stmt 0 view .LVU362
 1100              	.LBE188:
 1101              	.LBE187:
 1102              		.loc 1 385 5 view .LVU363
 1103 001c 1846     		mov	r0, r3
 1104              	.LVL65:
 1105              		.loc 1 385 5 view .LVU364
 1106 001e FFF7FEFF 		bl	chSchReadyI
 1107              	.LVL66:
 1108              		.loc 1 385 74 view .LVU365
 1109 0022 0023     		movs	r3, #0
 1110 0024 4362     		str	r3, [r0, #36]
 1111              	.L28:
 386:lib/chibios/os/rt/src/chsem.c ****   }
 387:lib/chibios/os/rt/src/chsem.c ****   if (--spw->cnt < (cnt_t)0) {
 1112              		.loc 1 387 3 is_stmt 1 view .LVU366
 1113              		.loc 1 387 7 is_stmt 0 view .LVU367
 1114 0026 A368     		ldr	r3, [r4, #8]
 1115 0028 013B     		subs	r3, r3, #1
 1116              		.loc 1 387 6 view .LVU368
 1117 002a 002B     		cmp	r3, #0
 1118 002c A360     		str	r3, [r4, #8]
 1119 002e 0FDA     		bge	.L29
 1120              	.LBB189:
 388:lib/chibios/os/rt/src/chsem.c ****     thread_t *ctp = currp;
 1121              		.loc 1 388 5 is_stmt 1 view .LVU369
 1122              		.loc 1 388 15 is_stmt 0 view .LVU370
 1123 0030 094B     		ldr	r3, .L31
 1124 0032 9D69     		ldr	r5, [r3, #24]
 1125              	.LVL67:
 389:lib/chibios/os/rt/src/chsem.c ****     sem_insert(ctp, &spw->queue);
 1126              		.loc 1 389 5 is_stmt 1 view .LVU371
 1127              	.LBB190:
 1128              	.LBI190:
 247:./lib/chibios/os/rt/include/chlists.h **** 
 1129              		.loc 2 247 20 view .LVU372
 1130              	.LBB191:
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 1131              		.loc 2 249 3 view .LVU373
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 1132              		.loc 2 250 21 is_stmt 0 view .LVU374
 1133 0034 6368     		ldr	r3, [r4, #4]
 249:./lib/chibios/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 1134              		.loc 2 249 17 view .LVU375
 1135 0036 2C60     		str	r4, [r5]
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 1136              		.loc 2 250 3 is_stmt 1 view .LVU376
 250:./lib/chibios/os/rt/include/chlists.h ****   p->prev->next = p;
 1137              		.loc 2 250 17 is_stmt 0 view .LVU377
 1138 0038 6B60     		str	r3, [r5, #4]
 251:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 1139              		.loc 2 251 3 is_stmt 1 view .LVU378
 1140              	.LBE191:
 1141              	.LBE190:
 390:lib/chibios/os/rt/src/chsem.c ****     ctp->u.wtsemp = spw;
 391:lib/chibios/os/rt/src/chsem.c ****     chSchGoSleepS(CH_STATE_WTSEM);
 1142              		.loc 1 391 5 is_stmt 0 view .LVU379
 1143 003a 0520     		movs	r0, #5
 1144              	.LBB193:
 1145              	.LBB192:
 251:./lib/chibios/os/rt/include/chlists.h ****   qp->prev      = p;
 1146              		.loc 2 251 17 view .LVU380
 1147 003c 1D60     		str	r5, [r3]
 252:./lib/chibios/os/rt/include/chlists.h **** }
 1148              		.loc 2 252 3 is_stmt 1 view .LVU381
 252:./lib/chibios/os/rt/include/chlists.h **** }
 1149              		.loc 2 252 17 is_stmt 0 view .LVU382
 1150 003e 6560     		str	r5, [r4, #4]
 1151              	.LVL68:
 252:./lib/chibios/os/rt/include/chlists.h **** }
 1152              		.loc 2 252 17 view .LVU383
 1153              	.LBE192:
 1154              	.LBE193:
 390:lib/chibios/os/rt/src/chsem.c ****     ctp->u.wtsemp = spw;
 1155              		.loc 1 390 5 is_stmt 1 view .LVU384
 390:lib/chibios/os/rt/src/chsem.c ****     ctp->u.wtsemp = spw;
 1156              		.loc 1 390 19 is_stmt 0 view .LVU385
 1157 0040 6C62     		str	r4, [r5, #36]
 1158              		.loc 1 391 5 is_stmt 1 view .LVU386
 1159 0042 FFF7FEFF 		bl	chSchGoSleepS
 1160              	.LVL69:
 392:lib/chibios/os/rt/src/chsem.c ****     msg = ctp->u.rdymsg;
 1161              		.loc 1 392 5 view .LVU387
 1162              		.loc 1 392 9 is_stmt 0 view .LVU388
 1163 0046 686A     		ldr	r0, [r5, #36]
 1164              	.LVL70:
 1165              	.L30:
 1166              		.loc 1 392 9 view .LVU389
 1167              	.LBE189:
 393:lib/chibios/os/rt/src/chsem.c ****   }
 394:lib/chibios/os/rt/src/chsem.c ****   else {
 395:lib/chibios/os/rt/src/chsem.c ****     chSchRescheduleS();
 396:lib/chibios/os/rt/src/chsem.c ****     msg = MSG_OK;
 397:lib/chibios/os/rt/src/chsem.c ****   }
 398:lib/chibios/os/rt/src/chsem.c ****   chSysUnlock();
 1168              		.loc 1 398 3 is_stmt 1 view .LVU390
 1169              	.LBB194:
 1170              	.LBI194:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1171              		.loc 3 367 20 view .LVU391
 1172              	.LBB195:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1173              		.loc 3 369 22 view .LVU392
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1174              		.loc 3 370 33 view .LVU393
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1175              		.loc 3 376 3 view .LVU394
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1176              		.loc 3 376 3 view .LVU395
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1177              		.loc 3 376 3 view .LVU396
 1178              		.loc 3 380 3 view .LVU397
 1179              	.LBB196:
 1180              	.LBI196:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1181              		.loc 4 693 27 view .LVU398
 1182              		.loc 4 696 3 view .LVU399
 1183              	.LBB197:
 1184              	.LBI197:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1185              		.loc 5 491 27 view .LVU400
 1186              	.LBB198:
 1187              		.loc 5 493 3 view .LVU401
 1188 0048 0023     		movs	r3, #0
 1189              		.syntax unified
 1190              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1191 004a 83F31188 		MSR basepri, r3
 1192              	@ 0 "" 2
 1193              	.LVL71:
 1194              		.loc 5 493 3 is_stmt 0 view .LVU402
 1195              		.thumb
 1196              		.syntax unified
 1197              	.LBE198:
 1198              	.LBE197:
 1199              	.LBE196:
 1200              	.LBE195:
 1201              	.LBE194:
 399:lib/chibios/os/rt/src/chsem.c **** 
 400:lib/chibios/os/rt/src/chsem.c ****   return msg;
 1202              		.loc 1 400 3 is_stmt 1 view .LVU403
 401:lib/chibios/os/rt/src/chsem.c **** }
 1203              		.loc 1 401 1 is_stmt 0 view .LVU404
 1204 004e 38BD     		pop	{r3, r4, r5, pc}
 1205              	.LVL72:
 1206              	.L29:
 395:lib/chibios/os/rt/src/chsem.c ****     msg = MSG_OK;
 1207              		.loc 1 395 5 is_stmt 1 view .LVU405
 1208 0050 FFF7FEFF 		bl	chSchRescheduleS
 1209              	.LVL73:
 396:lib/chibios/os/rt/src/chsem.c ****   }
 1210              		.loc 1 396 5 view .LVU406
 396:lib/chibios/os/rt/src/chsem.c ****   }
 1211              		.loc 1 396 9 is_stmt 0 view .LVU407
 1212 0054 0020     		movs	r0, #0
 1213 0056 F7E7     		b	.L30
 1214              	.L32:
 1215              		.align	2
 1216              	.L31:
 1217 0058 00000000 		.word	ch
 1218              		.cfi_endproc
 1219              	.LFE299:
 1221              		.text
 1222              	.Letext0:
 1223              		.file 6 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1224              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1225              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1226              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 1227              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 1228              		.file 11 "./lib/chibios/os/rt/include/chtime.h"
 1229              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1230              		.file 13 "./lib/chibios/os/rt/include/chtm.h"
 1231              		.file 14 "./lib/chibios/os/rt/include/chsem.h"
 1232              		.file 15 "./lib/chibios/os/rt/include/chmtx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chsem.c
     /tmp/ccrlKB40.s:18     .text.chSemObjectInit:0000000000000000 $t
     /tmp/ccrlKB40.s:26     .text.chSemObjectInit:0000000000000000 chSemObjectInit
     /tmp/ccrlKB40.s:60     .text.chSemResetWithMessageI:0000000000000000 $t
     /tmp/ccrlKB40.s:67     .text.chSemResetWithMessageI:0000000000000000 chSemResetWithMessageI
     /tmp/ccrlKB40.s:146    .text.chSemResetWithMessage:0000000000000000 $t
     /tmp/ccrlKB40.s:153    .text.chSemResetWithMessage:0000000000000000 chSemResetWithMessage
     /tmp/ccrlKB40.s:252    .text.chSemWaitS:0000000000000000 $t
     /tmp/ccrlKB40.s:259    .text.chSemWaitS:0000000000000000 chSemWaitS
     /tmp/ccrlKB40.s:353    .text.chSemWaitS:000000000000002c $d
     /tmp/ccrlKB40.s:358    .text.chSemWait:0000000000000000 $t
     /tmp/ccrlKB40.s:365    .text.chSemWait:0000000000000000 chSemWait
     /tmp/ccrlKB40.s:461    .text.chSemWaitTimeoutS:0000000000000000 $t
     /tmp/ccrlKB40.s:468    .text.chSemWaitTimeoutS:0000000000000000 chSemWaitTimeoutS
     /tmp/ccrlKB40.s:583    .text.chSemWaitTimeoutS:0000000000000038 $d
     /tmp/ccrlKB40.s:588    .text.chSemWaitTimeout:0000000000000000 $t
     /tmp/ccrlKB40.s:595    .text.chSemWaitTimeout:0000000000000000 chSemWaitTimeout
     /tmp/ccrlKB40.s:691    .text.chSemSignal:0000000000000000 $t
     /tmp/ccrlKB40.s:698    .text.chSemSignal:0000000000000000 chSemSignal
     /tmp/ccrlKB40.s:838    .text.chSemSignalI:0000000000000000 $t
     /tmp/ccrlKB40.s:845    .text.chSemSignalI:0000000000000000 chSemSignalI
     /tmp/ccrlKB40.s:912    .text.chSemAddCounterI:0000000000000000 $t
     /tmp/ccrlKB40.s:919    .text.chSemAddCounterI:0000000000000000 chSemAddCounterI
     /tmp/ccrlKB40.s:1000   .text.chSemSignalWait:0000000000000000 $t
     /tmp/ccrlKB40.s:1007   .text.chSemSignalWait:0000000000000000 chSemSignalWait
     /tmp/ccrlKB40.s:1217   .text.chSemSignalWait:0000000000000058 $d

UNDEFINED SYMBOLS
chSchReadyI
chSchRescheduleS
chSchGoSleepS
ch
chSchGoSleepTimeoutS
chSchWakeupS
