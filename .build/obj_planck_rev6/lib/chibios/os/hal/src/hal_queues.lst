   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"hal_queues.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.iq_read,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	iq_read:
  26              	.LVL0:
  27              	.LFB328:
  28              		.file 1 "lib/chibios/os/hal/src/hal_queues.c"
   1:lib/chibios/os/hal/src/hal_queues.c **** /*
   2:lib/chibios/os/hal/src/hal_queues.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_queues.c **** 
   4:lib/chibios/os/hal/src/hal_queues.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_queues.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_queues.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_queues.c **** 
   8:lib/chibios/os/hal/src/hal_queues.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_queues.c **** 
  10:lib/chibios/os/hal/src/hal_queues.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_queues.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_queues.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_queues.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_queues.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_queues.c **** */
  16:lib/chibios/os/hal/src/hal_queues.c **** 
  17:lib/chibios/os/hal/src/hal_queues.c **** /**
  18:lib/chibios/os/hal/src/hal_queues.c ****  * @file    hal_queues.c
  19:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   I/O Queues code.
  20:lib/chibios/os/hal/src/hal_queues.c ****  *
  21:lib/chibios/os/hal/src/hal_queues.c ****  * @addtogroup HAL_QUEUES
  22:lib/chibios/os/hal/src/hal_queues.c ****  * @details Queues are mostly used in serial-like device drivers.
  23:lib/chibios/os/hal/src/hal_queues.c ****  *          Serial device drivers are usually designed to have a lower side
  24:lib/chibios/os/hal/src/hal_queues.c ****  *          (lower driver, it is usually an interrupt service routine) and an
  25:lib/chibios/os/hal/src/hal_queues.c ****  *          upper side (upper driver, accessed by the application threads).<br>
  26:lib/chibios/os/hal/src/hal_queues.c ****  *          There are several kind of queues:<br>
  27:lib/chibios/os/hal/src/hal_queues.c ****  *          - <b>Input queue</b>, unidirectional queue where the writer is the
  28:lib/chibios/os/hal/src/hal_queues.c ****  *            lower side and the reader is the upper side.
  29:lib/chibios/os/hal/src/hal_queues.c ****  *          - <b>Output queue</b>, unidirectional queue where the writer is the
  30:lib/chibios/os/hal/src/hal_queues.c ****  *            upper side and the reader is the lower side.
  31:lib/chibios/os/hal/src/hal_queues.c ****  *          - <b>Full duplex queue</b>, bidirectional queue. Full duplex queues
  32:lib/chibios/os/hal/src/hal_queues.c ****  *            are implemented by pairing an input queue and an output queue
  33:lib/chibios/os/hal/src/hal_queues.c ****  *            together.
  34:lib/chibios/os/hal/src/hal_queues.c ****  *          .
  35:lib/chibios/os/hal/src/hal_queues.c ****  * @{
  36:lib/chibios/os/hal/src/hal_queues.c ****  */
  37:lib/chibios/os/hal/src/hal_queues.c **** 
  38:lib/chibios/os/hal/src/hal_queues.c **** #include <string.h>
  39:lib/chibios/os/hal/src/hal_queues.c **** 
  40:lib/chibios/os/hal/src/hal_queues.c **** #include "hal.h"
  41:lib/chibios/os/hal/src/hal_queues.c **** 
  42:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
  43:lib/chibios/os/hal/src/hal_queues.c **** /* Driver local definitions.                                                 */
  44:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
  45:lib/chibios/os/hal/src/hal_queues.c **** 
  46:lib/chibios/os/hal/src/hal_queues.c **** /**
  47:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Non-blocking input queue read.
  48:lib/chibios/os/hal/src/hal_queues.c ****  * @details The function reads data from an input queue into a buffer. The
  49:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
  50:lib/chibios/os/hal/src/hal_queues.c ****  *          transferred or when the input queue has been emptied.
  51:lib/chibios/os/hal/src/hal_queues.c ****  *
  52:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
  53:lib/chibios/os/hal/src/hal_queues.c ****  * @param[out] bp       pointer to the data buffer
  54:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
  55:lib/chibios/os/hal/src/hal_queues.c ****  *                      value 0 is reserved
  56:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
  57:lib/chibios/os/hal/src/hal_queues.c ****  *
  58:lib/chibios/os/hal/src/hal_queues.c ****  * @notapi
  59:lib/chibios/os/hal/src/hal_queues.c ****  */
  60:lib/chibios/os/hal/src/hal_queues.c **** static size_t iq_read(input_queue_t *iqp, uint8_t *bp, size_t n) {
  29              		.loc 1 60 66 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  61:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
  33              		.loc 1 61 3 view .LVU1
  62:lib/chibios/os/hal/src/hal_queues.c **** 
  63:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
  34              		.loc 1 63 3 view .LVU2
  35              		.loc 1 63 3 view .LVU3
  36              		.loc 1 63 3 view .LVU4
  64:lib/chibios/os/hal/src/hal_queues.c **** 
  65:lib/chibios/os/hal/src/hal_queues.c ****   /* Number of bytes that can be read in a single atomic operation.*/
  66:lib/chibios/os/hal/src/hal_queues.c ****   if (n > iqGetFullI(iqp)) {
  37              		.loc 1 66 3 view .LVU5
  60:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
  38              		.loc 1 60 66 is_stmt 0 view .LVU6
  39 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  40              		.cfi_def_cfa_offset 24
  41              		.cfi_offset 3, -24
  42              		.cfi_offset 4, -20
  43              		.cfi_offset 5, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  60:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
  47              		.loc 1 60 66 view .LVU7
  48 0002 1546     		mov	r5, r2
  49              		.loc 1 66 11 view .LVU8
  50 0004 8268     		ldr	r2, [r0, #8]
  51              	.LVL1:
  67:lib/chibios/os/hal/src/hal_queues.c ****     n = iqGetFullI(iqp);
  68:lib/chibios/os/hal/src/hal_queues.c ****   }
  69:lib/chibios/os/hal/src/hal_queues.c **** 
  70:lib/chibios/os/hal/src/hal_queues.c ****   /* Number of bytes before buffer limit.*/
  71:lib/chibios/os/hal/src/hal_queues.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
  72:lib/chibios/os/hal/src/hal_queues.c ****   s1 = (size_t)(iqp->q_top - iqp->q_rdptr);
  52              		.loc 1 72 28 view .LVU9
  53 0006 0669     		ldr	r6, [r0, #16]
  66:lib/chibios/os/hal/src/hal_queues.c ****     n = iqGetFullI(iqp);
  54              		.loc 1 66 6 view .LVU10
  55 0008 AA42     		cmp	r2, r5
  67:lib/chibios/os/hal/src/hal_queues.c ****     n = iqGetFullI(iqp);
  56              		.loc 1 67 5 is_stmt 1 view .LVU11
  60:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
  57              		.loc 1 60 66 is_stmt 0 view .LVU12
  58 000a 0B46     		mov	r3, r1
  59              		.loc 1 72 33 view .LVU13
  60 000c 8169     		ldr	r1, [r0, #24]
  61              	.LVL2:
  67:lib/chibios/os/hal/src/hal_queues.c ****     n = iqGetFullI(iqp);
  62              		.loc 1 67 7 view .LVU14
  63 000e 38BF     		it	cc
  64 0010 8568     		ldrcc	r5, [r0, #8]
  65              	.LVL3:
  66              		.loc 1 72 3 is_stmt 1 view .LVU15
  67              		.loc 1 72 28 is_stmt 0 view .LVU16
  68 0012 761A     		subs	r6, r6, r1
  69              	.LVL4:
  73:lib/chibios/os/hal/src/hal_queues.c ****   /*lint -restore*/
  74:lib/chibios/os/hal/src/hal_queues.c ****   if (n < s1) {
  70              		.loc 1 74 3 is_stmt 1 view .LVU17
  71              		.loc 1 74 6 is_stmt 0 view .LVU18
  72 0014 B542     		cmp	r5, r6
  60:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
  73              		.loc 1 60 66 view .LVU19
  74 0016 0446     		mov	r4, r0
  75              		.loc 1 74 6 view .LVU20
  76 0018 0BD2     		bcs	.L3
  75:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, n);
  77              		.loc 1 75 5 is_stmt 1 view .LVU21
  78 001a 2A46     		mov	r2, r5
  79 001c 1846     		mov	r0, r3
  80              	.LVL5:
  81              		.loc 1 75 5 is_stmt 0 view .LVU22
  82 001e FFF7FEFF 		bl	memcpy
  83              	.LVL6:
  76:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr += n;
  84              		.loc 1 76 5 is_stmt 1 view .LVU23
  85              		.loc 1 76 18 is_stmt 0 view .LVU24
  86 0022 A269     		ldr	r2, [r4, #24]
  87 0024 2A44     		add	r2, r2, r5
  88              	.LVL7:
  89              	.L4:
  77:lib/chibios/os/hal/src/hal_queues.c ****   }
  78:lib/chibios/os/hal/src/hal_queues.c ****   else if (n > s1) {
  79:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, s1);
  80:lib/chibios/os/hal/src/hal_queues.c ****     bp += s1;
  81:lib/chibios/os/hal/src/hal_queues.c ****     s2 = n - s1;
  82:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_buffer, s2);
  83:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer + s2;
  84:lib/chibios/os/hal/src/hal_queues.c ****   }
  85:lib/chibios/os/hal/src/hal_queues.c ****   else {
  86:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, n);
  87:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer;
  88:lib/chibios/os/hal/src/hal_queues.c ****   }
  89:lib/chibios/os/hal/src/hal_queues.c **** 
  90:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_counter -= n;
  90              		.loc 1 90 18 view .LVU25
  91 0026 A368     		ldr	r3, [r4, #8]
  76:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr += n;
  92              		.loc 1 76 18 view .LVU26
  93 0028 A261     		str	r2, [r4, #24]
  94              		.loc 1 90 3 is_stmt 1 view .LVU27
  95              		.loc 1 90 18 is_stmt 0 view .LVU28
  96 002a 5B1B     		subs	r3, r3, r5
  97 002c A360     		str	r3, [r4, #8]
  91:lib/chibios/os/hal/src/hal_queues.c ****   return n;
  98              		.loc 1 91 3 is_stmt 1 view .LVU29
  92:lib/chibios/os/hal/src/hal_queues.c **** }
  99              		.loc 1 92 1 is_stmt 0 view .LVU30
 100 002e 2846     		mov	r0, r5
 101 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 102              	.LVL8:
 103              	.L3:
  78:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, s1);
 104              		.loc 1 78 8 is_stmt 1 view .LVU31
  78:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_rdptr, s1);
 105              		.loc 1 78 11 is_stmt 0 view .LVU32
 106 0032 0CD9     		bls	.L5
  79:lib/chibios/os/hal/src/hal_queues.c ****     bp += s1;
 107              		.loc 1 79 5 is_stmt 1 view .LVU33
 108 0034 1846     		mov	r0, r3
 109              	.LVL9:
  79:lib/chibios/os/hal/src/hal_queues.c ****     bp += s1;
 110              		.loc 1 79 5 is_stmt 0 view .LVU34
 111 0036 3246     		mov	r2, r6
 112 0038 FFF7FEFF 		bl	memcpy
 113              	.LVL10:
  80:lib/chibios/os/hal/src/hal_queues.c ****     s2 = n - s1;
 114              		.loc 1 80 5 is_stmt 1 view .LVU35
  81:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_buffer, s2);
 115              		.loc 1 81 5 view .LVU36
  81:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)bp, (void *)iqp->q_buffer, s2);
 116              		.loc 1 81 8 is_stmt 0 view .LVU37
 117 003c AF1B     		subs	r7, r5, r6
 118              	.LVL11:
  82:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer + s2;
 119              		.loc 1 82 5 is_stmt 1 view .LVU38
 120 003e 3A46     		mov	r2, r7
 121 0040 E168     		ldr	r1, [r4, #12]
 122 0042 3044     		add	r0, r0, r6
 123              	.LVL12:
  82:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer + s2;
 124              		.loc 1 82 5 is_stmt 0 view .LVU39
 125 0044 FFF7FEFF 		bl	memcpy
 126              	.LVL13:
  83:lib/chibios/os/hal/src/hal_queues.c ****   }
 127              		.loc 1 83 5 is_stmt 1 view .LVU40
  83:lib/chibios/os/hal/src/hal_queues.c ****   }
 128              		.loc 1 83 34 is_stmt 0 view .LVU41
 129 0048 E368     		ldr	r3, [r4, #12]
 130 004a DA19     		adds	r2, r3, r7
 131 004c EBE7     		b	.L4
 132              	.LVL14:
 133              	.L5:
  86:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer;
 134              		.loc 1 86 5 is_stmt 1 view .LVU42
 135 004e 2A46     		mov	r2, r5
 136 0050 1846     		mov	r0, r3
 137              	.LVL15:
  86:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer;
 138              		.loc 1 86 5 is_stmt 0 view .LVU43
 139 0052 FFF7FEFF 		bl	memcpy
 140              	.LVL16:
  87:lib/chibios/os/hal/src/hal_queues.c ****   }
 141              		.loc 1 87 5 is_stmt 1 view .LVU44
  87:lib/chibios/os/hal/src/hal_queues.c ****   }
 142              		.loc 1 87 23 is_stmt 0 view .LVU45
 143 0056 E268     		ldr	r2, [r4, #12]
 144 0058 E5E7     		b	.L4
 145              		.cfi_endproc
 146              	.LFE328:
 148              		.section	.text.oq_write,"ax",%progbits
 149              		.align	1
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	oq_write:
 156              	.LVL17:
 157              	.LFB329:
  93:lib/chibios/os/hal/src/hal_queues.c **** 
  94:lib/chibios/os/hal/src/hal_queues.c **** /**
  95:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Non-blocking output queue write.
  96:lib/chibios/os/hal/src/hal_queues.c ****  * @details The function writes data from a buffer to an output queue. The
  97:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
  98:lib/chibios/os/hal/src/hal_queues.c ****  *          transferred or when the output queue has been filled.
  99:lib/chibios/os/hal/src/hal_queues.c ****  *
 100:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 101:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to the data buffer
 102:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 103:lib/chibios/os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 104:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 105:lib/chibios/os/hal/src/hal_queues.c ****  *
 106:lib/chibios/os/hal/src/hal_queues.c ****  * @notapi
 107:lib/chibios/os/hal/src/hal_queues.c ****  */
 108:lib/chibios/os/hal/src/hal_queues.c **** static size_t oq_write(output_queue_t *oqp, const uint8_t *bp, size_t n) {
 158              		.loc 1 108 74 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 109:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
 162              		.loc 1 109 3 view .LVU47
 110:lib/chibios/os/hal/src/hal_queues.c **** 
 111:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
 163              		.loc 1 111 3 view .LVU48
 164              		.loc 1 111 3 view .LVU49
 165              		.loc 1 111 3 view .LVU50
 112:lib/chibios/os/hal/src/hal_queues.c **** 
 113:lib/chibios/os/hal/src/hal_queues.c ****   /* Number of bytes that can be written in a single atomic operation.*/
 114:lib/chibios/os/hal/src/hal_queues.c ****   if (n > oqGetEmptyI(oqp)) {
 166              		.loc 1 114 3 view .LVU51
 167              		.loc 1 114 11 is_stmt 0 view .LVU52
 168 0000 8368     		ldr	r3, [r0, #8]
 169              		.loc 1 114 6 view .LVU53
 170 0002 9342     		cmp	r3, r2
 115:lib/chibios/os/hal/src/hal_queues.c ****     n = oqGetEmptyI(oqp);
 171              		.loc 1 115 5 is_stmt 1 view .LVU54
 108:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
 172              		.loc 1 108 74 is_stmt 0 view .LVU55
 173 0004 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 174              		.cfi_def_cfa_offset 32
 175              		.cfi_offset 4, -20
 176              		.cfi_offset 5, -16
 177              		.cfi_offset 6, -12
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 108:lib/chibios/os/hal/src/hal_queues.c ****   size_t s1, s2;
 180              		.loc 1 108 74 view .LVU56
 181 0006 1546     		mov	r5, r2
 182 0008 0446     		mov	r4, r0
 183              		.loc 1 115 7 view .LVU57
 184 000a 38BF     		it	cc
 185 000c 8568     		ldrcc	r5, [r0, #8]
 186              	.LVL18:
 116:lib/chibios/os/hal/src/hal_queues.c ****   }
 117:lib/chibios/os/hal/src/hal_queues.c **** 
 118:lib/chibios/os/hal/src/hal_queues.c ****   /* Number of bytes before buffer limit.*/
 119:lib/chibios/os/hal/src/hal_queues.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
 120:lib/chibios/os/hal/src/hal_queues.c ****   s1 = (size_t)(oqp->q_top - oqp->q_wrptr);
 187              		.loc 1 120 3 is_stmt 1 view .LVU58
 188              		.loc 1 120 28 is_stmt 0 view .LVU59
 189 000e D0E90460 		ldrd	r6, r0, [r0, #16]
 190              	.LVL19:
 191              		.loc 1 120 28 view .LVU60
 192 0012 361A     		subs	r6, r6, r0
 193              	.LVL20:
 121:lib/chibios/os/hal/src/hal_queues.c ****   /*lint -restore*/
 122:lib/chibios/os/hal/src/hal_queues.c ****   if (n < s1) {
 194              		.loc 1 122 3 is_stmt 1 view .LVU61
 195              		.loc 1 122 6 is_stmt 0 view .LVU62
 196 0014 B542     		cmp	r5, r6
 197 0016 0BD2     		bcs	.L8
 123:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, n);
 198              		.loc 1 123 5 is_stmt 1 view .LVU63
 199 0018 2A46     		mov	r2, r5
 200 001a FFF7FEFF 		bl	memcpy
 201              	.LVL21:
 124:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr += n;
 202              		.loc 1 124 5 view .LVU64
 203              		.loc 1 124 18 is_stmt 0 view .LVU65
 204 001e 6269     		ldr	r2, [r4, #20]
 205 0020 2A44     		add	r2, r2, r5
 206              	.LVL22:
 207              	.L9:
 125:lib/chibios/os/hal/src/hal_queues.c ****   }
 126:lib/chibios/os/hal/src/hal_queues.c ****   else if (n > s1) {
 127:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, s1);
 128:lib/chibios/os/hal/src/hal_queues.c ****     bp += s1;
 129:lib/chibios/os/hal/src/hal_queues.c ****     s2 = n - s1;
 130:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 131:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 132:lib/chibios/os/hal/src/hal_queues.c ****   }
 133:lib/chibios/os/hal/src/hal_queues.c ****   else {
 134:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, n);
 135:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer;
 136:lib/chibios/os/hal/src/hal_queues.c ****   }
 137:lib/chibios/os/hal/src/hal_queues.c **** 
 138:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_counter -= n;
 208              		.loc 1 138 18 view .LVU66
 209 0022 A368     		ldr	r3, [r4, #8]
 124:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr += n;
 210              		.loc 1 124 18 view .LVU67
 211 0024 6261     		str	r2, [r4, #20]
 212              		.loc 1 138 3 is_stmt 1 view .LVU68
 213              		.loc 1 138 18 is_stmt 0 view .LVU69
 214 0026 5B1B     		subs	r3, r3, r5
 139:lib/chibios/os/hal/src/hal_queues.c ****   return n;
 140:lib/chibios/os/hal/src/hal_queues.c **** }
 215              		.loc 1 140 1 view .LVU70
 216 0028 2846     		mov	r0, r5
 138:lib/chibios/os/hal/src/hal_queues.c ****   return n;
 217              		.loc 1 138 18 view .LVU71
 218 002a A360     		str	r3, [r4, #8]
 139:lib/chibios/os/hal/src/hal_queues.c ****   return n;
 219              		.loc 1 139 3 is_stmt 1 view .LVU72
 220              		.loc 1 140 1 is_stmt 0 view .LVU73
 221 002c 03B0     		add	sp, sp, #12
 222              		.cfi_remember_state
 223              		.cfi_def_cfa_offset 20
 224              		@ sp needed
 225 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 226              	.LVL23:
 227              	.L8:
 228              		.cfi_restore_state
 126:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, s1);
 229              		.loc 1 126 8 is_stmt 1 view .LVU74
 126:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_wrptr, (const void *)bp, s1);
 230              		.loc 1 126 11 is_stmt 0 view .LVU75
 231 0030 0DD9     		bls	.L10
 127:lib/chibios/os/hal/src/hal_queues.c ****     bp += s1;
 232              		.loc 1 127 5 is_stmt 1 view .LVU76
 233 0032 3246     		mov	r2, r6
 234 0034 0191     		str	r1, [sp, #4]
 235 0036 FFF7FEFF 		bl	memcpy
 236              	.LVL24:
 128:lib/chibios/os/hal/src/hal_queues.c ****     s2 = n - s1;
 237              		.loc 1 128 5 view .LVU77
 129:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 238              		.loc 1 129 5 view .LVU78
 130:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 239              		.loc 1 130 5 is_stmt 0 view .LVU79
 240 003a 0199     		ldr	r1, [sp, #4]
 241 003c E068     		ldr	r0, [r4, #12]
 129:lib/chibios/os/hal/src/hal_queues.c ****     memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 242              		.loc 1 129 8 view .LVU80
 243 003e AF1B     		subs	r7, r5, r6
 244              	.LVL25:
 130:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 245              		.loc 1 130 5 is_stmt 1 view .LVU81
 246 0040 3A46     		mov	r2, r7
 247 0042 3144     		add	r1, r1, r6
 248              	.LVL26:
 130:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer + s2;
 249              		.loc 1 130 5 is_stmt 0 view .LVU82
 250 0044 FFF7FEFF 		bl	memcpy
 251              	.LVL27:
 131:lib/chibios/os/hal/src/hal_queues.c ****   }
 252              		.loc 1 131 5 is_stmt 1 view .LVU83
 131:lib/chibios/os/hal/src/hal_queues.c ****   }
 253              		.loc 1 131 34 is_stmt 0 view .LVU84
 254 0048 E368     		ldr	r3, [r4, #12]
 255 004a DA19     		adds	r2, r3, r7
 256 004c E9E7     		b	.L9
 257              	.LVL28:
 258              	.L10:
 134:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer;
 259              		.loc 1 134 5 is_stmt 1 view .LVU85
 260 004e 2A46     		mov	r2, r5
 261 0050 FFF7FEFF 		bl	memcpy
 262              	.LVL29:
 135:lib/chibios/os/hal/src/hal_queues.c ****   }
 263              		.loc 1 135 5 view .LVU86
 135:lib/chibios/os/hal/src/hal_queues.c ****   }
 264              		.loc 1 135 23 is_stmt 0 view .LVU87
 265 0054 E268     		ldr	r2, [r4, #12]
 266 0056 E4E7     		b	.L9
 267              		.cfi_endproc
 268              	.LFE329:
 270              		.section	.text.iqObjectInit,"ax",%progbits
 271              		.align	1
 272              		.global	iqObjectInit
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	iqObjectInit:
 279              	.LVL30:
 280              	.LFB330:
 141:lib/chibios/os/hal/src/hal_queues.c **** 
 142:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 143:lib/chibios/os/hal/src/hal_queues.c **** /* Driver exported variables.                                                */
 144:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 145:lib/chibios/os/hal/src/hal_queues.c **** 
 146:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 147:lib/chibios/os/hal/src/hal_queues.c **** /* Driver local variables and types.                                         */
 148:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 149:lib/chibios/os/hal/src/hal_queues.c **** 
 150:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 151:lib/chibios/os/hal/src/hal_queues.c **** /* Driver local functions.                                                   */
 152:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 153:lib/chibios/os/hal/src/hal_queues.c **** 
 154:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 155:lib/chibios/os/hal/src/hal_queues.c **** /* Driver interrupt handlers.                                                */
 156:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 157:lib/chibios/os/hal/src/hal_queues.c **** 
 158:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 159:lib/chibios/os/hal/src/hal_queues.c **** /* Driver exported functions.                                                */
 160:lib/chibios/os/hal/src/hal_queues.c **** /*===========================================================================*/
 161:lib/chibios/os/hal/src/hal_queues.c **** 
 162:lib/chibios/os/hal/src/hal_queues.c **** /**
 163:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Initializes an input queue.
 164:lib/chibios/os/hal/src/hal_queues.c ****  * @details A Semaphore is internally initialized and works as a counter of
 165:lib/chibios/os/hal/src/hal_queues.c ****  *          the bytes contained in the queue.
 166:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked from within the S-Locked system state.
 167:lib/chibios/os/hal/src/hal_queues.c ****  *
 168:lib/chibios/os/hal/src/hal_queues.c ****  * @param[out] iqp      pointer to an @p input_queue_t structure
 169:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to a memory area allocated as queue buffer
 170:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] size      size of the queue buffer
 171:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] infy      pointer to a callback function that is invoked when
 172:lib/chibios/os/hal/src/hal_queues.c ****  *                      data is read from the queue. The value can be @p NULL.
 173:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] link      application defined pointer
 174:lib/chibios/os/hal/src/hal_queues.c ****  *
 175:lib/chibios/os/hal/src/hal_queues.c ****  * @init
 176:lib/chibios/os/hal/src/hal_queues.c ****  */
 177:lib/chibios/os/hal/src/hal_queues.c **** void iqObjectInit(input_queue_t *iqp, uint8_t *bp, size_t size,
 178:lib/chibios/os/hal/src/hal_queues.c ****                   qnotify_t infy, void *link) {
 281              		.loc 1 178 47 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 4, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 179:lib/chibios/os/hal/src/hal_queues.c **** 
 180:lib/chibios/os/hal/src/hal_queues.c ****   osalThreadQueueObjectInit(&iqp->q_waiting);
 285              		.loc 1 180 3 view .LVU89
 286              	.LBB157:
 287              	.LBI157:
 288              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 825:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 826:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 827:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 828:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 829:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 830:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 831:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 832:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 833:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 834:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 835:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 836:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 838:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 839:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 840:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 841:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 842:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 843:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 844:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 845:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 846:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 847:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 848:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 849:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 851:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 852:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 853:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 854:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeS(trp, msg);
 855:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 856:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 858:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes a threads queue object.
 859:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 860:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 861:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 862:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @init
 863:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 864:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 289              		.loc 2 864 20 view .LVU90
 865:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 866:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdQueueObjectInit(tqp);
 290              		.loc 2 866 3 view .LVU91
 291              	.LBB158:
 292              	.LBI158:
 293              		.file 3 "./lib/chibios/os/rt/include/chthreads.h"
   1:./lib/chibios/os/rt/include/chthreads.h **** /*
   2:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chthreads.h **** 
   4:./lib/chibios/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chthreads.h **** 
   6:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chthreads.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chthreads.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chthreads.h **** 
  11:./lib/chibios/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chthreads.h **** 
  16:./lib/chibios/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chthreads.h **** */
  19:./lib/chibios/os/rt/include/chthreads.h **** 
  20:./lib/chibios/os/rt/include/chthreads.h **** /**
  21:./lib/chibios/os/rt/include/chthreads.h ****  * @file    rt/include/chthreads.h
  22:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:./lib/chibios/os/rt/include/chthreads.h ****  *
  24:./lib/chibios/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  26:./lib/chibios/os/rt/include/chthreads.h ****  */
  27:./lib/chibios/os/rt/include/chthreads.h **** 
  28:./lib/chibios/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:./lib/chibios/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:./lib/chibios/os/rt/include/chthreads.h **** 
  31:./lib/chibios/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:./lib/chibios/os/rt/include/chthreads.h **** 
  33:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chthreads.h **** 
  37:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chthreads.h **** 
  41:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chthreads.h **** 
  45:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chthreads.h **** 
  49:./lib/chibios/os/rt/include/chthreads.h **** /**
  50:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:./lib/chibios/os/rt/include/chthreads.h ****  */
  52:./lib/chibios/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:./lib/chibios/os/rt/include/chthreads.h **** 
  54:./lib/chibios/os/rt/include/chthreads.h **** /**
  55:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:./lib/chibios/os/rt/include/chthreads.h ****  */
  57:./lib/chibios/os/rt/include/chthreads.h **** typedef struct {
  58:./lib/chibios/os/rt/include/chthreads.h ****   /**
  59:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:./lib/chibios/os/rt/include/chthreads.h ****    */
  61:./lib/chibios/os/rt/include/chthreads.h ****   const char        *name;
  62:./lib/chibios/os/rt/include/chthreads.h ****   /**
  63:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:./lib/chibios/os/rt/include/chthreads.h ****    */
  65:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:./lib/chibios/os/rt/include/chthreads.h ****   /**
  67:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   End of the working area.
  68:./lib/chibios/os/rt/include/chthreads.h ****    */
  69:./lib/chibios/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:./lib/chibios/os/rt/include/chthreads.h ****   /**
  71:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:./lib/chibios/os/rt/include/chthreads.h ****    */
  73:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:./lib/chibios/os/rt/include/chthreads.h ****   /**
  75:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:./lib/chibios/os/rt/include/chthreads.h ****    */
  77:./lib/chibios/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:./lib/chibios/os/rt/include/chthreads.h ****   /**
  79:./lib/chibios/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:./lib/chibios/os/rt/include/chthreads.h ****    */
  81:./lib/chibios/os/rt/include/chthreads.h ****   void              *arg;
  82:./lib/chibios/os/rt/include/chthreads.h **** } thread_descriptor_t;
  83:./lib/chibios/os/rt/include/chthreads.h **** 
  84:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  85:./lib/chibios/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  86:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
  87:./lib/chibios/os/rt/include/chthreads.h **** 
  88:./lib/chibios/os/rt/include/chthreads.h **** /**
  89:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads queues
  90:./lib/chibios/os/rt/include/chthreads.h ****  * @{
  91:./lib/chibios/os/rt/include/chthreads.h ****  */
  92:./lib/chibios/os/rt/include/chthreads.h **** /**
  93:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
  94:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
  95:./lib/chibios/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
  96:./lib/chibios/os/rt/include/chthreads.h ****  *
  97:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
  98:./lib/chibios/os/rt/include/chthreads.h ****  */
  99:./lib/chibios/os/rt/include/chthreads.h **** #define _THREADS_QUEUE_DATA(name) {_CH_QUEUE_DATA(name)}
 100:./lib/chibios/os/rt/include/chthreads.h **** 
 101:./lib/chibios/os/rt/include/chthreads.h **** /**
 102:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 103:./lib/chibios/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 104:./lib/chibios/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 105:./lib/chibios/os/rt/include/chthreads.h ****  *
 106:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 107:./lib/chibios/os/rt/include/chthreads.h ****  */
 108:./lib/chibios/os/rt/include/chthreads.h **** #define THREADS_QUEUE_DECL(name)                                            \
 109:./lib/chibios/os/rt/include/chthreads.h ****   threads_queue_t name = _THREADS_QUEUE_DATA(name)
 110:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 111:./lib/chibios/os/rt/include/chthreads.h **** 
 112:./lib/chibios/os/rt/include/chthreads.h **** /**
 113:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Working Areas
 114:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 115:./lib/chibios/os/rt/include/chthreads.h ****  */
 116:./lib/chibios/os/rt/include/chthreads.h **** /**
 117:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 118:./lib/chibios/os/rt/include/chthreads.h ****  *
 119:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 120:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 121:./lib/chibios/os/rt/include/chthreads.h ****  *
 122:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 123:./lib/chibios/os/rt/include/chthreads.h ****  */
 124:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 125:./lib/chibios/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 126:./lib/chibios/os/rt/include/chthreads.h **** 
 127:./lib/chibios/os/rt/include/chthreads.h **** /**
 128:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 129:./lib/chibios/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 130:./lib/chibios/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 131:./lib/chibios/os/rt/include/chthreads.h ****  *
 132:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 133:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 134:./lib/chibios/os/rt/include/chthreads.h ****  *
 135:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 136:./lib/chibios/os/rt/include/chthreads.h ****  */
 137:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 138:./lib/chibios/os/rt/include/chthreads.h **** 
 139:./lib/chibios/os/rt/include/chthreads.h **** /**
 140:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 141:./lib/chibios/os/rt/include/chthreads.h ****  *
 142:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 143:./lib/chibios/os/rt/include/chthreads.h ****  */
 144:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 145:./lib/chibios/os/rt/include/chthreads.h **** 
 146:./lib/chibios/os/rt/include/chthreads.h **** /**
 147:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 148:./lib/chibios/os/rt/include/chthreads.h ****  *
 149:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 150:./lib/chibios/os/rt/include/chthreads.h ****  */
 151:./lib/chibios/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 152:./lib/chibios/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 153:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 154:./lib/chibios/os/rt/include/chthreads.h **** 
 155:./lib/chibios/os/rt/include/chthreads.h **** /**
 156:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 157:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 158:./lib/chibios/os/rt/include/chthreads.h ****  */
 159:./lib/chibios/os/rt/include/chthreads.h **** /**
 160:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 161:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 162:./lib/chibios/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 163:./lib/chibios/os/rt/include/chthreads.h ****  */
 164:./lib/chibios/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 165:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 166:./lib/chibios/os/rt/include/chthreads.h **** 
 167:./lib/chibios/os/rt/include/chthreads.h **** /**
 168:./lib/chibios/os/rt/include/chthreads.h ****  * @name    Macro Functions
 169:./lib/chibios/os/rt/include/chthreads.h ****  * @{
 170:./lib/chibios/os/rt/include/chthreads.h ****  */
 171:./lib/chibios/os/rt/include/chthreads.h **** /**
 172:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 173:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 174:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 175:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 176:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 177:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 178:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 179:./lib/chibios/os/rt/include/chthreads.h ****  *
 180:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 181:./lib/chibios/os/rt/include/chthreads.h ****  *
 182:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 183:./lib/chibios/os/rt/include/chthreads.h ****  */
 184:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 185:./lib/chibios/os/rt/include/chthreads.h **** 
 186:./lib/chibios/os/rt/include/chthreads.h **** /**
 187:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 188:./lib/chibios/os/rt/include/chthreads.h ****  *          milliseconds.
 189:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 190:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 191:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 192:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 193:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 194:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 195:./lib/chibios/os/rt/include/chthreads.h ****  *
 196:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 197:./lib/chibios/os/rt/include/chthreads.h ****  *
 198:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 199:./lib/chibios/os/rt/include/chthreads.h ****  */
 200:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 201:./lib/chibios/os/rt/include/chthreads.h **** 
 202:./lib/chibios/os/rt/include/chthreads.h **** /**
 203:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 204:./lib/chibios/os/rt/include/chthreads.h ****  *          microseconds.
 205:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 206:./lib/chibios/os/rt/include/chthreads.h ****  *          system tick clock.
 207:./lib/chibios/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 208:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 209:./lib/chibios/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 210:./lib/chibios/os/rt/include/chthreads.h ****  *          converted.
 211:./lib/chibios/os/rt/include/chthreads.h ****  *
 212:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 213:./lib/chibios/os/rt/include/chthreads.h ****  *
 214:./lib/chibios/os/rt/include/chthreads.h ****  * @api
 215:./lib/chibios/os/rt/include/chthreads.h ****  */
 216:./lib/chibios/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 217:./lib/chibios/os/rt/include/chthreads.h **** /** @} */
 218:./lib/chibios/os/rt/include/chthreads.h **** 
 219:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 220:./lib/chibios/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 221:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 222:./lib/chibios/os/rt/include/chthreads.h **** 
 223:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 224:./lib/chibios/os/rt/include/chthreads.h **** extern "C" {
 225:./lib/chibios/os/rt/include/chthreads.h **** #endif
 226:./lib/chibios/os/rt/include/chthreads.h ****    thread_t *_thread_init(thread_t *tp, const char *name, tprio_t prio);
 227:./lib/chibios/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 228:./lib/chibios/os/rt/include/chthreads.h ****   void _thread_memfill(uint8_t *startp, uint8_t *endp, uint8_t v);
 229:./lib/chibios/os/rt/include/chthreads.h **** #endif
 230:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 231:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 232:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 233:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 234:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 235:./lib/chibios/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 236:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 237:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 238:./lib/chibios/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 239:./lib/chibios/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 240:./lib/chibios/os/rt/include/chthreads.h **** #endif
 241:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 242:./lib/chibios/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 243:./lib/chibios/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 244:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 245:./lib/chibios/os/rt/include/chthreads.h **** #endif
 246:./lib/chibios/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 247:./lib/chibios/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 248:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 249:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 250:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 251:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 252:./lib/chibios/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 253:./lib/chibios/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 254:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 255:./lib/chibios/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 256:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 257:./lib/chibios/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 258:./lib/chibios/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 259:./lib/chibios/os/rt/include/chthreads.h ****   void chThdYield(void);
 260:./lib/chibios/os/rt/include/chthreads.h **** #ifdef __cplusplus
 261:./lib/chibios/os/rt/include/chthreads.h **** }
 262:./lib/chibios/os/rt/include/chthreads.h **** #endif
 263:./lib/chibios/os/rt/include/chthreads.h **** 
 264:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 265:./lib/chibios/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 266:./lib/chibios/os/rt/include/chthreads.h **** /*===========================================================================*/
 267:./lib/chibios/os/rt/include/chthreads.h **** 
 268:./lib/chibios/os/rt/include/chthreads.h **** /**
 269:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns a pointer to the current @p thread_t.
 270:./lib/chibios/os/rt/include/chthreads.h ****  *
 271:./lib/chibios/os/rt/include/chthreads.h ****  * @return              A pointer to the current thread.
 272:./lib/chibios/os/rt/include/chthreads.h ****  *
 273:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 274:./lib/chibios/os/rt/include/chthreads.h ****  */
 275:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 276:./lib/chibios/os/rt/include/chthreads.h **** 
 277:./lib/chibios/os/rt/include/chthreads.h ****   return ch.rlist.current;
 278:./lib/chibios/os/rt/include/chthreads.h **** }
 279:./lib/chibios/os/rt/include/chthreads.h **** 
 280:./lib/chibios/os/rt/include/chthreads.h **** /**
 281:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 282:./lib/chibios/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 283:./lib/chibios/os/rt/include/chthreads.h ****  *
 284:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 285:./lib/chibios/os/rt/include/chthreads.h ****  *
 286:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 287:./lib/chibios/os/rt/include/chthreads.h ****  */
 288:./lib/chibios/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 289:./lib/chibios/os/rt/include/chthreads.h **** 
 290:./lib/chibios/os/rt/include/chthreads.h ****   return chThdGetSelfX()->hdr.pqueue.prio;
 291:./lib/chibios/os/rt/include/chthreads.h **** }
 292:./lib/chibios/os/rt/include/chthreads.h **** 
 293:./lib/chibios/os/rt/include/chthreads.h **** /**
 294:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 295:./lib/chibios/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 296:./lib/chibios/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 297:./lib/chibios/os/rt/include/chthreads.h ****  *
 298:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 299:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 300:./lib/chibios/os/rt/include/chthreads.h ****  *
 301:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 302:./lib/chibios/os/rt/include/chthreads.h ****  */
 303:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 305:./lib/chibios/os/rt/include/chthreads.h **** 
 306:./lib/chibios/os/rt/include/chthreads.h ****   return tp->time;
 307:./lib/chibios/os/rt/include/chthreads.h **** }
 308:./lib/chibios/os/rt/include/chthreads.h **** #endif
 309:./lib/chibios/os/rt/include/chthreads.h **** 
 310:./lib/chibios/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 311:./lib/chibios/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 312:./lib/chibios/os/rt/include/chthreads.h **** /**
 313:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 314:./lib/chibios/os/rt/include/chthreads.h ****  *
 315:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 316:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 317:./lib/chibios/os/rt/include/chthreads.h ****  *
 318:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 319:./lib/chibios/os/rt/include/chthreads.h ****  */
 320:./lib/chibios/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 321:./lib/chibios/os/rt/include/chthreads.h **** 
 322:./lib/chibios/os/rt/include/chthreads.h ****   return tp->wabase;
 323:./lib/chibios/os/rt/include/chthreads.h **** }
 324:./lib/chibios/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 325:./lib/chibios/os/rt/include/chthreads.h **** 
 326:./lib/chibios/os/rt/include/chthreads.h **** /**
 327:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 328:./lib/chibios/os/rt/include/chthreads.h ****  *
 329:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 330:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 331:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 332:./lib/chibios/os/rt/include/chthreads.h ****  *
 333:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 334:./lib/chibios/os/rt/include/chthreads.h ****  */
 335:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 336:./lib/chibios/os/rt/include/chthreads.h **** 
 337:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 338:./lib/chibios/os/rt/include/chthreads.h **** }
 339:./lib/chibios/os/rt/include/chthreads.h **** 
 340:./lib/chibios/os/rt/include/chthreads.h **** /**
 341:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 342:./lib/chibios/os/rt/include/chthreads.h ****  *
 343:./lib/chibios/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 344:./lib/chibios/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 345:./lib/chibios/os/rt/include/chthreads.h ****  *
 346:./lib/chibios/os/rt/include/chthreads.h ****  * @xclass
 347:./lib/chibios/os/rt/include/chthreads.h ****  */
 348:./lib/chibios/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 349:./lib/chibios/os/rt/include/chthreads.h **** 
 350:./lib/chibios/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 351:./lib/chibios/os/rt/include/chthreads.h **** }
 352:./lib/chibios/os/rt/include/chthreads.h **** 
 353:./lib/chibios/os/rt/include/chthreads.h **** /**
 354:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 355:./lib/chibios/os/rt/include/chthreads.h ****  *
 356:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 357:./lib/chibios/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 358:./lib/chibios/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 359:./lib/chibios/os/rt/include/chthreads.h ****  *
 360:./lib/chibios/os/rt/include/chthreads.h ****  * @iclass
 361:./lib/chibios/os/rt/include/chthreads.h ****  */
 362:./lib/chibios/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 363:./lib/chibios/os/rt/include/chthreads.h **** 
 364:./lib/chibios/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 365:./lib/chibios/os/rt/include/chthreads.h **** 
 366:./lib/chibios/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 367:./lib/chibios/os/rt/include/chthreads.h **** }
 368:./lib/chibios/os/rt/include/chthreads.h **** 
 369:./lib/chibios/os/rt/include/chthreads.h **** /**
 370:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 371:./lib/chibios/os/rt/include/chthreads.h ****  *
 372:./lib/chibios/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 373:./lib/chibios/os/rt/include/chthreads.h ****  *                      handled as follow:
 374:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 375:./lib/chibios/os/rt/include/chthreads.h ****  *                        state.
 376:./lib/chibios/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 377:./lib/chibios/os/rt/include/chthreads.h ****  *                      .
 378:./lib/chibios/os/rt/include/chthreads.h ****  *
 379:./lib/chibios/os/rt/include/chthreads.h ****  * @sclass
 380:./lib/chibios/os/rt/include/chthreads.h ****  */
 381:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 382:./lib/chibios/os/rt/include/chthreads.h **** 
 383:./lib/chibios/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 384:./lib/chibios/os/rt/include/chthreads.h **** 
 385:./lib/chibios/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 386:./lib/chibios/os/rt/include/chthreads.h **** }
 387:./lib/chibios/os/rt/include/chthreads.h **** 
 388:./lib/chibios/os/rt/include/chthreads.h **** /**
 389:./lib/chibios/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 390:./lib/chibios/os/rt/include/chthreads.h ****  *
 391:./lib/chibios/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 392:./lib/chibios/os/rt/include/chthreads.h ****  *
 393:./lib/chibios/os/rt/include/chthreads.h ****  * @init
 394:./lib/chibios/os/rt/include/chthreads.h ****  */
 395:./lib/chibios/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
 294              		.loc 3 395 20 view .LVU92
 295              	.LBB159:
 396:./lib/chibios/os/rt/include/chthreads.h **** 
 397:./lib/chibios/os/rt/include/chthreads.h ****   ch_queue_init(&tqp->queue);
 296              		.loc 3 397 3 view .LVU93
 297              	.LBB160:
 298              	.LBI160:
 299              		.file 4 "./lib/chibios/os/rt/include/chlists.h"
   1:./lib/chibios/os/rt/include/chlists.h **** /*
   2:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chlists.h **** 
   4:./lib/chibios/os/rt/include/chlists.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chlists.h **** 
   6:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chlists.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chlists.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chlists.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chlists.h **** 
  11:./lib/chibios/os/rt/include/chlists.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chlists.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chlists.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chlists.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chlists.h **** 
  16:./lib/chibios/os/rt/include/chlists.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chlists.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chlists.h **** */
  19:./lib/chibios/os/rt/include/chlists.h **** 
  20:./lib/chibios/os/rt/include/chlists.h **** /**
  21:./lib/chibios/os/rt/include/chlists.h ****  * @file    chlists.h
  22:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Lists and Queues header.
  23:./lib/chibios/os/rt/include/chlists.h ****  *
  24:./lib/chibios/os/rt/include/chlists.h ****  * @addtogroup os_lists
  25:./lib/chibios/os/rt/include/chlists.h ****  * @{
  26:./lib/chibios/os/rt/include/chlists.h ****  */
  27:./lib/chibios/os/rt/include/chlists.h **** 
  28:./lib/chibios/os/rt/include/chlists.h **** #ifndef CHLISTS_H
  29:./lib/chibios/os/rt/include/chlists.h **** #define CHLISTS_H
  30:./lib/chibios/os/rt/include/chlists.h **** 
  31:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chlists.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chlists.h **** 
  35:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chlists.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chlists.h **** 
  39:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chlists.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chlists.h **** 
  43:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chlists.h **** /* Module data structures and types.                                         */
  45:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chlists.h **** 
  47:./lib/chibios/os/rt/include/chlists.h **** /**
  48:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic single link list header and element.
  49:./lib/chibios/os/rt/include/chlists.h ****  */
  50:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_list ch_list_t;
  51:./lib/chibios/os/rt/include/chlists.h **** 
  52:./lib/chibios/os/rt/include/chlists.h **** /**
  53:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic single link list header
  54:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  55:./lib/chibios/os/rt/include/chlists.h ****  */
  56:./lib/chibios/os/rt/include/chlists.h **** struct ch_list {
  57:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t             *next;      /**< @brief Next in the list/queue.     */
  58:./lib/chibios/os/rt/include/chlists.h **** };
  59:./lib/chibios/os/rt/include/chlists.h **** 
  60:./lib/chibios/os/rt/include/chlists.h **** /**
  61:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked list header and element.
  62:./lib/chibios/os/rt/include/chlists.h ****  */
  63:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_queue ch_queue_t;
  64:./lib/chibios/os/rt/include/chlists.h **** 
  65:./lib/chibios/os/rt/include/chlists.h **** /**
  66:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic bidirectional linked list header
  67:./lib/chibios/os/rt/include/chlists.h ****  *          and element.
  68:./lib/chibios/os/rt/include/chlists.h ****  */
  69:./lib/chibios/os/rt/include/chlists.h **** struct ch_queue {
  70:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *next;      /**< @brief Next in the list/queue.     */
  71:./lib/chibios/os/rt/include/chlists.h ****   ch_queue_t            *prev;      /**< @brief Previous in the queue.      */
  72:./lib/chibios/os/rt/include/chlists.h **** };
  73:./lib/chibios/os/rt/include/chlists.h **** 
  74:./lib/chibios/os/rt/include/chlists.h **** /**
  75:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Type of a generic priority-ordered bidirectional linked list
  76:./lib/chibios/os/rt/include/chlists.h ****  *          header and element.
  77:./lib/chibios/os/rt/include/chlists.h ****  */
  78:./lib/chibios/os/rt/include/chlists.h **** typedef struct ch_priority_queue ch_priority_queue_t;
  79:./lib/chibios/os/rt/include/chlists.h **** 
  80:./lib/chibios/os/rt/include/chlists.h **** /**
  81:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Structure representing a generic priority-ordered bidirectional
  82:./lib/chibios/os/rt/include/chlists.h ****  *          linked list header and element.
  83:./lib/chibios/os/rt/include/chlists.h ****  * @note    Link fields are void pointers in order to avoid aliasing issues.
  84:./lib/chibios/os/rt/include/chlists.h ****  */
  85:./lib/chibios/os/rt/include/chlists.h **** struct ch_priority_queue {
  86:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *next;      /**< @brief Next in the list/queue.     */
  87:./lib/chibios/os/rt/include/chlists.h ****   ch_priority_queue_t   *prev;      /**< @brief Previous in the queue.      */
  88:./lib/chibios/os/rt/include/chlists.h ****   tprio_t               prio;
  89:./lib/chibios/os/rt/include/chlists.h **** };
  90:./lib/chibios/os/rt/include/chlists.h **** 
  91:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  92:./lib/chibios/os/rt/include/chlists.h **** /* Module macros.                                                            */
  93:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
  94:./lib/chibios/os/rt/include/chlists.h **** 
  95:./lib/chibios/os/rt/include/chlists.h **** /**
  96:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Data part of a static queue object initializer.
  97:./lib/chibios/os/rt/include/chlists.h ****  * @details This macro should be used when statically initializing a
  98:./lib/chibios/os/rt/include/chlists.h ****  *          queue that is part of a bigger structure.
  99:./lib/chibios/os/rt/include/chlists.h ****  *
 100:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 101:./lib/chibios/os/rt/include/chlists.h ****  */
 102:./lib/chibios/os/rt/include/chlists.h **** #define _CH_QUEUE_DATA(name) {(ch_queue_t *)&name, (ch_queue_t *)&name}
 103:./lib/chibios/os/rt/include/chlists.h **** 
 104:./lib/chibios/os/rt/include/chlists.h **** /**
 105:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Static queue object initializer.
 106:./lib/chibios/os/rt/include/chlists.h ****  * @details Statically initialized queues require no explicit
 107:./lib/chibios/os/rt/include/chlists.h ****  *          initialization using @p queue_init().
 108:./lib/chibios/os/rt/include/chlists.h ****  *
 109:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 110:./lib/chibios/os/rt/include/chlists.h ****  */
 111:./lib/chibios/os/rt/include/chlists.h **** #define CH_QUEUE_DECL(name)                                                 \
 112:./lib/chibios/os/rt/include/chlists.h ****     ch_queue_t name = _CH_QUEUE_DATA(name)
 113:./lib/chibios/os/rt/include/chlists.h **** 
 114:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 115:./lib/chibios/os/rt/include/chlists.h **** /* External declarations.                                                    */
 116:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chlists.h **** 
 118:./lib/chibios/os/rt/include/chlists.h **** /* Early function prototypes required by the following headers.*/
 119:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 120:./lib/chibios/os/rt/include/chlists.h **** extern "C" {
 121:./lib/chibios/os/rt/include/chlists.h **** #endif
 122:./lib/chibios/os/rt/include/chlists.h **** 
 123:./lib/chibios/os/rt/include/chlists.h **** #ifdef __cplusplus
 124:./lib/chibios/os/rt/include/chlists.h **** }
 125:./lib/chibios/os/rt/include/chlists.h **** #endif
 126:./lib/chibios/os/rt/include/chlists.h **** 
 127:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 128:./lib/chibios/os/rt/include/chlists.h **** /* Module inline functions.                                                  */
 129:./lib/chibios/os/rt/include/chlists.h **** /*===========================================================================*/
 130:./lib/chibios/os/rt/include/chlists.h **** 
 131:./lib/chibios/os/rt/include/chlists.h **** /**
 132:./lib/chibios/os/rt/include/chlists.h ****  * @brief   List initialization.
 133:./lib/chibios/os/rt/include/chlists.h ****  *
 134:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] lp       pointer to the list header
 135:./lib/chibios/os/rt/include/chlists.h ****  *
 136:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 137:./lib/chibios/os/rt/include/chlists.h ****  */
 138:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_init(ch_list_t *lp) {
 139:./lib/chibios/os/rt/include/chlists.h **** 
 140:./lib/chibios/os/rt/include/chlists.h ****   lp->next = lp;
 141:./lib/chibios/os/rt/include/chlists.h **** }
 142:./lib/chibios/os/rt/include/chlists.h **** 
 143:./lib/chibios/os/rt/include/chlists.h **** /**
 144:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is empty.
 145:./lib/chibios/os/rt/include/chlists.h ****  *
 146:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 147:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 148:./lib/chibios/os/rt/include/chlists.h ****  *
 149:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 150:./lib/chibios/os/rt/include/chlists.h ****  */
 151:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_isempty(ch_list_t *lp) {
 152:./lib/chibios/os/rt/include/chlists.h **** 
 153:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next == lp);
 154:./lib/chibios/os/rt/include/chlists.h **** }
 155:./lib/chibios/os/rt/include/chlists.h **** 
 156:./lib/chibios/os/rt/include/chlists.h **** /**
 157:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is not empty.
 158:./lib/chibios/os/rt/include/chlists.h ****  *
 159:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 160:./lib/chibios/os/rt/include/chlists.h ****  * @return              The status of the list.
 161:./lib/chibios/os/rt/include/chlists.h ****  *
 162:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 163:./lib/chibios/os/rt/include/chlists.h ****  */
 164:./lib/chibios/os/rt/include/chlists.h **** static inline bool ch_list_notempty(ch_list_t *lp) {
 165:./lib/chibios/os/rt/include/chlists.h **** 
 166:./lib/chibios/os/rt/include/chlists.h ****   return (bool)(lp->next != lp);
 167:./lib/chibios/os/rt/include/chlists.h **** }
 168:./lib/chibios/os/rt/include/chlists.h **** 
 169:./lib/chibios/os/rt/include/chlists.h **** /**
 170:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pushes an element on top of a stack list.
 171:./lib/chibios/os/rt/include/chlists.h ****  *
 172:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] p     the pointer to the element to be inserted in the list
 173:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp    the pointer to the list header
 174:./lib/chibios/os/rt/include/chlists.h ****  *
 175:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 176:./lib/chibios/os/rt/include/chlists.h ****  */
 177:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_list_push(ch_list_t *p, ch_list_t *lp) {
 178:./lib/chibios/os/rt/include/chlists.h **** 
 179:./lib/chibios/os/rt/include/chlists.h ****   p->next = lp->next;
 180:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p;
 181:./lib/chibios/os/rt/include/chlists.h **** }
 182:./lib/chibios/os/rt/include/chlists.h **** 
 183:./lib/chibios/os/rt/include/chlists.h **** /**
 184:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Pops an element from the top of a stack list and returns it.
 185:./lib/chibios/os/rt/include/chlists.h ****  * @pre     The list must be non-empty before calling this function.
 186:./lib/chibios/os/rt/include/chlists.h ****  *
 187:./lib/chibios/os/rt/include/chlists.h ****  * @param[in] lp        the pointer to the list header
 188:./lib/chibios/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 189:./lib/chibios/os/rt/include/chlists.h ****  *
 190:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 191:./lib/chibios/os/rt/include/chlists.h ****  */
 192:./lib/chibios/os/rt/include/chlists.h **** static inline ch_list_t *ch_list_pop(ch_list_t *lp) {
 193:./lib/chibios/os/rt/include/chlists.h **** 
 194:./lib/chibios/os/rt/include/chlists.h ****   ch_list_t *p = lp->next;
 195:./lib/chibios/os/rt/include/chlists.h ****   lp->next = p->next;
 196:./lib/chibios/os/rt/include/chlists.h **** 
 197:./lib/chibios/os/rt/include/chlists.h ****   return p;
 198:./lib/chibios/os/rt/include/chlists.h **** }
 199:./lib/chibios/os/rt/include/chlists.h **** 
 200:./lib/chibios/os/rt/include/chlists.h **** /**
 201:./lib/chibios/os/rt/include/chlists.h ****  * @brief   Queue initialization.
 202:./lib/chibios/os/rt/include/chlists.h ****  *
 203:./lib/chibios/os/rt/include/chlists.h ****  * @param[out] qp       pointer to the queue header
 204:./lib/chibios/os/rt/include/chlists.h ****  *
 205:./lib/chibios/os/rt/include/chlists.h ****  * @notapi
 206:./lib/chibios/os/rt/include/chlists.h ****  */
 207:./lib/chibios/os/rt/include/chlists.h **** static inline void ch_queue_init(ch_queue_t *qp) {
 300              		.loc 4 207 20 view .LVU94
 301              	.LBB161:
 208:./lib/chibios/os/rt/include/chlists.h **** 
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->next = qp;
 302              		.loc 4 209 3 view .LVU95
 303              	.LBE161:
 304              	.LBE160:
 305              	.LBE159:
 306              	.LBE158:
 307              	.LBE157:
 178:lib/chibios/os/hal/src/hal_queues.c **** 
 308              		.loc 1 178 47 is_stmt 0 view .LVU96
 309 0000 10B5     		push	{r4, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 181:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_counter = 0;
 182:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_buffer  = bp;
 183:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_rdptr   = bp;
 184:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_wrptr   = bp;
 185:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_top     = bp + size;
 313              		.loc 1 185 23 view .LVU97
 314 0002 0A44     		add	r2, r2, r1
 315              	.LVL31:
 181:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_counter = 0;
 316              		.loc 1 181 18 view .LVU98
 317 0004 0024     		movs	r4, #0
 186:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_notify  = infy;
 318              		.loc 1 186 18 view .LVU99
 319 0006 C361     		str	r3, [r0, #28]
 187:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_link    = link;
 320              		.loc 1 187 18 view .LVU100
 321 0008 029B     		ldr	r3, [sp, #8]
 322              	.LVL32:
 181:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_counter = 0;
 323              		.loc 1 181 18 view .LVU101
 324 000a 8460     		str	r4, [r0, #8]
 325              	.LBB166:
 326              	.LBB165:
 327              	.LBB164:
 328              	.LBB163:
 329              	.LBB162:
 210:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 330              		.loc 4 210 12 view .LVU102
 331 000c C0E90000 		strd	r0, r0, [r0]
 332              	.LVL33:
 333              		.loc 4 210 12 view .LVU103
 334              	.LBE162:
 335              	.LBE163:
 336              	.LBE164:
 337              	.LBE165:
 338              	.LBE166:
 181:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_buffer  = bp;
 339              		.loc 1 181 3 is_stmt 1 view .LVU104
 182:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_rdptr   = bp;
 340              		.loc 1 182 3 view .LVU105
 184:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_top     = bp + size;
 341              		.loc 1 184 18 is_stmt 0 view .LVU106
 342 0010 C0E90511 		strd	r1, r1, [r0, #20]
 182:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_rdptr   = bp;
 343              		.loc 1 182 18 view .LVU107
 344 0014 C160     		str	r1, [r0, #12]
 183:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_wrptr   = bp;
 345              		.loc 1 183 3 is_stmt 1 view .LVU108
 185:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_notify  = infy;
 346              		.loc 1 185 3 view .LVU109
 185:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_notify  = infy;
 347              		.loc 1 185 18 is_stmt 0 view .LVU110
 348 0016 0261     		str	r2, [r0, #16]
 186:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_link    = link;
 349              		.loc 1 186 3 is_stmt 1 view .LVU111
 350              		.loc 1 187 3 view .LVU112
 351              		.loc 1 187 18 is_stmt 0 view .LVU113
 352 0018 0362     		str	r3, [r0, #32]
 188:lib/chibios/os/hal/src/hal_queues.c **** }
 353              		.loc 1 188 1 view .LVU114
 354 001a 10BD     		pop	{r4, pc}
 355              		.loc 1 188 1 view .LVU115
 356              		.cfi_endproc
 357              	.LFE330:
 359              		.section	.text.iqResetI,"ax",%progbits
 360              		.align	1
 361              		.global	iqResetI
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	iqResetI:
 368              	.LVL34:
 369              	.LFB331:
 189:lib/chibios/os/hal/src/hal_queues.c **** 
 190:lib/chibios/os/hal/src/hal_queues.c **** /**
 191:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Resets an input queue.
 192:lib/chibios/os/hal/src/hal_queues.c ****  * @details All the data in the input queue is erased and lost, any waiting
 193:lib/chibios/os/hal/src/hal_queues.c ****  *          thread is resumed with status @p MSG_RESET.
 194:lib/chibios/os/hal/src/hal_queues.c ****  * @note    A reset operation can be used by a low level driver in order to
 195:lib/chibios/os/hal/src/hal_queues.c ****  *          obtain immediate attention from the high level layers.
 196:lib/chibios/os/hal/src/hal_queues.c ****  *
 197:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 198:lib/chibios/os/hal/src/hal_queues.c ****  *
 199:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 200:lib/chibios/os/hal/src/hal_queues.c ****  */
 201:lib/chibios/os/hal/src/hal_queues.c **** void iqResetI(input_queue_t *iqp) {
 370              		.loc 1 201 35 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 202:lib/chibios/os/hal/src/hal_queues.c **** 
 203:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 375              		.loc 1 203 23 view .LVU117
 204:lib/chibios/os/hal/src/hal_queues.c **** 
 205:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_rdptr = iqp->q_buffer;
 376              		.loc 1 205 3 view .LVU118
 377              		.loc 1 205 21 is_stmt 0 view .LVU119
 378 0000 C268     		ldr	r2, [r0, #12]
 206:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_wrptr = iqp->q_buffer;
 379              		.loc 1 206 16 view .LVU120
 380 0002 C0E90522 		strd	r2, r2, [r0, #20]
 207:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_counter = 0;
 381              		.loc 1 207 3 is_stmt 1 view .LVU121
 382              		.loc 1 207 18 is_stmt 0 view .LVU122
 383 0006 0022     		movs	r2, #0
 384 0008 8260     		str	r2, [r0, #8]
 208:lib/chibios/os/hal/src/hal_queues.c ****   osalThreadDequeueAllI(&iqp->q_waiting, MSG_RESET);
 385              		.loc 1 208 3 is_stmt 1 view .LVU123
 386              	.LVL35:
 387              	.LBB167:
 388              	.LBI167:
 867:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 868:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 869:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 870:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enqueues the caller thread.
 871:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 872:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          dequeued or the specified timeouts expires.
 873:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 874:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 875:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 876:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 877:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 878:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 879:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 880:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 881:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 882:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 883:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 884:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 885:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 886:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specified timeout or if the function has been
 887:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 888:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specification.
 889:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 890:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 891:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 893:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 894:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 896:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 897:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 898:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 899:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 900:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 901:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 902:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 903:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 904:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 905:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 907:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueNextI(tqp, msg);
 909:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 910:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 911:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 912:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 913:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 914:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 915:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 916:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 917:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 918:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 389              		.loc 2 919 20 view .LVU124
 390              	.LBB168:
 920:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 921:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueAllI(tqp, msg);
 391              		.loc 2 921 3 view .LVU125
 392 000a 6FF00101 		mvn	r1, #1
 393 000e FFF7FEBF 		b	chThdDequeueAllI
 394              	.LVL36:
 395              		.loc 2 921 3 is_stmt 0 view .LVU126
 396              	.LBE168:
 397              	.LBE167:
 398              		.cfi_endproc
 399              	.LFE331:
 401              		.section	.text.iqPutI,"ax",%progbits
 402              		.align	1
 403              		.global	iqPutI
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	iqPutI:
 410              	.LVL37:
 411              	.LFB332:
 209:lib/chibios/os/hal/src/hal_queues.c **** }
 210:lib/chibios/os/hal/src/hal_queues.c **** 
 211:lib/chibios/os/hal/src/hal_queues.c **** /**
 212:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Input queue write.
 213:lib/chibios/os/hal/src/hal_queues.c ****  * @details A byte value is written into the low end of an input queue. The
 214:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes immediately.
 215:lib/chibios/os/hal/src/hal_queues.c ****  *
 216:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 217:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] b         the byte value to be written in the queue
 218:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The operation status.
 219:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_OK       if the operation has been completed with success.
 220:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is full.
 221:lib/chibios/os/hal/src/hal_queues.c ****  *
 222:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 223:lib/chibios/os/hal/src/hal_queues.c ****  */
 224:lib/chibios/os/hal/src/hal_queues.c **** msg_t iqPutI(input_queue_t *iqp, uint8_t b) {
 412              		.loc 1 224 45 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 225:lib/chibios/os/hal/src/hal_queues.c **** 
 226:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 416              		.loc 1 226 23 view .LVU128
 227:lib/chibios/os/hal/src/hal_queues.c **** 
 228:lib/chibios/os/hal/src/hal_queues.c ****   /* Queue space check.*/
 229:lib/chibios/os/hal/src/hal_queues.c ****   if (!iqIsFullI(iqp)) {
 417              		.loc 1 229 3 view .LVU129
 224:lib/chibios/os/hal/src/hal_queues.c **** 
 418              		.loc 1 224 45 is_stmt 0 view .LVU130
 419 0000 08B5     		push	{r3, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 3, -8
 422              		.cfi_offset 14, -4
 423              		.loc 1 229 8 view .LVU131
 424 0002 D0E90532 		ldrd	r3, r2, [r0, #20]
 425 0006 9342     		cmp	r3, r2
 426 0008 01D1     		bne	.L14
 427              		.loc 1 229 8 discriminator 1 view .LVU132
 428 000a 8268     		ldr	r2, [r0, #8]
 429 000c 82B9     		cbnz	r2, .L17
 430              	.L14:
 230:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_counter++;
 431              		.loc 1 230 5 is_stmt 1 view .LVU133
 432              		.loc 1 230 8 is_stmt 0 view .LVU134
 433 000e 8268     		ldr	r2, [r0, #8]
 434              		.loc 1 230 19 view .LVU135
 435 0010 0132     		adds	r2, r2, #1
 436 0012 8260     		str	r2, [r0, #8]
 231:lib/chibios/os/hal/src/hal_queues.c ****     *iqp->q_wrptr++ = b;
 437              		.loc 1 231 5 is_stmt 1 view .LVU136
 438              		.loc 1 231 18 is_stmt 0 view .LVU137
 439 0014 5A1C     		adds	r2, r3, #1
 440 0016 4261     		str	r2, [r0, #20]
 441              		.loc 1 231 21 view .LVU138
 442 0018 1970     		strb	r1, [r3]
 232:lib/chibios/os/hal/src/hal_queues.c ****     if (iqp->q_wrptr >= iqp->q_top) {
 443              		.loc 1 232 5 is_stmt 1 view .LVU139
 444              		.loc 1 232 8 is_stmt 0 view .LVU140
 445 001a D0E90432 		ldrd	r3, r2, [r0, #16]
 446 001e 9A42     		cmp	r2, r3
 233:lib/chibios/os/hal/src/hal_queues.c ****       iqp->q_wrptr = iqp->q_buffer;
 447              		.loc 1 233 7 is_stmt 1 view .LVU141
 448              		.loc 1 233 20 is_stmt 0 view .LVU142
 449 0020 24BF     		itt	cs
 450 0022 C368     		ldrcs	r3, [r0, #12]
 451 0024 4361     		strcs	r3, [r0, #20]
 234:lib/chibios/os/hal/src/hal_queues.c ****     }
 235:lib/chibios/os/hal/src/hal_queues.c **** 
 236:lib/chibios/os/hal/src/hal_queues.c ****     osalThreadDequeueNextI(&iqp->q_waiting, MSG_OK);
 452              		.loc 1 236 5 is_stmt 1 view .LVU143
 453              	.LVL38:
 454              	.LBB169:
 455              	.LBI169:
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 456              		.loc 2 906 20 view .LVU144
 457              	.LBB170:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 458              		.loc 2 908 3 view .LVU145
 459 0026 0021     		movs	r1, #0
 460              	.LVL39:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 461              		.loc 2 908 3 is_stmt 0 view .LVU146
 462 0028 FFF7FEFF 		bl	chThdDequeueNextI
 463              	.LVL40:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 464              		.loc 2 908 3 view .LVU147
 465              	.LBE170:
 466              	.LBE169:
 237:lib/chibios/os/hal/src/hal_queues.c **** 
 238:lib/chibios/os/hal/src/hal_queues.c ****     return MSG_OK;
 467              		.loc 1 238 5 is_stmt 1 view .LVU148
 468              		.loc 1 238 12 is_stmt 0 view .LVU149
 469 002c 0020     		movs	r0, #0
 470              	.L13:
 239:lib/chibios/os/hal/src/hal_queues.c ****   }
 240:lib/chibios/os/hal/src/hal_queues.c **** 
 241:lib/chibios/os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 242:lib/chibios/os/hal/src/hal_queues.c **** }
 471              		.loc 1 242 1 view .LVU150
 472 002e 08BD     		pop	{r3, pc}
 473              	.LVL41:
 474              	.L17:
 241:lib/chibios/os/hal/src/hal_queues.c **** }
 475              		.loc 1 241 10 view .LVU151
 476 0030 4FF0FF30 		mov	r0, #-1
 477              	.LVL42:
 241:lib/chibios/os/hal/src/hal_queues.c **** }
 478              		.loc 1 241 10 view .LVU152
 479 0034 FBE7     		b	.L13
 480              		.cfi_endproc
 481              	.LFE332:
 483              		.section	.text.iqGetI,"ax",%progbits
 484              		.align	1
 485              		.global	iqGetI
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu fpv4-sp-d16
 491              	iqGetI:
 492              	.LVL43:
 493              	.LFB333:
 243:lib/chibios/os/hal/src/hal_queues.c **** 
 244:lib/chibios/os/hal/src/hal_queues.c **** /**
 245:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Input queue non-blocking read.
 246:lib/chibios/os/hal/src/hal_queues.c ****  * @details This function reads a byte value from an input queue. The
 247:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes immediately.
 248:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked after removing a character from the
 249:lib/chibios/os/hal/src/hal_queues.c ****  *          queue.
 250:lib/chibios/os/hal/src/hal_queues.c ****  *
 251:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 252:lib/chibios/os/hal/src/hal_queues.c ****  * @return              A byte value from the queue.
 253:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is empty.
 254:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 255:lib/chibios/os/hal/src/hal_queues.c ****  *
 256:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 257:lib/chibios/os/hal/src/hal_queues.c ****  */
 258:lib/chibios/os/hal/src/hal_queues.c **** msg_t iqGetI(input_queue_t *iqp) {
 494              		.loc 1 258 34 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 259:lib/chibios/os/hal/src/hal_queues.c **** 
 260:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 498              		.loc 1 260 23 view .LVU154
 261:lib/chibios/os/hal/src/hal_queues.c **** 
 262:lib/chibios/os/hal/src/hal_queues.c ****   /* Queue data check.*/
 263:lib/chibios/os/hal/src/hal_queues.c ****   if (!iqIsEmptyI(iqp)) {
 499              		.loc 1 263 3 view .LVU155
 500              		.loc 1 263 8 is_stmt 0 view .LVU156
 501 0000 8368     		ldr	r3, [r0, #8]
 258:lib/chibios/os/hal/src/hal_queues.c **** 
 502              		.loc 1 258 34 view .LVU157
 503 0002 10B5     		push	{r4, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 4, -8
 506              		.cfi_offset 14, -4
 507              		.loc 1 263 6 view .LVU158
 508 0004 83B1     		cbz	r3, .L22
 509              	.LBB171:
 264:lib/chibios/os/hal/src/hal_queues.c ****     uint8_t b;
 510              		.loc 1 264 5 is_stmt 1 view .LVU159
 265:lib/chibios/os/hal/src/hal_queues.c **** 
 266:lib/chibios/os/hal/src/hal_queues.c ****     /* Getting the character from the queue.*/
 267:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_counter--;
 511              		.loc 1 267 5 view .LVU160
 512              		.loc 1 267 8 is_stmt 0 view .LVU161
 513 0006 8368     		ldr	r3, [r0, #8]
 268:lib/chibios/os/hal/src/hal_queues.c ****     b = *iqp->q_rdptr++;
 514              		.loc 1 268 13 view .LVU162
 515 0008 8269     		ldr	r2, [r0, #24]
 267:lib/chibios/os/hal/src/hal_queues.c ****     b = *iqp->q_rdptr++;
 516              		.loc 1 267 19 view .LVU163
 517 000a 013B     		subs	r3, r3, #1
 518 000c 8360     		str	r3, [r0, #8]
 519              		.loc 1 268 5 is_stmt 1 view .LVU164
 520              		.loc 1 268 22 is_stmt 0 view .LVU165
 521 000e 531C     		adds	r3, r2, #1
 522 0010 8361     		str	r3, [r0, #24]
 523              		.loc 1 268 7 view .LVU166
 524 0012 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 525              	.LVL44:
 269:lib/chibios/os/hal/src/hal_queues.c ****     if (iqp->q_rdptr >= iqp->q_top) {
 526              		.loc 1 269 5 is_stmt 1 view .LVU167
 527              		.loc 1 269 8 is_stmt 0 view .LVU168
 528 0014 0269     		ldr	r2, [r0, #16]
 529 0016 9342     		cmp	r3, r2
 270:lib/chibios/os/hal/src/hal_queues.c ****       iqp->q_rdptr = iqp->q_buffer;
 530              		.loc 1 270 7 is_stmt 1 view .LVU169
 531              		.loc 1 270 20 is_stmt 0 view .LVU170
 532 0018 24BF     		itt	cs
 533 001a C368     		ldrcs	r3, [r0, #12]
 534 001c 8361     		strcs	r3, [r0, #24]
 271:lib/chibios/os/hal/src/hal_queues.c ****     }
 272:lib/chibios/os/hal/src/hal_queues.c **** 
 273:lib/chibios/os/hal/src/hal_queues.c ****     /* Inform the low side that the queue has at least one slot available.*/
 274:lib/chibios/os/hal/src/hal_queues.c ****     if (iqp->q_notify != NULL) {
 535              		.loc 1 274 5 is_stmt 1 view .LVU171
 536              		.loc 1 274 12 is_stmt 0 view .LVU172
 537 001e C369     		ldr	r3, [r0, #28]
 538              		.loc 1 274 8 view .LVU173
 539 0020 03B1     		cbz	r3, .L21
 275:lib/chibios/os/hal/src/hal_queues.c ****       iqp->q_notify(iqp);
 540              		.loc 1 275 7 is_stmt 1 view .LVU174
 541 0022 9847     		blx	r3
 542              	.LVL45:
 543              	.L21:
 276:lib/chibios/os/hal/src/hal_queues.c ****     }
 277:lib/chibios/os/hal/src/hal_queues.c **** 
 278:lib/chibios/os/hal/src/hal_queues.c ****     return (msg_t)b;
 544              		.loc 1 278 5 view .LVU175
 545              		.loc 1 278 12 is_stmt 0 view .LVU176
 546 0024 2046     		mov	r0, r4
 547              	.LVL46:
 548              	.L18:
 549              		.loc 1 278 12 view .LVU177
 550              	.LBE171:
 279:lib/chibios/os/hal/src/hal_queues.c ****   }
 280:lib/chibios/os/hal/src/hal_queues.c **** 
 281:lib/chibios/os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 282:lib/chibios/os/hal/src/hal_queues.c **** }
 551              		.loc 1 282 1 view .LVU178
 552 0026 10BD     		pop	{r4, pc}
 553              	.LVL47:
 554              	.L22:
 281:lib/chibios/os/hal/src/hal_queues.c **** }
 555              		.loc 1 281 10 view .LVU179
 556 0028 4FF0FF30 		mov	r0, #-1
 557              	.LVL48:
 281:lib/chibios/os/hal/src/hal_queues.c **** }
 558              		.loc 1 281 10 view .LVU180
 559 002c FBE7     		b	.L18
 560              		.cfi_endproc
 561              	.LFE333:
 563              		.section	.text.iqGetTimeout,"ax",%progbits
 564              		.align	1
 565              		.global	iqGetTimeout
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	iqGetTimeout:
 572              	.LVL49:
 573              	.LFB334:
 283:lib/chibios/os/hal/src/hal_queues.c **** 
 284:lib/chibios/os/hal/src/hal_queues.c **** /**
 285:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Input queue read with timeout.
 286:lib/chibios/os/hal/src/hal_queues.c ****  * @details This function reads a byte value from an input queue. If the queue
 287:lib/chibios/os/hal/src/hal_queues.c ****  *          is empty then the calling thread is suspended until a byte arrives
 288:lib/chibios/os/hal/src/hal_queues.c ****  *          in the queue or a timeout occurs.
 289:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked after removing a character from the
 290:lib/chibios/os/hal/src/hal_queues.c ****  *          queue.
 291:lib/chibios/os/hal/src/hal_queues.c ****  *
 292:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 293:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 294:lib/chibios/os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 295:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 296:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 297:lib/chibios/os/hal/src/hal_queues.c ****  *                      .
 298:lib/chibios/os/hal/src/hal_queues.c ****  * @return              A byte value from the queue.
 299:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 300:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 301:lib/chibios/os/hal/src/hal_queues.c ****  *
 302:lib/chibios/os/hal/src/hal_queues.c ****  * @api
 303:lib/chibios/os/hal/src/hal_queues.c ****  */
 304:lib/chibios/os/hal/src/hal_queues.c **** msg_t iqGetTimeout(input_queue_t *iqp, sysinterval_t timeout) {
 574              		.loc 1 304 63 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 305:lib/chibios/os/hal/src/hal_queues.c ****   uint8_t b;
 578              		.loc 1 305 3 view .LVU182
 306:lib/chibios/os/hal/src/hal_queues.c **** 
 307:lib/chibios/os/hal/src/hal_queues.c ****   osalSysLock();
 579              		.loc 1 307 3 view .LVU183
 580              	.LBB172:
 581              	.LBI172:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 582              		.loc 2 573 20 view .LVU184
 583              	.LBB173:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 584              		.loc 2 575 3 view .LVU185
 585              	.LBB174:
 586              	.LBI174:
 587              		.file 5 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 588              		.loc 5 355 20 view .LVU186
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 589              		.loc 5 357 3 view .LVU187
 590              	.LBB175:
 591              	.LBI175:
 592              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 593              		.loc 6 669 27 view .LVU188
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 594              		.loc 6 677 3 view .LVU189
 595              	.LBB176:
 596              	.LBI176:
 597              		.file 7 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 598              		.loc 7 491 27 view .LVU190
 599              	.LBB177:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 600              		.loc 7 493 3 view .LVU191
 601              	.LBE177:
 602              	.LBE176:
 603              	.LBE175:
 604              	.LBE174:
 605              	.LBE173:
 606              	.LBE172:
 304:lib/chibios/os/hal/src/hal_queues.c ****   uint8_t b;
 607              		.loc 1 304 63 is_stmt 0 view .LVU192
 608 0000 70B5     		push	{r4, r5, r6, lr}
 609              		.cfi_def_cfa_offset 16
 610              		.cfi_offset 4, -16
 611              		.cfi_offset 5, -12
 612              		.cfi_offset 6, -8
 613              		.cfi_offset 14, -4
 614              	.LBB188:
 615              	.LBB186:
 616              	.LBB184:
 617              	.LBB182:
 618              	.LBB180:
 619              	.LBB178:
 620              		.loc 7 493 3 view .LVU193
 621 0002 2023     		movs	r3, #32
 622              	.LBE178:
 623              	.LBE180:
 624              	.LBE182:
 625              	.LBE184:
 626              	.LBE186:
 627              	.LBE188:
 304:lib/chibios/os/hal/src/hal_queues.c ****   uint8_t b;
 628              		.loc 1 304 63 view .LVU194
 629 0004 0446     		mov	r4, r0
 630 0006 0E46     		mov	r6, r1
 631              	.LBB189:
 632              	.LBB187:
 633              	.LBB185:
 634              	.LBB183:
 635              	.LBB181:
 636              	.LBB179:
 637              		.loc 7 493 3 view .LVU195
 638              		.syntax unified
 639              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 640 0008 83F31188 		MSR basepri, r3
 641              	@ 0 "" 2
 642              	.LVL50:
 643              		.loc 7 493 3 view .LVU196
 644              		.thumb
 645              		.syntax unified
 646              	.LBE179:
 647              	.LBE181:
 648              	.LBE183:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 649              		.loc 5 358 34 is_stmt 1 view .LVU197
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 650              		.loc 5 359 20 view .LVU198
 651              	.L27:
 652              		.loc 5 359 20 is_stmt 0 view .LVU199
 653              	.LBE185:
 654              	.LBE187:
 655              	.LBE189:
 308:lib/chibios/os/hal/src/hal_queues.c **** 
 309:lib/chibios/os/hal/src/hal_queues.c ****   /* Waiting until there is a character available or a timeout occurs.*/
 310:lib/chibios/os/hal/src/hal_queues.c ****   while (iqIsEmptyI(iqp)) {
 656              		.loc 1 310 10 is_stmt 1 view .LVU200
 657 000c A568     		ldr	r5, [r4, #8]
 658 000e A5B1     		cbz	r5, .L29
 311:lib/chibios/os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 312:lib/chibios/os/hal/src/hal_queues.c ****     if (msg < MSG_OK) {
 313:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 314:lib/chibios/os/hal/src/hal_queues.c ****       return msg;
 315:lib/chibios/os/hal/src/hal_queues.c ****     }
 316:lib/chibios/os/hal/src/hal_queues.c ****   }
 317:lib/chibios/os/hal/src/hal_queues.c **** 
 318:lib/chibios/os/hal/src/hal_queues.c ****   /* Getting the character from the queue.*/
 319:lib/chibios/os/hal/src/hal_queues.c ****   iqp->q_counter--;
 659              		.loc 1 319 3 view .LVU201
 660              		.loc 1 319 6 is_stmt 0 view .LVU202
 661 0010 A368     		ldr	r3, [r4, #8]
 320:lib/chibios/os/hal/src/hal_queues.c ****   b = *iqp->q_rdptr++;
 662              		.loc 1 320 11 view .LVU203
 663 0012 A269     		ldr	r2, [r4, #24]
 319:lib/chibios/os/hal/src/hal_queues.c ****   b = *iqp->q_rdptr++;
 664              		.loc 1 319 17 view .LVU204
 665 0014 013B     		subs	r3, r3, #1
 666 0016 A360     		str	r3, [r4, #8]
 667              		.loc 1 320 3 is_stmt 1 view .LVU205
 668              		.loc 1 320 20 is_stmt 0 view .LVU206
 669 0018 531C     		adds	r3, r2, #1
 670 001a A361     		str	r3, [r4, #24]
 671              		.loc 1 320 5 view .LVU207
 672 001c 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 673              	.LVL51:
 321:lib/chibios/os/hal/src/hal_queues.c ****   if (iqp->q_rdptr >= iqp->q_top) {
 674              		.loc 1 321 3 is_stmt 1 view .LVU208
 675              		.loc 1 321 6 is_stmt 0 view .LVU209
 676 001e 2269     		ldr	r2, [r4, #16]
 677 0020 9342     		cmp	r3, r2
 322:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_rdptr = iqp->q_buffer;
 678              		.loc 1 322 5 is_stmt 1 view .LVU210
 679              		.loc 1 322 18 is_stmt 0 view .LVU211
 680 0022 24BF     		itt	cs
 681 0024 E368     		ldrcs	r3, [r4, #12]
 682 0026 A361     		strcs	r3, [r4, #24]
 323:lib/chibios/os/hal/src/hal_queues.c ****   }
 324:lib/chibios/os/hal/src/hal_queues.c **** 
 325:lib/chibios/os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one slot available.*/
 326:lib/chibios/os/hal/src/hal_queues.c ****   if (iqp->q_notify != NULL) {
 683              		.loc 1 326 3 is_stmt 1 view .LVU212
 684              		.loc 1 326 10 is_stmt 0 view .LVU213
 685 0028 E369     		ldr	r3, [r4, #28]
 686              		.loc 1 326 6 view .LVU214
 687 002a 0BB1     		cbz	r3, .L31
 327:lib/chibios/os/hal/src/hal_queues.c ****     iqp->q_notify(iqp);
 688              		.loc 1 327 5 is_stmt 1 view .LVU215
 689 002c 2046     		mov	r0, r4
 690 002e 9847     		blx	r3
 691              	.LVL52:
 692              	.L31:
 328:lib/chibios/os/hal/src/hal_queues.c ****   }
 329:lib/chibios/os/hal/src/hal_queues.c **** 
 330:lib/chibios/os/hal/src/hal_queues.c ****   osalSysUnlock();
 693              		.loc 1 330 3 view .LVU216
 694              	.LBB190:
 695              	.LBI190:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 696              		.loc 2 584 20 view .LVU217
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 697              		.loc 2 586 3 view .LVU218
 698              	.LBB191:
 699              	.LBI191:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 700              		.loc 5 367 20 view .LVU219
 701              	.LBB192:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 702              		.loc 5 369 22 view .LVU220
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 703              		.loc 5 370 33 view .LVU221
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 704              		.loc 5 376 3 view .LVU222
 705              		.loc 5 376 3 view .LVU223
 706              		.loc 5 376 3 view .LVU224
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 707              		.loc 5 380 3 view .LVU225
 708              	.LBB193:
 709              	.LBI193:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 710              		.loc 6 693 27 view .LVU226
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 711              		.loc 6 696 3 view .LVU227
 712              	.LBB194:
 713              	.LBI194:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 714              		.loc 7 491 27 view .LVU228
 715              	.LBB195:
 716              		.loc 7 493 3 view .LVU229
 717 0030 0023     		movs	r3, #0
 718              		.syntax unified
 719              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 720 0032 83F31188 		MSR basepri, r3
 721              	@ 0 "" 2
 722              	.LVL53:
 723              		.loc 7 493 3 is_stmt 0 view .LVU230
 724              		.thumb
 725              		.syntax unified
 726              	.LBE195:
 727              	.LBE194:
 728              	.LBE193:
 729              	.LBE192:
 730              	.LBE191:
 731              	.LBE190:
 331:lib/chibios/os/hal/src/hal_queues.c **** 
 332:lib/chibios/os/hal/src/hal_queues.c ****   return (msg_t)b;
 732              		.loc 1 332 3 is_stmt 1 view .LVU231
 733              		.loc 1 332 10 is_stmt 0 view .LVU232
 734 0036 2846     		mov	r0, r5
 735 0038 07E0     		b	.L26
 736              	.LVL54:
 737              	.L29:
 738              	.LBB196:
 311:lib/chibios/os/hal/src/hal_queues.c ****     if (msg < MSG_OK) {
 739              		.loc 1 311 5 is_stmt 1 view .LVU233
 740              	.LBB197:
 741              	.LBI197:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 742              		.loc 2 892 21 view .LVU234
 743              	.LBB198:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 744              		.loc 2 895 3 view .LVU235
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 745              		.loc 2 895 10 is_stmt 0 view .LVU236
 746 003a 3146     		mov	r1, r6
 747 003c 2046     		mov	r0, r4
 748 003e FFF7FEFF 		bl	chThdEnqueueTimeoutS
 749              	.LVL55:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 750              		.loc 2 895 10 view .LVU237
 751              	.LBE198:
 752              	.LBE197:
 312:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 753              		.loc 1 312 5 is_stmt 1 view .LVU238
 312:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 754              		.loc 1 312 8 is_stmt 0 view .LVU239
 755 0042 0028     		cmp	r0, #0
 312:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 756              		.loc 1 312 8 view .LVU240
 757 0044 E2DA     		bge	.L27
 313:lib/chibios/os/hal/src/hal_queues.c ****       return msg;
 758              		.loc 1 313 7 is_stmt 1 view .LVU241
 759              	.LBB199:
 760              	.LBI199:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 761              		.loc 2 584 20 view .LVU242
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 762              		.loc 2 586 3 view .LVU243
 763              	.LBB200:
 764              	.LBI200:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 765              		.loc 5 367 20 view .LVU244
 766              	.LBB201:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 767              		.loc 5 369 22 view .LVU245
 370:./lib/chibios/os/rt/include/chsys.h **** 
 768              		.loc 5 370 33 view .LVU246
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 769              		.loc 5 376 3 view .LVU247
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 770              		.loc 5 376 3 view .LVU248
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 771              		.loc 5 376 3 view .LVU249
 772              		.loc 5 380 3 view .LVU250
 773              	.LBB202:
 774              	.LBI202:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 775              		.loc 6 693 27 view .LVU251
 776              		.loc 6 696 3 view .LVU252
 777              	.LVL56:
 778              	.LBB203:
 779              	.LBI203:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 780              		.loc 7 491 27 view .LVU253
 781              	.LBB204:
 782              		.loc 7 493 3 view .LVU254
 783              		.syntax unified
 784              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 785 0046 85F31188 		MSR basepri, r5
 786              	@ 0 "" 2
 787              	.LVL57:
 788              		.loc 7 493 3 is_stmt 0 view .LVU255
 789              		.thumb
 790              		.syntax unified
 791              	.LBE204:
 792              	.LBE203:
 793              	.LBE202:
 794              	.LBE201:
 795              	.LBE200:
 796              	.LBE199:
 314:lib/chibios/os/hal/src/hal_queues.c ****     }
 797              		.loc 1 314 7 is_stmt 1 view .LVU256
 798              	.L26:
 314:lib/chibios/os/hal/src/hal_queues.c ****     }
 799              		.loc 1 314 7 is_stmt 0 view .LVU257
 800              	.LBE196:
 333:lib/chibios/os/hal/src/hal_queues.c **** }
 801              		.loc 1 333 1 view .LVU258
 802 004a 70BD     		pop	{r4, r5, r6, pc}
 803              		.loc 1 333 1 view .LVU259
 804              		.cfi_endproc
 805              	.LFE334:
 807              		.section	.text.iqReadI,"ax",%progbits
 808              		.align	1
 809              		.global	iqReadI
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv4-sp-d16
 815              	iqReadI:
 816              	.LVL58:
 817              	.LFB335:
 334:lib/chibios/os/hal/src/hal_queues.c **** 
 335:lib/chibios/os/hal/src/hal_queues.c **** /**
 336:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Input queue non-blocking read.
 337:lib/chibios/os/hal/src/hal_queues.c ****  * @details The function reads data from an input queue into a buffer. The
 338:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes immediately.
 339:lib/chibios/os/hal/src/hal_queues.c ****  *
 340:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 341:lib/chibios/os/hal/src/hal_queues.c ****  * @param[out] bp       pointer to the data buffer
 342:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 343:lib/chibios/os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 344:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 345:lib/chibios/os/hal/src/hal_queues.c ****  *
 346:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 347:lib/chibios/os/hal/src/hal_queues.c ****  */
 348:lib/chibios/os/hal/src/hal_queues.c **** size_t iqReadI(input_queue_t *iqp, uint8_t *bp, size_t n) {
 818              		.loc 1 348 59 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 349:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 822              		.loc 1 349 3 view .LVU261
 348:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 823              		.loc 1 348 59 is_stmt 0 view .LVU262
 824 0000 70B5     		push	{r4, r5, r6, lr}
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 4, -16
 827              		.cfi_offset 5, -12
 828              		.cfi_offset 6, -8
 829              		.cfi_offset 14, -4
 830              		.loc 1 349 13 view .LVU263
 831 0002 C669     		ldr	r6, [r0, #28]
 832              	.LVL59:
 350:lib/chibios/os/hal/src/hal_queues.c ****   size_t rd;
 833              		.loc 1 350 3 is_stmt 1 view .LVU264
 351:lib/chibios/os/hal/src/hal_queues.c **** 
 352:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 834              		.loc 1 352 23 view .LVU265
 353:lib/chibios/os/hal/src/hal_queues.c **** 
 354:lib/chibios/os/hal/src/hal_queues.c ****   rd = iq_read(iqp, bp, n);
 835              		.loc 1 354 3 view .LVU266
 348:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 836              		.loc 1 348 59 is_stmt 0 view .LVU267
 837 0004 0546     		mov	r5, r0
 838              		.loc 1 354 8 view .LVU268
 839 0006 FFF7FEFF 		bl	iq_read
 840              	.LVL60:
 355:lib/chibios/os/hal/src/hal_queues.c **** 
 356:lib/chibios/os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one character
 357:lib/chibios/os/hal/src/hal_queues.c ****      available.*/
 358:lib/chibios/os/hal/src/hal_queues.c ****   if ((rd > (size_t)0) && (nfy != NULL)) {
 841              		.loc 1 358 3 is_stmt 1 view .LVU269
 842              		.loc 1 358 6 is_stmt 0 view .LVU270
 843 000a 0446     		mov	r4, r0
 844 000c 10B1     		cbz	r0, .L36
 845              		.loc 1 358 24 discriminator 1 view .LVU271
 846 000e 0EB1     		cbz	r6, .L36
 359:lib/chibios/os/hal/src/hal_queues.c ****     nfy(iqp);
 847              		.loc 1 359 5 is_stmt 1 view .LVU272
 848 0010 2846     		mov	r0, r5
 849              	.LVL61:
 850              		.loc 1 359 5 is_stmt 0 view .LVU273
 851 0012 B047     		blx	r6
 852              	.LVL62:
 360:lib/chibios/os/hal/src/hal_queues.c ****   }
 361:lib/chibios/os/hal/src/hal_queues.c **** 
 362:lib/chibios/os/hal/src/hal_queues.c ****   return rd;
 853              		.loc 1 362 3 is_stmt 1 view .LVU274
 854              	.L36:
 363:lib/chibios/os/hal/src/hal_queues.c **** }
 855              		.loc 1 363 1 is_stmt 0 view .LVU275
 856 0014 2046     		mov	r0, r4
 857 0016 70BD     		pop	{r4, r5, r6, pc}
 858              		.loc 1 363 1 view .LVU276
 859              		.cfi_endproc
 860              	.LFE335:
 862              		.section	.text.iqReadTimeout,"ax",%progbits
 863              		.align	1
 864              		.global	iqReadTimeout
 865              		.syntax unified
 866              		.thumb
 867              		.thumb_func
 868              		.fpu fpv4-sp-d16
 870              	iqReadTimeout:
 871              	.LVL63:
 872              	.LFB336:
 364:lib/chibios/os/hal/src/hal_queues.c **** 
 365:lib/chibios/os/hal/src/hal_queues.c **** /**
 366:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Input queue read with timeout.
 367:lib/chibios/os/hal/src/hal_queues.c ****  * @details The function reads data from an input queue into a buffer. The
 368:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
 369:lib/chibios/os/hal/src/hal_queues.c ****  *          transferred or after the specified timeout or if the queue has
 370:lib/chibios/os/hal/src/hal_queues.c ****  *          been reset.
 371:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The function is not atomic, if you need atomicity it is suggested
 372:lib/chibios/os/hal/src/hal_queues.c ****  *          to use a semaphore or a mutex for mutual exclusion.
 373:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked after removing each character from the
 374:lib/chibios/os/hal/src/hal_queues.c ****  *          queue.
 375:lib/chibios/os/hal/src/hal_queues.c ****  *
 376:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] iqp       pointer to an @p input_queue_t structure
 377:lib/chibios/os/hal/src/hal_queues.c ****  * @param[out] bp       pointer to the data buffer
 378:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 379:lib/chibios/os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 380:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 381:lib/chibios/os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 382:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 383:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 384:lib/chibios/os/hal/src/hal_queues.c ****  *                      .
 385:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 386:lib/chibios/os/hal/src/hal_queues.c ****  *
 387:lib/chibios/os/hal/src/hal_queues.c ****  * @api
 388:lib/chibios/os/hal/src/hal_queues.c ****  */
 389:lib/chibios/os/hal/src/hal_queues.c **** size_t iqReadTimeout(input_queue_t *iqp, uint8_t *bp,
 390:lib/chibios/os/hal/src/hal_queues.c ****                      size_t n, sysinterval_t timeout) {
 873              		.loc 1 390 55 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 8
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 391:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 877              		.loc 1 391 3 view .LVU278
 390:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 878              		.loc 1 390 55 is_stmt 0 view .LVU279
 879 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 880              		.cfi_def_cfa_offset 48
 881              		.cfi_offset 4, -36
 882              		.cfi_offset 5, -32
 883              		.cfi_offset 6, -28
 884              		.cfi_offset 7, -24
 885              		.cfi_offset 8, -20
 886              		.cfi_offset 9, -16
 887              		.cfi_offset 10, -12
 888              		.cfi_offset 11, -8
 889              		.cfi_offset 14, -4
 390:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = iqp->q_notify;
 890              		.loc 1 390 55 view .LVU280
 891 0004 0446     		mov	r4, r0
 892 0006 0E46     		mov	r6, r1
 893 0008 1746     		mov	r7, r2
 894 000a 9946     		mov	r9, r3
 895              		.loc 1 391 13 view .LVU281
 896 000c D0F81CA0 		ldr	r10, [r0, #28]
 897              	.LVL64:
 392:lib/chibios/os/hal/src/hal_queues.c ****   size_t max = n;
 898              		.loc 1 392 3 is_stmt 1 view .LVU282
 393:lib/chibios/os/hal/src/hal_queues.c **** 
 394:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
 899              		.loc 1 394 3 view .LVU283
 900              		.loc 1 394 3 view .LVU284
 901              		.loc 1 394 3 view .LVU285
 395:lib/chibios/os/hal/src/hal_queues.c **** 
 396:lib/chibios/os/hal/src/hal_queues.c ****   osalSysLock();
 902              		.loc 1 396 3 view .LVU286
 903              	.LBB205:
 904              	.LBI205:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 905              		.loc 2 573 20 view .LVU287
 906              	.LBB206:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 907              		.loc 2 575 3 view .LVU288
 908              	.LBB207:
 909              	.LBI207:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 910              		.loc 5 355 20 view .LVU289
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 911              		.loc 5 357 3 view .LVU290
 912              	.LBB208:
 913              	.LBI208:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 914              		.loc 6 669 27 view .LVU291
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 915              		.loc 6 677 3 view .LVU292
 916              	.LBB209:
 917              	.LBI209:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 918              		.loc 7 491 27 view .LVU293
 919              	.LBB210:
 920              		.loc 7 493 3 view .LVU294
 921 0010 4FF02008 		mov	r8, #32
 922              		.syntax unified
 923              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 924 0014 88F31188 		MSR basepri, r8
 925              	@ 0 "" 2
 926              	.LVL65:
 927              		.loc 7 493 3 is_stmt 0 view .LVU295
 928              		.thumb
 929              		.syntax unified
 930              	.LBE210:
 931              	.LBE209:
 932              	.LBE208:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 933              		.loc 5 358 34 is_stmt 1 view .LVU296
 359:./lib/chibios/os/rt/include/chsys.h **** }
 934              		.loc 5 359 20 view .LVU297
 935              	.LBE207:
 936              	.LBE206:
 937              	.LBE205:
 938              	.LBB212:
 939              	.LBB213:
 940              	.LBB214:
 941              	.LBB215:
 942              	.LBB216:
 943              	.LBB217:
 944              	.LBB218:
 945              		.loc 7 493 3 is_stmt 0 view .LVU298
 946 0018 4FF0000B 		mov	fp, #0
 947              	.LBE218:
 948              	.LBE217:
 949              	.LBE216:
 950              	.LBE215:
 951              	.LBE214:
 952              	.LBE213:
 953              	.LBE212:
 954              	.LBB234:
 955              	.LBB211:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 956              		.loc 2 576 1 view .LVU299
 957 001c 1546     		mov	r5, r2
 958              	.LVL66:
 959              	.L45:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 960              		.loc 2 576 1 view .LVU300
 961              	.LBE211:
 962              	.LBE234:
 397:lib/chibios/os/hal/src/hal_queues.c **** 
 398:lib/chibios/os/hal/src/hal_queues.c ****   while (n > 0U) {
 963              		.loc 1 398 12 is_stmt 1 view .LVU301
 964 001e 65B1     		cbz	r5, .L47
 965              	.LBB235:
 399:lib/chibios/os/hal/src/hal_queues.c ****     size_t done;
 966              		.loc 1 399 5 view .LVU302
 400:lib/chibios/os/hal/src/hal_queues.c **** 
 401:lib/chibios/os/hal/src/hal_queues.c ****     done = iq_read(iqp, bp, n);
 967              		.loc 1 401 5 view .LVU303
 968              		.loc 1 401 12 is_stmt 0 view .LVU304
 969 0020 2A46     		mov	r2, r5
 970 0022 3146     		mov	r1, r6
 971 0024 2046     		mov	r0, r4
 972 0026 FFF7FEFF 		bl	iq_read
 973              	.LVL67:
 402:lib/chibios/os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 974              		.loc 1 402 5 is_stmt 1 view .LVU305
 975              		.loc 1 402 8 is_stmt 0 view .LVU306
 976 002a 0346     		mov	r3, r0
 977 002c 60B9     		cbnz	r0, .L46
 978              	.LBB224:
 403:lib/chibios/os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&iqp->q_waiting, timeout);
 979              		.loc 1 403 7 is_stmt 1 view .LVU307
 980              	.LVL68:
 981              	.LBB225:
 982              	.LBI225:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 983              		.loc 2 892 21 view .LVU308
 984              	.LBB226:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 985              		.loc 2 895 3 view .LVU309
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 986              		.loc 2 895 10 is_stmt 0 view .LVU310
 987 002e 4946     		mov	r1, r9
 988 0030 2046     		mov	r0, r4
 989              	.LVL69:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 990              		.loc 2 895 10 view .LVU311
 991 0032 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 992              	.LVL70:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 993              		.loc 2 895 10 view .LVU312
 994              	.LBE226:
 995              	.LBE225:
 404:lib/chibios/os/hal/src/hal_queues.c **** 
 405:lib/chibios/os/hal/src/hal_queues.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 406:lib/chibios/os/hal/src/hal_queues.c ****       if (msg != MSG_OK) {
 996              		.loc 1 406 7 is_stmt 1 view .LVU313
 997              		.loc 1 406 10 is_stmt 0 view .LVU314
 998 0036 0028     		cmp	r0, #0
 999 0038 F1D0     		beq	.L45
 1000              	.LVL71:
 1001              	.L47:
 1002              		.loc 1 406 10 view .LVU315
 1003              	.LBE224:
 1004              	.LBE235:
 407:lib/chibios/os/hal/src/hal_queues.c ****         break;
 408:lib/chibios/os/hal/src/hal_queues.c ****       }
 409:lib/chibios/os/hal/src/hal_queues.c ****     }
 410:lib/chibios/os/hal/src/hal_queues.c ****     else {
 411:lib/chibios/os/hal/src/hal_queues.c ****       /* Inform the low side that the queue has at least one empty slot
 412:lib/chibios/os/hal/src/hal_queues.c ****          available.*/
 413:lib/chibios/os/hal/src/hal_queues.c ****       if (nfy != NULL) {
 414:lib/chibios/os/hal/src/hal_queues.c ****         nfy(iqp);
 415:lib/chibios/os/hal/src/hal_queues.c ****       }
 416:lib/chibios/os/hal/src/hal_queues.c **** 
 417:lib/chibios/os/hal/src/hal_queues.c ****       /* Giving a preemption chance in a controlled point.*/
 418:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 419:lib/chibios/os/hal/src/hal_queues.c **** 
 420:lib/chibios/os/hal/src/hal_queues.c ****       n  -= done;
 421:lib/chibios/os/hal/src/hal_queues.c ****       bp += done;
 422:lib/chibios/os/hal/src/hal_queues.c **** 
 423:lib/chibios/os/hal/src/hal_queues.c ****       osalSysLock();
 424:lib/chibios/os/hal/src/hal_queues.c ****     }
 425:lib/chibios/os/hal/src/hal_queues.c ****   }
 426:lib/chibios/os/hal/src/hal_queues.c **** 
 427:lib/chibios/os/hal/src/hal_queues.c ****   osalSysUnlock();
 1005              		.loc 1 427 3 is_stmt 1 view .LVU316
 1006              	.LBB236:
 1007              	.LBI236:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1008              		.loc 2 584 20 view .LVU317
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1009              		.loc 2 586 3 view .LVU318
 1010              	.LBB237:
 1011              	.LBI237:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1012              		.loc 5 367 20 view .LVU319
 1013              	.LBB238:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1014              		.loc 5 369 22 view .LVU320
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1015              		.loc 5 370 33 view .LVU321
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1016              		.loc 5 376 3 view .LVU322
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1017              		.loc 5 376 3 view .LVU323
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1018              		.loc 5 376 3 view .LVU324
 1019              		.loc 5 380 3 view .LVU325
 1020              	.LBB239:
 1021              	.LBI239:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1022              		.loc 6 693 27 view .LVU326
 1023              		.loc 6 696 3 view .LVU327
 1024              	.LBB240:
 1025              	.LBI240:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1026              		.loc 7 491 27 view .LVU328
 1027              	.LBB241:
 1028              		.loc 7 493 3 view .LVU329
 1029 003a 0023     		movs	r3, #0
 1030              		.syntax unified
 1031              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1032 003c 83F31188 		MSR basepri, r3
 1033              	@ 0 "" 2
 1034              	.LVL72:
 1035              		.loc 7 493 3 is_stmt 0 view .LVU330
 1036              		.thumb
 1037              		.syntax unified
 1038              	.LBE241:
 1039              	.LBE240:
 1040              	.LBE239:
 1041              	.LBE238:
 1042              	.LBE237:
 1043              	.LBE236:
 428:lib/chibios/os/hal/src/hal_queues.c ****   return max - n;
 1044              		.loc 1 428 3 is_stmt 1 view .LVU331
 429:lib/chibios/os/hal/src/hal_queues.c **** }
 1045              		.loc 1 429 1 is_stmt 0 view .LVU332
 1046 0040 781B     		subs	r0, r7, r5
 1047 0042 03B0     		add	sp, sp, #12
 1048              		.cfi_remember_state
 1049              		.cfi_def_cfa_offset 36
 1050              		@ sp needed
 1051 0044 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1052              	.LVL73:
 1053              	.L46:
 1054              		.cfi_restore_state
 1055              	.LBB242:
 413:lib/chibios/os/hal/src/hal_queues.c ****         nfy(iqp);
 1056              		.loc 1 413 7 is_stmt 1 view .LVU333
 413:lib/chibios/os/hal/src/hal_queues.c ****         nfy(iqp);
 1057              		.loc 1 413 10 is_stmt 0 view .LVU334
 1058 0048 BAF1000F 		cmp	r10, #0
 1059 004c 03D0     		beq	.L49
 1060 004e 0190     		str	r0, [sp, #4]
 414:lib/chibios/os/hal/src/hal_queues.c ****       }
 1061              		.loc 1 414 9 is_stmt 1 view .LVU335
 1062 0050 2046     		mov	r0, r4
 1063              	.LVL74:
 414:lib/chibios/os/hal/src/hal_queues.c ****       }
 1064              		.loc 1 414 9 is_stmt 0 view .LVU336
 1065 0052 D047     		blx	r10
 1066              	.LVL75:
 414:lib/chibios/os/hal/src/hal_queues.c ****       }
 1067              		.loc 1 414 9 view .LVU337
 1068 0054 019B     		ldr	r3, [sp, #4]
 1069              	.LVL76:
 1070              	.L49:
 418:lib/chibios/os/hal/src/hal_queues.c **** 
 1071              		.loc 1 418 7 is_stmt 1 view .LVU338
 1072              	.LBB227:
 1073              	.LBI213:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1074              		.loc 2 584 20 view .LVU339
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1075              		.loc 2 586 3 view .LVU340
 1076              	.LBB223:
 1077              	.LBI214:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1078              		.loc 5 367 20 view .LVU341
 1079              	.LBB222:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1080              		.loc 5 369 22 view .LVU342
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1081              		.loc 5 370 33 view .LVU343
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1082              		.loc 5 376 3 view .LVU344
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1083              		.loc 5 376 3 view .LVU345
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1084              		.loc 5 376 3 view .LVU346
 1085              		.loc 5 380 3 view .LVU347
 1086              	.LBB221:
 1087              	.LBI216:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1088              		.loc 6 693 27 view .LVU348
 1089              		.loc 6 696 3 view .LVU349
 1090              	.LBB220:
 1091              	.LBI217:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1092              		.loc 7 491 27 view .LVU350
 1093              	.LBB219:
 1094              		.loc 7 493 3 view .LVU351
 1095              		.syntax unified
 1096              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1097 0056 8BF31188 		MSR basepri, fp
 1098              	@ 0 "" 2
 1099              	.LVL77:
 1100              		.loc 7 493 3 is_stmt 0 view .LVU352
 1101              		.thumb
 1102              		.syntax unified
 1103              	.LBE219:
 1104              	.LBE220:
 1105              	.LBE221:
 1106              	.LBE222:
 1107              	.LBE223:
 1108              	.LBE227:
 420:lib/chibios/os/hal/src/hal_queues.c ****       bp += done;
 1109              		.loc 1 420 7 is_stmt 1 view .LVU353
 420:lib/chibios/os/hal/src/hal_queues.c ****       bp += done;
 1110              		.loc 1 420 10 is_stmt 0 view .LVU354
 1111 005a ED1A     		subs	r5, r5, r3
 1112              	.LVL78:
 421:lib/chibios/os/hal/src/hal_queues.c **** 
 1113              		.loc 1 421 7 is_stmt 1 view .LVU355
 421:lib/chibios/os/hal/src/hal_queues.c **** 
 1114              		.loc 1 421 10 is_stmt 0 view .LVU356
 1115 005c 1E44     		add	r6, r6, r3
 1116              	.LVL79:
 423:lib/chibios/os/hal/src/hal_queues.c ****     }
 1117              		.loc 1 423 7 is_stmt 1 view .LVU357
 1118              	.LBB228:
 1119              	.LBI228:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1120              		.loc 2 573 20 view .LVU358
 1121              	.LBB229:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1122              		.loc 2 575 3 view .LVU359
 1123              	.LBB230:
 1124              	.LBI230:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1125              		.loc 5 355 20 view .LVU360
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1126              		.loc 5 357 3 view .LVU361
 1127              	.LBB231:
 1128              	.LBI231:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1129              		.loc 6 669 27 view .LVU362
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1130              		.loc 6 677 3 view .LVU363
 1131              	.LBB232:
 1132              	.LBI232:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1133              		.loc 7 491 27 view .LVU364
 1134              	.LBB233:
 1135              		.loc 7 493 3 view .LVU365
 1136              		.syntax unified
 1137              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1138 005e 88F31188 		MSR basepri, r8
 1139              	@ 0 "" 2
 1140              	.LVL80:
 1141              		.loc 7 493 3 is_stmt 0 view .LVU366
 1142              		.thumb
 1143              		.syntax unified
 1144              	.LBE233:
 1145              	.LBE232:
 1146              	.LBE231:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1147              		.loc 5 358 34 is_stmt 1 view .LVU367
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1148              		.loc 5 359 20 view .LVU368
 1149              	.LBE230:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1150              		.loc 2 576 1 is_stmt 0 view .LVU369
 1151 0062 DCE7     		b	.L45
 1152              	.LBE229:
 1153              	.LBE228:
 1154              	.LBE242:
 1155              		.cfi_endproc
 1156              	.LFE336:
 1158              		.section	.text.oqObjectInit,"ax",%progbits
 1159              		.align	1
 1160              		.global	oqObjectInit
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv4-sp-d16
 1166              	oqObjectInit:
 1167              	.LVL81:
 1168              	.LFB337:
 430:lib/chibios/os/hal/src/hal_queues.c **** 
 431:lib/chibios/os/hal/src/hal_queues.c **** /**
 432:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Initializes an output queue.
 433:lib/chibios/os/hal/src/hal_queues.c ****  * @details A Semaphore is internally initialized and works as a counter of
 434:lib/chibios/os/hal/src/hal_queues.c ****  *          the free bytes in the queue.
 435:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked from within the S-Locked system state.
 436:lib/chibios/os/hal/src/hal_queues.c ****  *
 437:lib/chibios/os/hal/src/hal_queues.c ****  * @param[out] oqp      pointer to an @p output_queue_t structure
 438:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to a memory area allocated as queue buffer
 439:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] size      size of the queue buffer
 440:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] onfy      pointer to a callback function that is invoked when
 441:lib/chibios/os/hal/src/hal_queues.c ****  *                      data is written to the queue. The value can be @p NULL.
 442:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] link      application defined pointer
 443:lib/chibios/os/hal/src/hal_queues.c ****  *
 444:lib/chibios/os/hal/src/hal_queues.c ****  * @init
 445:lib/chibios/os/hal/src/hal_queues.c ****  */
 446:lib/chibios/os/hal/src/hal_queues.c **** void oqObjectInit(output_queue_t *oqp, uint8_t *bp, size_t size,
 447:lib/chibios/os/hal/src/hal_queues.c ****                   qnotify_t onfy, void *link) {
 1169              		.loc 1 447 47 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 4, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 448:lib/chibios/os/hal/src/hal_queues.c **** 
 449:lib/chibios/os/hal/src/hal_queues.c ****   osalThreadQueueObjectInit(&oqp->q_waiting);
 1174              		.loc 1 449 3 view .LVU371
 1175              	.LBB243:
 1176              	.LBI243:
 864:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1177              		.loc 2 864 20 view .LVU372
 866:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1178              		.loc 2 866 3 view .LVU373
 1179              	.LBB244:
 1180              	.LBI244:
 395:./lib/chibios/os/rt/include/chthreads.h **** 
 1181              		.loc 3 395 20 view .LVU374
 1182              	.LBB245:
 1183              		.loc 3 397 3 view .LVU375
 1184              	.LBB246:
 1185              	.LBI246:
 207:./lib/chibios/os/rt/include/chlists.h **** 
 1186              		.loc 4 207 20 view .LVU376
 1187              	.LBB247:
 209:./lib/chibios/os/rt/include/chlists.h ****   qp->prev = qp;
 1188              		.loc 4 209 3 view .LVU377
 1189              	.LBE247:
 1190              	.LBE246:
 1191              	.LBE245:
 1192              	.LBE244:
 1193              	.LBE243:
 450:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_counter = size;
 1194              		.loc 1 450 18 is_stmt 0 view .LVU378
 1195 0000 8260     		str	r2, [r0, #8]
 451:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_buffer  = bp;
 452:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_rdptr   = bp;
 453:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_wrptr   = bp;
 454:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_top     = bp + size;
 455:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_notify  = onfy;
 1196              		.loc 1 455 18 view .LVU379
 1197 0002 C361     		str	r3, [r0, #28]
 454:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_notify  = onfy;
 1198              		.loc 1 454 23 view .LVU380
 1199 0004 0A44     		add	r2, r2, r1
 1200              	.LVL82:
 456:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_link    = link;
 1201              		.loc 1 456 18 view .LVU381
 1202 0006 009B     		ldr	r3, [sp]
 1203              	.LVL83:
 451:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_buffer  = bp;
 1204              		.loc 1 451 18 view .LVU382
 1205 0008 C160     		str	r1, [r0, #12]
 1206              	.LBB252:
 1207              	.LBB251:
 1208              	.LBB250:
 1209              	.LBB249:
 1210              	.LBB248:
 1211              		.loc 4 210 12 view .LVU383
 1212 000a C0E90000 		strd	r0, r0, [r0]
 1213              	.LVL84:
 1214              		.loc 4 210 12 view .LVU384
 1215              	.LBE248:
 1216              	.LBE249:
 1217              	.LBE250:
 1218              	.LBE251:
 1219              	.LBE252:
 450:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_buffer  = bp;
 1220              		.loc 1 450 3 is_stmt 1 view .LVU385
 451:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_rdptr   = bp;
 1221              		.loc 1 451 3 view .LVU386
 452:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_wrptr   = bp;
 1222              		.loc 1 452 3 view .LVU387
 453:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_top     = bp + size;
 1223              		.loc 1 453 18 is_stmt 0 view .LVU388
 1224 000e C0E90511 		strd	r1, r1, [r0, #20]
 454:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_notify  = onfy;
 1225              		.loc 1 454 3 is_stmt 1 view .LVU389
 454:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_notify  = onfy;
 1226              		.loc 1 454 18 is_stmt 0 view .LVU390
 1227 0012 0261     		str	r2, [r0, #16]
 455:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_link    = link;
 1228              		.loc 1 455 3 is_stmt 1 view .LVU391
 1229              		.loc 1 456 3 view .LVU392
 1230              		.loc 1 456 18 is_stmt 0 view .LVU393
 1231 0014 0362     		str	r3, [r0, #32]
 457:lib/chibios/os/hal/src/hal_queues.c **** }
 1232              		.loc 1 457 1 view .LVU394
 1233 0016 7047     		bx	lr
 1234              		.cfi_endproc
 1235              	.LFE337:
 1237              		.section	.text.oqResetI,"ax",%progbits
 1238              		.align	1
 1239              		.global	oqResetI
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1243              		.fpu fpv4-sp-d16
 1245              	oqResetI:
 1246              	.LVL85:
 1247              	.LFB338:
 458:lib/chibios/os/hal/src/hal_queues.c **** 
 459:lib/chibios/os/hal/src/hal_queues.c **** /**
 460:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Resets an output queue.
 461:lib/chibios/os/hal/src/hal_queues.c ****  * @details All the data in the output queue is erased and lost, any waiting
 462:lib/chibios/os/hal/src/hal_queues.c ****  *          thread is resumed with status @p MSG_RESET.
 463:lib/chibios/os/hal/src/hal_queues.c ****  * @note    A reset operation can be used by a low level driver in order to
 464:lib/chibios/os/hal/src/hal_queues.c ****  *          obtain immediate attention from the high level layers.
 465:lib/chibios/os/hal/src/hal_queues.c ****  *
 466:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 467:lib/chibios/os/hal/src/hal_queues.c ****  *
 468:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 469:lib/chibios/os/hal/src/hal_queues.c ****  */
 470:lib/chibios/os/hal/src/hal_queues.c **** void oqResetI(output_queue_t *oqp) {
 1248              		.loc 1 470 36 is_stmt 1 view -0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 471:lib/chibios/os/hal/src/hal_queues.c **** 
 472:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1253              		.loc 1 472 23 view .LVU396
 473:lib/chibios/os/hal/src/hal_queues.c **** 
 474:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_rdptr = oqp->q_buffer;
 1254              		.loc 1 474 3 view .LVU397
 1255              		.loc 1 474 21 is_stmt 0 view .LVU398
 1256 0000 C168     		ldr	r1, [r0, #12]
 475:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_wrptr = oqp->q_buffer;
 476:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_counter = qSizeX(oqp);
 1257              		.loc 1 476 20 view .LVU399
 1258 0002 0269     		ldr	r2, [r0, #16]
 1259 0004 521A     		subs	r2, r2, r1
 475:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_wrptr = oqp->q_buffer;
 1260              		.loc 1 475 16 view .LVU400
 1261 0006 C0E90511 		strd	r1, r1, [r0, #20]
 1262              		.loc 1 476 3 is_stmt 1 view .LVU401
 1263              		.loc 1 476 18 is_stmt 0 view .LVU402
 1264 000a 8260     		str	r2, [r0, #8]
 477:lib/chibios/os/hal/src/hal_queues.c ****   osalThreadDequeueAllI(&oqp->q_waiting, MSG_RESET);
 1265              		.loc 1 477 3 is_stmt 1 view .LVU403
 1266              	.LVL86:
 1267              	.LBB253:
 1268              	.LBI253:
 919:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1269              		.loc 2 919 20 view .LVU404
 1270              	.LBB254:
 1271              		.loc 2 921 3 view .LVU405
 1272 000c 6FF00101 		mvn	r1, #1
 1273 0010 FFF7FEBF 		b	chThdDequeueAllI
 1274              	.LVL87:
 1275              		.loc 2 921 3 is_stmt 0 view .LVU406
 1276              	.LBE254:
 1277              	.LBE253:
 1278              		.cfi_endproc
 1279              	.LFE338:
 1281              		.section	.text.oqPutI,"ax",%progbits
 1282              		.align	1
 1283              		.global	oqPutI
 1284              		.syntax unified
 1285              		.thumb
 1286              		.thumb_func
 1287              		.fpu fpv4-sp-d16
 1289              	oqPutI:
 1290              	.LVL88:
 1291              	.LFB339:
 478:lib/chibios/os/hal/src/hal_queues.c **** }
 479:lib/chibios/os/hal/src/hal_queues.c **** 
 480:lib/chibios/os/hal/src/hal_queues.c **** /**
 481:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Output queue non-blocking write.
 482:lib/chibios/os/hal/src/hal_queues.c ****  * @details This function writes a byte value to an output queue. The
 483:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes immediately.
 484:lib/chibios/os/hal/src/hal_queues.c ****  *
 485:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 486:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] b         the byte value to be written in the queue
 487:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The operation status.
 488:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_OK       if the operation succeeded.
 489:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is full.
 490:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 491:lib/chibios/os/hal/src/hal_queues.c ****  *
 492:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 493:lib/chibios/os/hal/src/hal_queues.c ****  */
 494:lib/chibios/os/hal/src/hal_queues.c **** msg_t oqPutI(output_queue_t *oqp, uint8_t b) {
 1292              		.loc 1 494 46 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 495:lib/chibios/os/hal/src/hal_queues.c **** 
 496:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1296              		.loc 1 496 23 view .LVU408
 497:lib/chibios/os/hal/src/hal_queues.c **** 
 498:lib/chibios/os/hal/src/hal_queues.c ****   /* Queue space check.*/
 499:lib/chibios/os/hal/src/hal_queues.c ****   while (!oqIsFullI(oqp)) {
 1297              		.loc 1 499 3 view .LVU409
 1298              		.loc 1 499 10 view .LVU410
 494:lib/chibios/os/hal/src/hal_queues.c **** 
 1299              		.loc 1 494 46 is_stmt 0 view .LVU411
 1300 0000 08B5     		push	{r3, lr}
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 3, -8
 1303              		.cfi_offset 14, -4
 1304              		.loc 1 499 11 view .LVU412
 1305 0002 8368     		ldr	r3, [r0, #8]
 1306              		.loc 1 499 10 view .LVU413
 1307 0004 8BB1     		cbz	r3, .L59
 500:lib/chibios/os/hal/src/hal_queues.c ****     /* Putting the character into the queue.*/
 501:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_counter--;
 1308              		.loc 1 501 5 is_stmt 1 view .LVU414
 1309              		.loc 1 501 8 is_stmt 0 view .LVU415
 1310 0006 8368     		ldr	r3, [r0, #8]
 1311              		.loc 1 501 19 view .LVU416
 1312 0008 013B     		subs	r3, r3, #1
 1313 000a 8360     		str	r3, [r0, #8]
 502:lib/chibios/os/hal/src/hal_queues.c ****     *oqp->q_wrptr++ = b;
 1314              		.loc 1 502 5 is_stmt 1 view .LVU417
 1315              		.loc 1 502 9 is_stmt 0 view .LVU418
 1316 000c 4369     		ldr	r3, [r0, #20]
 1317              		.loc 1 502 18 view .LVU419
 1318 000e 5A1C     		adds	r2, r3, #1
 1319 0010 4261     		str	r2, [r0, #20]
 1320              		.loc 1 502 21 view .LVU420
 1321 0012 1970     		strb	r1, [r3]
 503:lib/chibios/os/hal/src/hal_queues.c ****     if (oqp->q_wrptr >= oqp->q_top) {
 1322              		.loc 1 503 5 is_stmt 1 view .LVU421
 1323              		.loc 1 503 8 is_stmt 0 view .LVU422
 1324 0014 D0E90432 		ldrd	r3, r2, [r0, #16]
 1325 0018 9A42     		cmp	r2, r3
 504:lib/chibios/os/hal/src/hal_queues.c ****       oqp->q_wrptr = oqp->q_buffer;
 1326              		.loc 1 504 7 is_stmt 1 view .LVU423
 1327              		.loc 1 504 20 is_stmt 0 view .LVU424
 1328 001a 24BF     		itt	cs
 1329 001c C368     		ldrcs	r3, [r0, #12]
 1330 001e 4361     		strcs	r3, [r0, #20]
 505:lib/chibios/os/hal/src/hal_queues.c ****     }
 506:lib/chibios/os/hal/src/hal_queues.c **** 
 507:lib/chibios/os/hal/src/hal_queues.c ****     /* Inform the low side that the queue has at least one character available.*/
 508:lib/chibios/os/hal/src/hal_queues.c ****     if (oqp->q_notify != NULL) {
 1331              		.loc 1 508 5 is_stmt 1 view .LVU425
 1332              		.loc 1 508 12 is_stmt 0 view .LVU426
 1333 0020 C369     		ldr	r3, [r0, #28]
 1334              		.loc 1 508 8 view .LVU427
 1335 0022 2BB1     		cbz	r3, .L60
 509:lib/chibios/os/hal/src/hal_queues.c ****       oqp->q_notify(oqp);
 1336              		.loc 1 509 7 is_stmt 1 view .LVU428
 1337 0024 9847     		blx	r3
 1338              	.LVL89:
 510:lib/chibios/os/hal/src/hal_queues.c ****     }
 511:lib/chibios/os/hal/src/hal_queues.c **** 
 512:lib/chibios/os/hal/src/hal_queues.c ****     return MSG_OK;
 1339              		.loc 1 512 12 is_stmt 0 view .LVU429
 1340 0026 0020     		movs	r0, #0
 1341              	.L56:
 513:lib/chibios/os/hal/src/hal_queues.c ****   }
 514:lib/chibios/os/hal/src/hal_queues.c **** 
 515:lib/chibios/os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 516:lib/chibios/os/hal/src/hal_queues.c **** }
 1342              		.loc 1 516 1 view .LVU430
 1343 0028 08BD     		pop	{r3, pc}
 1344              	.LVL90:
 1345              	.L59:
 515:lib/chibios/os/hal/src/hal_queues.c **** }
 1346              		.loc 1 515 10 view .LVU431
 1347 002a 4FF0FF30 		mov	r0, #-1
 1348              	.LVL91:
 515:lib/chibios/os/hal/src/hal_queues.c **** }
 1349              		.loc 1 515 10 view .LVU432
 1350 002e FBE7     		b	.L56
 1351              	.LVL92:
 1352              	.L60:
 512:lib/chibios/os/hal/src/hal_queues.c ****   }
 1353              		.loc 1 512 12 view .LVU433
 1354 0030 1846     		mov	r0, r3
 1355              	.LVL93:
 512:lib/chibios/os/hal/src/hal_queues.c ****   }
 1356              		.loc 1 512 12 view .LVU434
 1357 0032 F9E7     		b	.L56
 1358              		.cfi_endproc
 1359              	.LFE339:
 1361              		.section	.text.oqPutTimeout,"ax",%progbits
 1362              		.align	1
 1363              		.global	oqPutTimeout
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1367              		.fpu fpv4-sp-d16
 1369              	oqPutTimeout:
 1370              	.LVL94:
 1371              	.LFB340:
 517:lib/chibios/os/hal/src/hal_queues.c **** 
 518:lib/chibios/os/hal/src/hal_queues.c **** /**
 519:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Output queue write with timeout.
 520:lib/chibios/os/hal/src/hal_queues.c ****  * @details This function writes a byte value to an output queue. If the queue
 521:lib/chibios/os/hal/src/hal_queues.c ****  *          is full then the calling thread is suspended until there is space
 522:lib/chibios/os/hal/src/hal_queues.c ****  *          in the queue or a timeout occurs.
 523:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked after putting the character into the
 524:lib/chibios/os/hal/src/hal_queues.c ****  *          queue.
 525:lib/chibios/os/hal/src/hal_queues.c ****  *
 526:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 527:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] b         the byte value to be written in the queue
 528:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 529:lib/chibios/os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 530:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 531:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 532:lib/chibios/os/hal/src/hal_queues.c ****  *                      .
 533:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The operation status.
 534:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_OK       if the operation succeeded.
 535:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the specified time expired.
 536:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_RESET    if the queue has been reset.
 537:lib/chibios/os/hal/src/hal_queues.c ****  *
 538:lib/chibios/os/hal/src/hal_queues.c ****  * @api
 539:lib/chibios/os/hal/src/hal_queues.c ****  */
 540:lib/chibios/os/hal/src/hal_queues.c **** msg_t oqPutTimeout(output_queue_t *oqp, uint8_t b, sysinterval_t timeout) {
 1372              		.loc 1 540 75 is_stmt 1 view -0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 541:lib/chibios/os/hal/src/hal_queues.c **** 
 542:lib/chibios/os/hal/src/hal_queues.c ****   osalSysLock();
 1376              		.loc 1 542 3 view .LVU436
 1377              	.LBB255:
 1378              	.LBI255:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1379              		.loc 2 573 20 view .LVU437
 1380              	.LBB256:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1381              		.loc 2 575 3 view .LVU438
 1382              	.LBB257:
 1383              	.LBI257:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1384              		.loc 5 355 20 view .LVU439
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1385              		.loc 5 357 3 view .LVU440
 1386              	.LBB258:
 1387              	.LBI258:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1388              		.loc 6 669 27 view .LVU441
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1389              		.loc 6 677 3 view .LVU442
 1390              	.LBB259:
 1391              	.LBI259:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1392              		.loc 7 491 27 view .LVU443
 1393              	.LBB260:
 1394              		.loc 7 493 3 view .LVU444
 1395              	.LBE260:
 1396              	.LBE259:
 1397              	.LBE258:
 1398              	.LBE257:
 1399              	.LBE256:
 1400              	.LBE255:
 540:lib/chibios/os/hal/src/hal_queues.c **** 
 1401              		.loc 1 540 75 is_stmt 0 view .LVU445
 1402 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1403              		.cfi_def_cfa_offset 24
 1404              		.cfi_offset 3, -24
 1405              		.cfi_offset 4, -20
 1406              		.cfi_offset 5, -16
 1407              		.cfi_offset 6, -12
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 540:lib/chibios/os/hal/src/hal_queues.c **** 
 1410              		.loc 1 540 75 view .LVU446
 1411 0002 0446     		mov	r4, r0
 1412 0004 0D46     		mov	r5, r1
 1413 0006 1646     		mov	r6, r2
 1414              	.LBB266:
 1415              	.LBB265:
 1416              	.LBB264:
 1417              	.LBB263:
 1418              	.LBB262:
 1419              	.LBB261:
 1420              		.loc 7 493 3 view .LVU447
 1421 0008 2023     		movs	r3, #32
 1422              		.syntax unified
 1423              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1424 000a 83F31188 		MSR basepri, r3
 1425              	@ 0 "" 2
 1426              	.LVL95:
 1427              		.loc 7 493 3 view .LVU448
 1428              		.thumb
 1429              		.syntax unified
 1430              	.LBE261:
 1431              	.LBE262:
 1432              	.LBE263:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1433              		.loc 5 358 34 is_stmt 1 view .LVU449
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1434              		.loc 5 359 20 view .LVU450
 1435              	.L62:
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1436              		.loc 5 359 20 is_stmt 0 view .LVU451
 1437              	.LBE264:
 1438              	.LBE265:
 1439              	.LBE266:
 543:lib/chibios/os/hal/src/hal_queues.c **** 
 544:lib/chibios/os/hal/src/hal_queues.c ****   /* Waiting until there is a slot available or a timeout occurs.*/
 545:lib/chibios/os/hal/src/hal_queues.c ****   while (oqIsFullI(oqp)) {
 1440              		.loc 1 545 10 is_stmt 1 view .LVU452
 1441 000e A768     		ldr	r7, [r4, #8]
 1442 0010 A7B1     		cbz	r7, .L64
 546:lib/chibios/os/hal/src/hal_queues.c ****     msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 547:lib/chibios/os/hal/src/hal_queues.c ****     if (msg < MSG_OK) {
 548:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 549:lib/chibios/os/hal/src/hal_queues.c ****       return msg;
 550:lib/chibios/os/hal/src/hal_queues.c ****     }
 551:lib/chibios/os/hal/src/hal_queues.c ****   }
 552:lib/chibios/os/hal/src/hal_queues.c **** 
 553:lib/chibios/os/hal/src/hal_queues.c ****   /* Putting the character into the queue.*/
 554:lib/chibios/os/hal/src/hal_queues.c ****   oqp->q_counter--;
 1443              		.loc 1 554 3 view .LVU453
 1444              		.loc 1 554 6 is_stmt 0 view .LVU454
 1445 0012 A368     		ldr	r3, [r4, #8]
 1446              		.loc 1 554 17 view .LVU455
 1447 0014 013B     		subs	r3, r3, #1
 1448 0016 A360     		str	r3, [r4, #8]
 555:lib/chibios/os/hal/src/hal_queues.c ****   *oqp->q_wrptr++ = b;
 1449              		.loc 1 555 3 is_stmt 1 view .LVU456
 1450              		.loc 1 555 7 is_stmt 0 view .LVU457
 1451 0018 6369     		ldr	r3, [r4, #20]
 1452              		.loc 1 555 16 view .LVU458
 1453 001a 5A1C     		adds	r2, r3, #1
 1454 001c 6261     		str	r2, [r4, #20]
 1455              		.loc 1 555 19 view .LVU459
 1456 001e 1D70     		strb	r5, [r3]
 556:lib/chibios/os/hal/src/hal_queues.c ****   if (oqp->q_wrptr >= oqp->q_top) {
 1457              		.loc 1 556 3 is_stmt 1 view .LVU460
 1458              		.loc 1 556 6 is_stmt 0 view .LVU461
 1459 0020 D4E90432 		ldrd	r3, r2, [r4, #16]
 1460 0024 9A42     		cmp	r2, r3
 557:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_wrptr = oqp->q_buffer;
 1461              		.loc 1 557 5 is_stmt 1 view .LVU462
 1462              		.loc 1 557 18 is_stmt 0 view .LVU463
 1463 0026 24BF     		itt	cs
 1464 0028 E368     		ldrcs	r3, [r4, #12]
 1465 002a 6361     		strcs	r3, [r4, #20]
 558:lib/chibios/os/hal/src/hal_queues.c ****   }
 559:lib/chibios/os/hal/src/hal_queues.c **** 
 560:lib/chibios/os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one character available.*/
 561:lib/chibios/os/hal/src/hal_queues.c ****   if (oqp->q_notify != NULL) {
 1466              		.loc 1 561 3 is_stmt 1 view .LVU464
 1467              		.loc 1 561 10 is_stmt 0 view .LVU465
 1468 002c E369     		ldr	r3, [r4, #28]
 1469              		.loc 1 561 6 view .LVU466
 1470 002e 0BB1     		cbz	r3, .L66
 562:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_notify(oqp);
 1471              		.loc 1 562 5 is_stmt 1 view .LVU467
 1472 0030 2046     		mov	r0, r4
 1473 0032 9847     		blx	r3
 1474              	.LVL96:
 1475              	.L66:
 563:lib/chibios/os/hal/src/hal_queues.c ****   }
 564:lib/chibios/os/hal/src/hal_queues.c **** 
 565:lib/chibios/os/hal/src/hal_queues.c ****   osalSysUnlock();
 1476              		.loc 1 565 3 view .LVU468
 1477              	.LBB267:
 1478              	.LBI267:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1479              		.loc 2 584 20 view .LVU469
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1480              		.loc 2 586 3 view .LVU470
 1481              	.LBB268:
 1482              	.LBI268:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1483              		.loc 5 367 20 view .LVU471
 1484              	.LBB269:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1485              		.loc 5 369 22 view .LVU472
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1486              		.loc 5 370 33 view .LVU473
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1487              		.loc 5 376 3 view .LVU474
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1488              		.loc 5 376 3 view .LVU475
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1489              		.loc 5 376 3 view .LVU476
 1490              		.loc 5 380 3 view .LVU477
 1491              	.LBB270:
 1492              	.LBI270:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1493              		.loc 6 693 27 view .LVU478
 1494              		.loc 6 696 3 view .LVU479
 1495              	.LBB271:
 1496              	.LBI271:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1497              		.loc 7 491 27 view .LVU480
 1498              	.LBB272:
 1499              		.loc 7 493 3 view .LVU481
 1500 0034 0020     		movs	r0, #0
 1501              		.syntax unified
 1502              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1503 0036 80F31188 		MSR basepri, r0
 1504              	@ 0 "" 2
 1505              	.LVL97:
 1506              		.loc 7 493 3 is_stmt 0 view .LVU482
 1507              		.thumb
 1508              		.syntax unified
 1509              	.LBE272:
 1510              	.LBE271:
 1511              	.LBE270:
 1512              	.LBE269:
 1513              	.LBE268:
 1514              	.LBE267:
 566:lib/chibios/os/hal/src/hal_queues.c **** 
 567:lib/chibios/os/hal/src/hal_queues.c ****   return MSG_OK;
 1515              		.loc 1 567 3 is_stmt 1 view .LVU483
 1516              		.loc 1 567 10 is_stmt 0 view .LVU484
 1517 003a 07E0     		b	.L61
 1518              	.L64:
 1519              	.LBB273:
 546:lib/chibios/os/hal/src/hal_queues.c ****     if (msg < MSG_OK) {
 1520              		.loc 1 546 5 is_stmt 1 view .LVU485
 1521              	.LVL98:
 1522              	.LBB274:
 1523              	.LBI274:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 1524              		.loc 2 892 21 view .LVU486
 1525              	.LBB275:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1526              		.loc 2 895 3 view .LVU487
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1527              		.loc 2 895 10 is_stmt 0 view .LVU488
 1528 003c 3146     		mov	r1, r6
 1529 003e 2046     		mov	r0, r4
 1530 0040 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 1531              	.LVL99:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1532              		.loc 2 895 10 view .LVU489
 1533              	.LBE275:
 1534              	.LBE274:
 547:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 1535              		.loc 1 547 5 is_stmt 1 view .LVU490
 547:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 1536              		.loc 1 547 8 is_stmt 0 view .LVU491
 1537 0044 0028     		cmp	r0, #0
 547:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 1538              		.loc 1 547 8 view .LVU492
 1539 0046 E2DA     		bge	.L62
 548:lib/chibios/os/hal/src/hal_queues.c ****       return msg;
 1540              		.loc 1 548 7 is_stmt 1 view .LVU493
 1541              	.LBB276:
 1542              	.LBI276:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1543              		.loc 2 584 20 view .LVU494
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1544              		.loc 2 586 3 view .LVU495
 1545              	.LBB277:
 1546              	.LBI277:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1547              		.loc 5 367 20 view .LVU496
 1548              	.LBB278:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1549              		.loc 5 369 22 view .LVU497
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1550              		.loc 5 370 33 view .LVU498
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1551              		.loc 5 376 3 view .LVU499
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1552              		.loc 5 376 3 view .LVU500
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1553              		.loc 5 376 3 view .LVU501
 1554              		.loc 5 380 3 view .LVU502
 1555              	.LBB279:
 1556              	.LBI279:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1557              		.loc 6 693 27 view .LVU503
 1558              		.loc 6 696 3 view .LVU504
 1559              	.LVL100:
 1560              	.LBB280:
 1561              	.LBI280:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1562              		.loc 7 491 27 view .LVU505
 1563              	.LBB281:
 1564              		.loc 7 493 3 view .LVU506
 1565              		.syntax unified
 1566              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1567 0048 87F31188 		MSR basepri, r7
 1568              	@ 0 "" 2
 1569              	.LVL101:
 1570              		.loc 7 493 3 is_stmt 0 view .LVU507
 1571              		.thumb
 1572              		.syntax unified
 1573              	.LBE281:
 1574              	.LBE280:
 1575              	.LBE279:
 1576              	.LBE278:
 1577              	.LBE277:
 1578              	.LBE276:
 549:lib/chibios/os/hal/src/hal_queues.c ****     }
 1579              		.loc 1 549 7 is_stmt 1 view .LVU508
 1580              	.L61:
 549:lib/chibios/os/hal/src/hal_queues.c ****     }
 1581              		.loc 1 549 7 is_stmt 0 view .LVU509
 1582              	.LBE273:
 568:lib/chibios/os/hal/src/hal_queues.c **** }
 1583              		.loc 1 568 1 view .LVU510
 1584 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1585              		.loc 1 568 1 view .LVU511
 1586              		.cfi_endproc
 1587              	.LFE340:
 1589              		.section	.text.oqGetI,"ax",%progbits
 1590              		.align	1
 1591              		.global	oqGetI
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1595              		.fpu fpv4-sp-d16
 1597              	oqGetI:
 1598              	.LVL102:
 1599              	.LFB341:
 569:lib/chibios/os/hal/src/hal_queues.c **** 
 570:lib/chibios/os/hal/src/hal_queues.c **** /**
 571:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Output queue read.
 572:lib/chibios/os/hal/src/hal_queues.c ****  * @details A byte value is read from the low end of an output queue. The
 573:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes immediately.
 574:lib/chibios/os/hal/src/hal_queues.c ****  *
 575:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 576:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The byte value from the queue.
 577:lib/chibios/os/hal/src/hal_queues.c ****  * @retval MSG_TIMEOUT  if the queue is empty.
 578:lib/chibios/os/hal/src/hal_queues.c ****  *
 579:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 580:lib/chibios/os/hal/src/hal_queues.c ****  */
 581:lib/chibios/os/hal/src/hal_queues.c **** msg_t oqGetI(output_queue_t *oqp) {
 1600              		.loc 1 581 35 is_stmt 1 view -0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 0, uses_anonymous_args = 0
 582:lib/chibios/os/hal/src/hal_queues.c **** 
 583:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1604              		.loc 1 583 23 view .LVU513
 584:lib/chibios/os/hal/src/hal_queues.c **** 
 585:lib/chibios/os/hal/src/hal_queues.c ****   /* Queue data check.*/
 586:lib/chibios/os/hal/src/hal_queues.c ****   if (!oqIsEmptyI(oqp)) {
 1605              		.loc 1 586 3 view .LVU514
 1606              		.loc 1 586 8 is_stmt 0 view .LVU515
 1607 0000 D0E90523 		ldrd	r2, r3, [r0, #20]
 1608 0004 9A42     		cmp	r2, r3
 581:lib/chibios/os/hal/src/hal_queues.c **** 
 1609              		.loc 1 581 35 view .LVU516
 1610 0006 10B5     		push	{r4, lr}
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 4, -8
 1613              		.cfi_offset 14, -4
 1614              		.loc 1 586 8 view .LVU517
 1615 0008 01D1     		bne	.L72
 1616              		.loc 1 586 8 discriminator 1 view .LVU518
 1617 000a 8268     		ldr	r2, [r0, #8]
 1618 000c 7AB9     		cbnz	r2, .L75
 1619              	.L72:
 1620              	.LBB282:
 587:lib/chibios/os/hal/src/hal_queues.c ****     uint8_t b;
 1621              		.loc 1 587 5 is_stmt 1 view .LVU519
 588:lib/chibios/os/hal/src/hal_queues.c **** 
 589:lib/chibios/os/hal/src/hal_queues.c ****     oqp->q_counter++;
 1622              		.loc 1 589 5 view .LVU520
 1623              		.loc 1 589 8 is_stmt 0 view .LVU521
 1624 000e 8268     		ldr	r2, [r0, #8]
 1625              		.loc 1 589 19 view .LVU522
 1626 0010 0132     		adds	r2, r2, #1
 1627 0012 8260     		str	r2, [r0, #8]
 590:lib/chibios/os/hal/src/hal_queues.c ****     b = *oqp->q_rdptr++;
 1628              		.loc 1 590 5 is_stmt 1 view .LVU523
 1629              		.loc 1 590 22 is_stmt 0 view .LVU524
 1630 0014 5A1C     		adds	r2, r3, #1
 1631 0016 8261     		str	r2, [r0, #24]
 1632              		.loc 1 590 7 view .LVU525
 1633 0018 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1634              	.LVL103:
 591:lib/chibios/os/hal/src/hal_queues.c ****     if (oqp->q_rdptr >= oqp->q_top) {
 1635              		.loc 1 591 5 is_stmt 1 view .LVU526
 1636              		.loc 1 591 8 is_stmt 0 view .LVU527
 1637 001a 0369     		ldr	r3, [r0, #16]
 1638 001c 9A42     		cmp	r2, r3
 592:lib/chibios/os/hal/src/hal_queues.c ****       oqp->q_rdptr = oqp->q_buffer;
 1639              		.loc 1 592 7 is_stmt 1 view .LVU528
 1640              		.loc 1 592 20 is_stmt 0 view .LVU529
 1641 001e 24BF     		itt	cs
 1642 0020 C368     		ldrcs	r3, [r0, #12]
 1643 0022 8361     		strcs	r3, [r0, #24]
 593:lib/chibios/os/hal/src/hal_queues.c ****     }
 594:lib/chibios/os/hal/src/hal_queues.c **** 
 595:lib/chibios/os/hal/src/hal_queues.c ****     osalThreadDequeueNextI(&oqp->q_waiting, MSG_OK);
 1644              		.loc 1 595 5 is_stmt 1 view .LVU530
 1645              	.LVL104:
 1646              	.LBB283:
 1647              	.LBI283:
 906:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1648              		.loc 2 906 20 view .LVU531
 1649              	.LBB284:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1650              		.loc 2 908 3 view .LVU532
 1651 0024 0021     		movs	r1, #0
 1652 0026 FFF7FEFF 		bl	chThdDequeueNextI
 1653              	.LVL105:
 908:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1654              		.loc 2 908 3 is_stmt 0 view .LVU533
 1655              	.LBE284:
 1656              	.LBE283:
 596:lib/chibios/os/hal/src/hal_queues.c **** 
 597:lib/chibios/os/hal/src/hal_queues.c ****     return (msg_t)b;
 1657              		.loc 1 597 5 is_stmt 1 view .LVU534
 1658              		.loc 1 597 12 is_stmt 0 view .LVU535
 1659 002a 2046     		mov	r0, r4
 1660              	.LVL106:
 1661              	.L71:
 1662              		.loc 1 597 12 view .LVU536
 1663              	.LBE282:
 598:lib/chibios/os/hal/src/hal_queues.c ****   }
 599:lib/chibios/os/hal/src/hal_queues.c **** 
 600:lib/chibios/os/hal/src/hal_queues.c ****   return MSG_TIMEOUT;
 601:lib/chibios/os/hal/src/hal_queues.c **** }
 1664              		.loc 1 601 1 view .LVU537
 1665 002c 10BD     		pop	{r4, pc}
 1666              	.LVL107:
 1667              	.L75:
 600:lib/chibios/os/hal/src/hal_queues.c **** }
 1668              		.loc 1 600 10 view .LVU538
 1669 002e 4FF0FF30 		mov	r0, #-1
 1670              	.LVL108:
 600:lib/chibios/os/hal/src/hal_queues.c **** }
 1671              		.loc 1 600 10 view .LVU539
 1672 0032 FBE7     		b	.L71
 1673              		.cfi_endproc
 1674              	.LFE341:
 1676              		.section	.text.oqWriteI,"ax",%progbits
 1677              		.align	1
 1678              		.global	oqWriteI
 1679              		.syntax unified
 1680              		.thumb
 1681              		.thumb_func
 1682              		.fpu fpv4-sp-d16
 1684              	oqWriteI:
 1685              	.LVL109:
 1686              	.LFB342:
 602:lib/chibios/os/hal/src/hal_queues.c **** 
 603:lib/chibios/os/hal/src/hal_queues.c **** /**
 604:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Output queue non-blocking write.
 605:lib/chibios/os/hal/src/hal_queues.c ****  * @details The function writes data from a buffer to an output queue. The
 606:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes immediately.
 607:lib/chibios/os/hal/src/hal_queues.c ****  *
 608:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 609:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to the data buffer
 610:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 611:lib/chibios/os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 612:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 613:lib/chibios/os/hal/src/hal_queues.c ****  *
 614:lib/chibios/os/hal/src/hal_queues.c ****  * @iclass
 615:lib/chibios/os/hal/src/hal_queues.c ****  */
 616:lib/chibios/os/hal/src/hal_queues.c **** size_t oqWriteI(output_queue_t *oqp, const uint8_t *bp, size_t n) {
 1687              		.loc 1 616 67 is_stmt 1 view -0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 617:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 1691              		.loc 1 617 3 view .LVU541
 616:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 1692              		.loc 1 616 67 is_stmt 0 view .LVU542
 1693 0000 70B5     		push	{r4, r5, r6, lr}
 1694              		.cfi_def_cfa_offset 16
 1695              		.cfi_offset 4, -16
 1696              		.cfi_offset 5, -12
 1697              		.cfi_offset 6, -8
 1698              		.cfi_offset 14, -4
 1699              		.loc 1 617 13 view .LVU543
 1700 0002 C669     		ldr	r6, [r0, #28]
 1701              	.LVL110:
 618:lib/chibios/os/hal/src/hal_queues.c ****   size_t wr;
 1702              		.loc 1 618 3 is_stmt 1 view .LVU544
 619:lib/chibios/os/hal/src/hal_queues.c **** 
 620:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheckClassI();
 1703              		.loc 1 620 23 view .LVU545
 621:lib/chibios/os/hal/src/hal_queues.c **** 
 622:lib/chibios/os/hal/src/hal_queues.c ****   wr = oq_write(oqp, bp, n);
 1704              		.loc 1 622 3 view .LVU546
 616:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 1705              		.loc 1 616 67 is_stmt 0 view .LVU547
 1706 0004 0546     		mov	r5, r0
 1707              		.loc 1 622 8 view .LVU548
 1708 0006 FFF7FEFF 		bl	oq_write
 1709              	.LVL111:
 623:lib/chibios/os/hal/src/hal_queues.c **** 
 624:lib/chibios/os/hal/src/hal_queues.c ****   /* Inform the low side that the queue has at least one character
 625:lib/chibios/os/hal/src/hal_queues.c ****      available.*/
 626:lib/chibios/os/hal/src/hal_queues.c ****   if ((wr > (size_t)0) && (nfy != NULL)) {
 1710              		.loc 1 626 3 is_stmt 1 view .LVU549
 1711              		.loc 1 626 6 is_stmt 0 view .LVU550
 1712 000a 0446     		mov	r4, r0
 1713 000c 10B1     		cbz	r0, .L76
 1714              		.loc 1 626 24 discriminator 1 view .LVU551
 1715 000e 0EB1     		cbz	r6, .L76
 627:lib/chibios/os/hal/src/hal_queues.c ****     nfy(oqp);
 1716              		.loc 1 627 5 is_stmt 1 view .LVU552
 1717 0010 2846     		mov	r0, r5
 1718              	.LVL112:
 1719              		.loc 1 627 5 is_stmt 0 view .LVU553
 1720 0012 B047     		blx	r6
 1721              	.LVL113:
 628:lib/chibios/os/hal/src/hal_queues.c ****   }
 629:lib/chibios/os/hal/src/hal_queues.c **** 
 630:lib/chibios/os/hal/src/hal_queues.c ****   return wr;
 1722              		.loc 1 630 3 is_stmt 1 view .LVU554
 1723              	.L76:
 631:lib/chibios/os/hal/src/hal_queues.c **** }
 1724              		.loc 1 631 1 is_stmt 0 view .LVU555
 1725 0014 2046     		mov	r0, r4
 1726 0016 70BD     		pop	{r4, r5, r6, pc}
 1727              		.loc 1 631 1 view .LVU556
 1728              		.cfi_endproc
 1729              	.LFE342:
 1731              		.section	.text.oqWriteTimeout,"ax",%progbits
 1732              		.align	1
 1733              		.global	oqWriteTimeout
 1734              		.syntax unified
 1735              		.thumb
 1736              		.thumb_func
 1737              		.fpu fpv4-sp-d16
 1739              	oqWriteTimeout:
 1740              	.LVL114:
 1741              	.LFB343:
 632:lib/chibios/os/hal/src/hal_queues.c **** 
 633:lib/chibios/os/hal/src/hal_queues.c **** /**
 634:lib/chibios/os/hal/src/hal_queues.c ****  * @brief   Output queue write with timeout.
 635:lib/chibios/os/hal/src/hal_queues.c ****  * @details The function writes data from a buffer to an output queue. The
 636:lib/chibios/os/hal/src/hal_queues.c ****  *          operation completes when the specified amount of data has been
 637:lib/chibios/os/hal/src/hal_queues.c ****  *          transferred or after the specified timeout or if the queue has
 638:lib/chibios/os/hal/src/hal_queues.c ****  *          been reset.
 639:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The function is not atomic, if you need atomicity it is suggested
 640:lib/chibios/os/hal/src/hal_queues.c ****  *          to use a semaphore or a mutex for mutual exclusion.
 641:lib/chibios/os/hal/src/hal_queues.c ****  * @note    The callback is invoked after putting each character into the
 642:lib/chibios/os/hal/src/hal_queues.c ****  *          queue.
 643:lib/chibios/os/hal/src/hal_queues.c ****  *
 644:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] oqp       pointer to an @p output_queue_t structure
 645:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] bp        pointer to the data buffer
 646:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 647:lib/chibios/os/hal/src/hal_queues.c ****  *                      value 0 is reserved
 648:lib/chibios/os/hal/src/hal_queues.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 649:lib/chibios/os/hal/src/hal_queues.c ****  *                      the following special values are allowed:
 650:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 651:lib/chibios/os/hal/src/hal_queues.c ****  *                      - @a TIME_INFINITE no timeout.
 652:lib/chibios/os/hal/src/hal_queues.c ****  *                      .
 653:lib/chibios/os/hal/src/hal_queues.c ****  * @return              The number of bytes effectively transferred.
 654:lib/chibios/os/hal/src/hal_queues.c ****  *
 655:lib/chibios/os/hal/src/hal_queues.c ****  * @api
 656:lib/chibios/os/hal/src/hal_queues.c ****  */
 657:lib/chibios/os/hal/src/hal_queues.c **** size_t oqWriteTimeout(output_queue_t *oqp, const uint8_t *bp,
 658:lib/chibios/os/hal/src/hal_queues.c ****                       size_t n, sysinterval_t timeout) {
 1742              		.loc 1 658 56 is_stmt 1 view -0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 8
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 659:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 1746              		.loc 1 659 3 view .LVU558
 658:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 1747              		.loc 1 658 56 is_stmt 0 view .LVU559
 1748 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1749              		.cfi_def_cfa_offset 48
 1750              		.cfi_offset 4, -36
 1751              		.cfi_offset 5, -32
 1752              		.cfi_offset 6, -28
 1753              		.cfi_offset 7, -24
 1754              		.cfi_offset 8, -20
 1755              		.cfi_offset 9, -16
 1756              		.cfi_offset 10, -12
 1757              		.cfi_offset 11, -8
 1758              		.cfi_offset 14, -4
 658:lib/chibios/os/hal/src/hal_queues.c ****   qnotify_t nfy = oqp->q_notify;
 1759              		.loc 1 658 56 view .LVU560
 1760 0004 0446     		mov	r4, r0
 1761 0006 0E46     		mov	r6, r1
 1762 0008 1746     		mov	r7, r2
 1763 000a 9946     		mov	r9, r3
 1764              		.loc 1 659 13 view .LVU561
 1765 000c D0F81CA0 		ldr	r10, [r0, #28]
 1766              	.LVL115:
 660:lib/chibios/os/hal/src/hal_queues.c ****   size_t max = n;
 1767              		.loc 1 660 3 is_stmt 1 view .LVU562
 661:lib/chibios/os/hal/src/hal_queues.c **** 
 662:lib/chibios/os/hal/src/hal_queues.c ****   osalDbgCheck(n > 0U);
 1768              		.loc 1 662 3 view .LVU563
 1769              		.loc 1 662 3 view .LVU564
 1770              		.loc 1 662 3 view .LVU565
 663:lib/chibios/os/hal/src/hal_queues.c **** 
 664:lib/chibios/os/hal/src/hal_queues.c ****   osalSysLock();
 1771              		.loc 1 664 3 view .LVU566
 1772              	.LBB285:
 1773              	.LBI285:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1774              		.loc 2 573 20 view .LVU567
 1775              	.LBB286:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1776              		.loc 2 575 3 view .LVU568
 1777              	.LBB287:
 1778              	.LBI287:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1779              		.loc 5 355 20 view .LVU569
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1780              		.loc 5 357 3 view .LVU570
 1781              	.LBB288:
 1782              	.LBI288:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1783              		.loc 6 669 27 view .LVU571
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1784              		.loc 6 677 3 view .LVU572
 1785              	.LBB289:
 1786              	.LBI289:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1787              		.loc 7 491 27 view .LVU573
 1788              	.LBB290:
 1789              		.loc 7 493 3 view .LVU574
 1790 0010 4FF02008 		mov	r8, #32
 1791              		.syntax unified
 1792              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1793 0014 88F31188 		MSR basepri, r8
 1794              	@ 0 "" 2
 1795              	.LVL116:
 1796              		.loc 7 493 3 is_stmt 0 view .LVU575
 1797              		.thumb
 1798              		.syntax unified
 1799              	.LBE290:
 1800              	.LBE289:
 1801              	.LBE288:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1802              		.loc 5 358 34 is_stmt 1 view .LVU576
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1803              		.loc 5 359 20 view .LVU577
 1804              	.LBE287:
 1805              	.LBE286:
 1806              	.LBE285:
 1807              	.LBB292:
 1808              	.LBB293:
 1809              	.LBB294:
 1810              	.LBB295:
 1811              	.LBB296:
 1812              	.LBB297:
 1813              	.LBB298:
 1814              		.loc 7 493 3 is_stmt 0 view .LVU578
 1815 0018 4FF0000B 		mov	fp, #0
 1816              	.LBE298:
 1817              	.LBE297:
 1818              	.LBE296:
 1819              	.LBE295:
 1820              	.LBE294:
 1821              	.LBE293:
 1822              	.LBE292:
 1823              	.LBB314:
 1824              	.LBB291:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1825              		.loc 2 576 1 view .LVU579
 1826 001c 1546     		mov	r5, r2
 1827              	.LVL117:
 1828              	.L85:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1829              		.loc 2 576 1 view .LVU580
 1830              	.LBE291:
 1831              	.LBE314:
 665:lib/chibios/os/hal/src/hal_queues.c **** 
 666:lib/chibios/os/hal/src/hal_queues.c ****   while (n > 0U) {
 1832              		.loc 1 666 12 is_stmt 1 view .LVU581
 1833 001e 65B1     		cbz	r5, .L87
 1834              	.LBB315:
 667:lib/chibios/os/hal/src/hal_queues.c ****     size_t done;
 1835              		.loc 1 667 5 view .LVU582
 668:lib/chibios/os/hal/src/hal_queues.c **** 
 669:lib/chibios/os/hal/src/hal_queues.c ****     done = oq_write(oqp, bp, n);
 1836              		.loc 1 669 5 view .LVU583
 1837              		.loc 1 669 12 is_stmt 0 view .LVU584
 1838 0020 2A46     		mov	r2, r5
 1839 0022 3146     		mov	r1, r6
 1840 0024 2046     		mov	r0, r4
 1841 0026 FFF7FEFF 		bl	oq_write
 1842              	.LVL118:
 670:lib/chibios/os/hal/src/hal_queues.c ****     if (done == (size_t)0) {
 1843              		.loc 1 670 5 is_stmt 1 view .LVU585
 1844              		.loc 1 670 8 is_stmt 0 view .LVU586
 1845 002a 0346     		mov	r3, r0
 1846 002c 60B9     		cbnz	r0, .L86
 1847              	.LBB304:
 671:lib/chibios/os/hal/src/hal_queues.c ****       msg_t msg = osalThreadEnqueueTimeoutS(&oqp->q_waiting, timeout);
 1848              		.loc 1 671 7 is_stmt 1 view .LVU587
 1849              	.LVL119:
 1850              	.LBB305:
 1851              	.LBI305:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 1852              		.loc 2 892 21 view .LVU588
 1853              	.LBB306:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1854              		.loc 2 895 3 view .LVU589
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1855              		.loc 2 895 10 is_stmt 0 view .LVU590
 1856 002e 4946     		mov	r1, r9
 1857 0030 2046     		mov	r0, r4
 1858              	.LVL120:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1859              		.loc 2 895 10 view .LVU591
 1860 0032 FFF7FEFF 		bl	chThdEnqueueTimeoutS
 1861              	.LVL121:
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1862              		.loc 2 895 10 view .LVU592
 1863              	.LBE306:
 1864              	.LBE305:
 672:lib/chibios/os/hal/src/hal_queues.c **** 
 673:lib/chibios/os/hal/src/hal_queues.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 674:lib/chibios/os/hal/src/hal_queues.c ****       if (msg != MSG_OK) {
 1865              		.loc 1 674 7 is_stmt 1 view .LVU593
 1866              		.loc 1 674 10 is_stmt 0 view .LVU594
 1867 0036 0028     		cmp	r0, #0
 1868 0038 F1D0     		beq	.L85
 1869              	.LVL122:
 1870              	.L87:
 1871              		.loc 1 674 10 view .LVU595
 1872              	.LBE304:
 1873              	.LBE315:
 675:lib/chibios/os/hal/src/hal_queues.c ****         break;
 676:lib/chibios/os/hal/src/hal_queues.c ****       }
 677:lib/chibios/os/hal/src/hal_queues.c ****     }
 678:lib/chibios/os/hal/src/hal_queues.c ****     else {
 679:lib/chibios/os/hal/src/hal_queues.c ****       /* Inform the low side that the queue has at least one character
 680:lib/chibios/os/hal/src/hal_queues.c ****          available.*/
 681:lib/chibios/os/hal/src/hal_queues.c ****       if (nfy != NULL) {
 682:lib/chibios/os/hal/src/hal_queues.c ****         nfy(oqp);
 683:lib/chibios/os/hal/src/hal_queues.c ****       }
 684:lib/chibios/os/hal/src/hal_queues.c **** 
 685:lib/chibios/os/hal/src/hal_queues.c ****       /* Giving a preemption chance in a controlled point.*/
 686:lib/chibios/os/hal/src/hal_queues.c ****       osalSysUnlock();
 687:lib/chibios/os/hal/src/hal_queues.c **** 
 688:lib/chibios/os/hal/src/hal_queues.c ****       n  -= done;
 689:lib/chibios/os/hal/src/hal_queues.c ****       bp += done;
 690:lib/chibios/os/hal/src/hal_queues.c **** 
 691:lib/chibios/os/hal/src/hal_queues.c ****       osalSysLock();
 692:lib/chibios/os/hal/src/hal_queues.c ****     }
 693:lib/chibios/os/hal/src/hal_queues.c ****   }
 694:lib/chibios/os/hal/src/hal_queues.c **** 
 695:lib/chibios/os/hal/src/hal_queues.c ****   osalSysUnlock();
 1874              		.loc 1 695 3 is_stmt 1 view .LVU596
 1875              	.LBB316:
 1876              	.LBI316:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1877              		.loc 2 584 20 view .LVU597
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1878              		.loc 2 586 3 view .LVU598
 1879              	.LBB317:
 1880              	.LBI317:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1881              		.loc 5 367 20 view .LVU599
 1882              	.LBB318:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1883              		.loc 5 369 22 view .LVU600
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1884              		.loc 5 370 33 view .LVU601
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1885              		.loc 5 376 3 view .LVU602
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1886              		.loc 5 376 3 view .LVU603
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1887              		.loc 5 376 3 view .LVU604
 1888              		.loc 5 380 3 view .LVU605
 1889              	.LBB319:
 1890              	.LBI319:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1891              		.loc 6 693 27 view .LVU606
 1892              		.loc 6 696 3 view .LVU607
 1893              	.LBB320:
 1894              	.LBI320:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1895              		.loc 7 491 27 view .LVU608
 1896              	.LBB321:
 1897              		.loc 7 493 3 view .LVU609
 1898 003a 0023     		movs	r3, #0
 1899              		.syntax unified
 1900              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1901 003c 83F31188 		MSR basepri, r3
 1902              	@ 0 "" 2
 1903              	.LVL123:
 1904              		.loc 7 493 3 is_stmt 0 view .LVU610
 1905              		.thumb
 1906              		.syntax unified
 1907              	.LBE321:
 1908              	.LBE320:
 1909              	.LBE319:
 1910              	.LBE318:
 1911              	.LBE317:
 1912              	.LBE316:
 696:lib/chibios/os/hal/src/hal_queues.c ****   return max - n;
 1913              		.loc 1 696 3 is_stmt 1 view .LVU611
 697:lib/chibios/os/hal/src/hal_queues.c **** }
 1914              		.loc 1 697 1 is_stmt 0 view .LVU612
 1915 0040 781B     		subs	r0, r7, r5
 1916 0042 03B0     		add	sp, sp, #12
 1917              		.cfi_remember_state
 1918              		.cfi_def_cfa_offset 36
 1919              		@ sp needed
 1920 0044 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1921              	.LVL124:
 1922              	.L86:
 1923              		.cfi_restore_state
 1924              	.LBB322:
 681:lib/chibios/os/hal/src/hal_queues.c ****         nfy(oqp);
 1925              		.loc 1 681 7 is_stmt 1 view .LVU613
 681:lib/chibios/os/hal/src/hal_queues.c ****         nfy(oqp);
 1926              		.loc 1 681 10 is_stmt 0 view .LVU614
 1927 0048 BAF1000F 		cmp	r10, #0
 1928 004c 03D0     		beq	.L89
 1929 004e 0190     		str	r0, [sp, #4]
 682:lib/chibios/os/hal/src/hal_queues.c ****       }
 1930              		.loc 1 682 9 is_stmt 1 view .LVU615
 1931 0050 2046     		mov	r0, r4
 1932              	.LVL125:
 682:lib/chibios/os/hal/src/hal_queues.c ****       }
 1933              		.loc 1 682 9 is_stmt 0 view .LVU616
 1934 0052 D047     		blx	r10
 1935              	.LVL126:
 682:lib/chibios/os/hal/src/hal_queues.c ****       }
 1936              		.loc 1 682 9 view .LVU617
 1937 0054 019B     		ldr	r3, [sp, #4]
 1938              	.LVL127:
 1939              	.L89:
 686:lib/chibios/os/hal/src/hal_queues.c **** 
 1940              		.loc 1 686 7 is_stmt 1 view .LVU618
 1941              	.LBB307:
 1942              	.LBI293:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1943              		.loc 2 584 20 view .LVU619
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1944              		.loc 2 586 3 view .LVU620
 1945              	.LBB303:
 1946              	.LBI294:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1947              		.loc 5 367 20 view .LVU621
 1948              	.LBB302:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1949              		.loc 5 369 22 view .LVU622
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1950              		.loc 5 370 33 view .LVU623
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1951              		.loc 5 376 3 view .LVU624
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1952              		.loc 5 376 3 view .LVU625
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1953              		.loc 5 376 3 view .LVU626
 1954              		.loc 5 380 3 view .LVU627
 1955              	.LBB301:
 1956              	.LBI296:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1957              		.loc 6 693 27 view .LVU628
 1958              		.loc 6 696 3 view .LVU629
 1959              	.LBB300:
 1960              	.LBI297:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1961              		.loc 7 491 27 view .LVU630
 1962              	.LBB299:
 1963              		.loc 7 493 3 view .LVU631
 1964              		.syntax unified
 1965              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1966 0056 8BF31188 		MSR basepri, fp
 1967              	@ 0 "" 2
 1968              	.LVL128:
 1969              		.loc 7 493 3 is_stmt 0 view .LVU632
 1970              		.thumb
 1971              		.syntax unified
 1972              	.LBE299:
 1973              	.LBE300:
 1974              	.LBE301:
 1975              	.LBE302:
 1976              	.LBE303:
 1977              	.LBE307:
 688:lib/chibios/os/hal/src/hal_queues.c ****       bp += done;
 1978              		.loc 1 688 7 is_stmt 1 view .LVU633
 688:lib/chibios/os/hal/src/hal_queues.c ****       bp += done;
 1979              		.loc 1 688 10 is_stmt 0 view .LVU634
 1980 005a ED1A     		subs	r5, r5, r3
 1981              	.LVL129:
 689:lib/chibios/os/hal/src/hal_queues.c **** 
 1982              		.loc 1 689 7 is_stmt 1 view .LVU635
 689:lib/chibios/os/hal/src/hal_queues.c **** 
 1983              		.loc 1 689 10 is_stmt 0 view .LVU636
 1984 005c 1E44     		add	r6, r6, r3
 1985              	.LVL130:
 691:lib/chibios/os/hal/src/hal_queues.c ****     }
 1986              		.loc 1 691 7 is_stmt 1 view .LVU637
 1987              	.LBB308:
 1988              	.LBI308:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1989              		.loc 2 573 20 view .LVU638
 1990              	.LBB309:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1991              		.loc 2 575 3 view .LVU639
 1992              	.LBB310:
 1993              	.LBI310:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1994              		.loc 5 355 20 view .LVU640
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1995              		.loc 5 357 3 view .LVU641
 1996              	.LBB311:
 1997              	.LBI311:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1998              		.loc 6 669 27 view .LVU642
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1999              		.loc 6 677 3 view .LVU643
 2000              	.LBB312:
 2001              	.LBI312:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2002              		.loc 7 491 27 view .LVU644
 2003              	.LBB313:
 2004              		.loc 7 493 3 view .LVU645
 2005              		.syntax unified
 2006              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2007 005e 88F31188 		MSR basepri, r8
 2008              	@ 0 "" 2
 2009              	.LVL131:
 2010              		.loc 7 493 3 is_stmt 0 view .LVU646
 2011              		.thumb
 2012              		.syntax unified
 2013              	.LBE313:
 2014              	.LBE312:
 2015              	.LBE311:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2016              		.loc 5 358 34 is_stmt 1 view .LVU647
 359:./lib/chibios/os/rt/include/chsys.h **** }
 2017              		.loc 5 359 20 view .LVU648
 2018              	.LBE310:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2019              		.loc 2 576 1 is_stmt 0 view .LVU649
 2020 0062 DCE7     		b	.L85
 2021              	.LBE309:
 2022              	.LBE308:
 2023              	.LBE322:
 2024              		.cfi_endproc
 2025              	.LFE343:
 2027              		.text
 2028              	.Letext0:
 2029              		.file 8 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 2030              		.file 9 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2031              		.file 10 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2032              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2033              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 2034              		.file 13 "./lib/chibios/os/rt/include/chschd.h"
 2035              		.file 14 "./lib/chibios/os/rt/include/chtime.h"
 2036              		.file 15 "./lib/chibios/os/hal/include/hal_queues.h"
 2037              		.file 16 "/usr/arm-none-eabi/include/string.h"
 2038              		.file 17 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_queues.c
     /tmp/ccfjBssG.s:18     .text.iq_read:0000000000000000 $t
     /tmp/ccfjBssG.s:25     .text.iq_read:0000000000000000 iq_read
     /tmp/ccfjBssG.s:149    .text.oq_write:0000000000000000 $t
     /tmp/ccfjBssG.s:155    .text.oq_write:0000000000000000 oq_write
     /tmp/ccfjBssG.s:271    .text.iqObjectInit:0000000000000000 $t
     /tmp/ccfjBssG.s:278    .text.iqObjectInit:0000000000000000 iqObjectInit
     /tmp/ccfjBssG.s:360    .text.iqResetI:0000000000000000 $t
     /tmp/ccfjBssG.s:367    .text.iqResetI:0000000000000000 iqResetI
     /tmp/ccfjBssG.s:402    .text.iqPutI:0000000000000000 $t
     /tmp/ccfjBssG.s:409    .text.iqPutI:0000000000000000 iqPutI
     /tmp/ccfjBssG.s:484    .text.iqGetI:0000000000000000 $t
     /tmp/ccfjBssG.s:491    .text.iqGetI:0000000000000000 iqGetI
     /tmp/ccfjBssG.s:564    .text.iqGetTimeout:0000000000000000 $t
     /tmp/ccfjBssG.s:571    .text.iqGetTimeout:0000000000000000 iqGetTimeout
     /tmp/ccfjBssG.s:808    .text.iqReadI:0000000000000000 $t
     /tmp/ccfjBssG.s:815    .text.iqReadI:0000000000000000 iqReadI
     /tmp/ccfjBssG.s:863    .text.iqReadTimeout:0000000000000000 $t
     /tmp/ccfjBssG.s:870    .text.iqReadTimeout:0000000000000000 iqReadTimeout
     /tmp/ccfjBssG.s:1159   .text.oqObjectInit:0000000000000000 $t
     /tmp/ccfjBssG.s:1166   .text.oqObjectInit:0000000000000000 oqObjectInit
     /tmp/ccfjBssG.s:1238   .text.oqResetI:0000000000000000 $t
     /tmp/ccfjBssG.s:1245   .text.oqResetI:0000000000000000 oqResetI
     /tmp/ccfjBssG.s:1282   .text.oqPutI:0000000000000000 $t
     /tmp/ccfjBssG.s:1289   .text.oqPutI:0000000000000000 oqPutI
     /tmp/ccfjBssG.s:1362   .text.oqPutTimeout:0000000000000000 $t
     /tmp/ccfjBssG.s:1369   .text.oqPutTimeout:0000000000000000 oqPutTimeout
     /tmp/ccfjBssG.s:1590   .text.oqGetI:0000000000000000 $t
     /tmp/ccfjBssG.s:1597   .text.oqGetI:0000000000000000 oqGetI
     /tmp/ccfjBssG.s:1677   .text.oqWriteI:0000000000000000 $t
     /tmp/ccfjBssG.s:1684   .text.oqWriteI:0000000000000000 oqWriteI
     /tmp/ccfjBssG.s:1732   .text.oqWriteTimeout:0000000000000000 $t
     /tmp/ccfjBssG.s:1739   .text.oqWriteTimeout:0000000000000000 oqWriteTimeout

UNDEFINED SYMBOLS
memcpy
chThdDequeueAllI
chThdDequeueNextI
chThdEnqueueTimeoutS
