   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"matrix.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.matrix_init_user,"ax",%progbits
  18              		.align	1
  19              		.weak	matrix_init_user
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	matrix_init_user:
  27              	.LFB285:
  28              		.file 1 "keyboards/planck/rev6_drop/matrix.c"
   1:keyboards/planck/rev6_drop/matrix.c **** /*
   2:keyboards/planck/rev6_drop/matrix.c ****  * Copyright 2018 Jack Humbert <jack.humb@gmail.com>
   3:keyboards/planck/rev6_drop/matrix.c ****  *
   4:keyboards/planck/rev6_drop/matrix.c ****  * This program is free software: you can redistribute it and/or modify
   5:keyboards/planck/rev6_drop/matrix.c ****  * it under the terms of the GNU General Public License as published by
   6:keyboards/planck/rev6_drop/matrix.c ****  * the Free Software Foundation, either version 2 of the License, or
   7:keyboards/planck/rev6_drop/matrix.c ****  * (at your option) any later version.
   8:keyboards/planck/rev6_drop/matrix.c ****  *
   9:keyboards/planck/rev6_drop/matrix.c ****  * This program is distributed in the hope that it will be useful,
  10:keyboards/planck/rev6_drop/matrix.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:keyboards/planck/rev6_drop/matrix.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:keyboards/planck/rev6_drop/matrix.c ****  * GNU General Public License for more details.
  13:keyboards/planck/rev6_drop/matrix.c ****  *
  14:keyboards/planck/rev6_drop/matrix.c ****  * You should have received a copy of the GNU General Public License
  15:keyboards/planck/rev6_drop/matrix.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:keyboards/planck/rev6_drop/matrix.c ****  */
  17:keyboards/planck/rev6_drop/matrix.c **** 
  18:keyboards/planck/rev6_drop/matrix.c **** #include <stdint.h>
  19:keyboards/planck/rev6_drop/matrix.c **** #include <stdbool.h>
  20:keyboards/planck/rev6_drop/matrix.c **** #include <string.h>
  21:keyboards/planck/rev6_drop/matrix.c **** #include "hal.h"
  22:keyboards/planck/rev6_drop/matrix.c **** #include "timer.h"
  23:keyboards/planck/rev6_drop/matrix.c **** #include "wait.h"
  24:keyboards/planck/rev6_drop/matrix.c **** #include "debug.h"
  25:keyboards/planck/rev6_drop/matrix.c **** #include "matrix.h"
  26:keyboards/planck/rev6_drop/matrix.c **** 
  27:keyboards/planck/rev6_drop/matrix.c **** /*
  28:keyboards/planck/rev6_drop/matrix.c ****  *     col: { B11, B10, B2, B1, A7, B0 }
  29:keyboards/planck/rev6_drop/matrix.c ****  *     row: { A10, A9, A8, B15, C13, C14, C15, A2 }
  30:keyboards/planck/rev6_drop/matrix.c ****  */
  31:keyboards/planck/rev6_drop/matrix.c **** /* matrix state(1:on, 0:off) */
  32:keyboards/planck/rev6_drop/matrix.c **** static matrix_row_t matrix[MATRIX_ROWS];
  33:keyboards/planck/rev6_drop/matrix.c **** static matrix_row_t matrix_debouncing[MATRIX_COLS];
  34:keyboards/planck/rev6_drop/matrix.c **** static bool         debouncing      = false;
  35:keyboards/planck/rev6_drop/matrix.c **** static uint16_t     debouncing_time = 0;
  36:keyboards/planck/rev6_drop/matrix.c **** 
  37:keyboards/planck/rev6_drop/matrix.c **** __attribute__((weak)) void matrix_init_user(void) {}
  29              		.loc 1 37 51 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 37 52 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE285:
  39              		.section	.text.matrix_scan_user,"ax",%progbits
  40              		.align	1
  41              		.weak	matrix_scan_user
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	matrix_scan_user:
  48              	.LFB295:
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE295:
  57              		.section	.text.matrix_init_kb,"ax",%progbits
  58              		.align	1
  59              		.weak	matrix_init_kb
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	matrix_init_kb:
  66              	.LFB287:
  38:keyboards/planck/rev6_drop/matrix.c **** 
  39:keyboards/planck/rev6_drop/matrix.c **** __attribute__((weak)) void matrix_scan_user(void) {}
  40:keyboards/planck/rev6_drop/matrix.c **** 
  41:keyboards/planck/rev6_drop/matrix.c **** __attribute__((weak)) void matrix_init_kb(void) { matrix_init_user(); }
  67              		.loc 1 41 49 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		.loc 1 41 51 view .LVU3
  72              		.loc 1 41 49 is_stmt 0 view .LVU4
  73 0000 08B5     		push	{r3, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 3, -8
  76              		.cfi_offset 14, -4
  77              		.loc 1 41 51 view .LVU5
  78 0002 FFF7FEFF 		bl	matrix_init_user
  79              	.LVL0:
  80              		.loc 1 41 71 view .LVU6
  81 0006 08BD     		pop	{r3, pc}
  82              		.cfi_endproc
  83              	.LFE287:
  85              		.section	.text.matrix_scan_kb,"ax",%progbits
  86              		.align	1
  87              		.weak	matrix_scan_kb
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	matrix_scan_kb:
  94              	.LFB288:
  42:keyboards/planck/rev6_drop/matrix.c **** 
  43:keyboards/planck/rev6_drop/matrix.c **** __attribute__((weak)) void matrix_scan_kb(void) { matrix_scan_user(); }
  95              		.loc 1 43 49 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		.loc 1 43 51 view .LVU8
 100              		.loc 1 43 49 is_stmt 0 view .LVU9
 101 0000 08B5     		push	{r3, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
 105              		.loc 1 43 51 view .LVU10
 106 0002 FFF7FEFF 		bl	matrix_scan_user
 107              	.LVL1:
 108              		.loc 1 43 71 view .LVU11
 109 0006 08BD     		pop	{r3, pc}
 110              		.cfi_endproc
 111              	.LFE288:
 113              		.section	.rodata.matrix_init.str1.1,"aMS",%progbits,1
 114              	.LC0:
 115 0000 6D617472 		.ascii	"matrix init\012\000"
 115      69782069 
 115      6E69740A 
 115      00
 116              		.section	.text.matrix_init,"ax",%progbits
 117              		.align	1
 118              		.global	matrix_init
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	matrix_init:
 125              	.LFB289:
  44:keyboards/planck/rev6_drop/matrix.c **** 
  45:keyboards/planck/rev6_drop/matrix.c **** void matrix_init(void) {
 126              		.loc 1 45 24 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
  46:keyboards/planck/rev6_drop/matrix.c ****     dprintf("matrix init\n");
 130              		.loc 1 46 5 view .LVU13
 131              		.loc 1 46 5 view .LVU14
  45:keyboards/planck/rev6_drop/matrix.c ****     dprintf("matrix init\n");
 132              		.loc 1 45 24 is_stmt 0 view .LVU15
 133 0000 08B5     		push	{r3, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 137              		.loc 1 46 5 view .LVU16
 138 0002 334B     		ldr	r3, .L10
 139 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140 0006 DB07     		lsls	r3, r3, #31
 141 0008 02D5     		bpl	.L6
 142              		.loc 1 46 5 is_stmt 1 discriminator 1 view .LVU17
 143 000a 3248     		ldr	r0, .L10+4
 144 000c FFF7FEFF 		bl	printf_
 145              	.LVL2:
 146              	.L6:
 147              		.loc 1 46 5 discriminator 3 view .LVU18
  47:keyboards/planck/rev6_drop/matrix.c ****     // debug_matrix = true;
  48:keyboards/planck/rev6_drop/matrix.c **** 
  49:keyboards/planck/rev6_drop/matrix.c ****     // actual matrix setup
  50:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOB, 11, PAL_MODE_OUTPUT_PUSHPULL);
 148              		.loc 1 50 5 discriminator 3 view .LVU19
 149 0010 3148     		ldr	r0, .L10+8
 150 0012 0122     		movs	r2, #1
 151 0014 4FF40061 		mov	r1, #2048
 152 0018 FFF7FEFF 		bl	_pal_lld_setgroupmode
 153              	.LVL3:
  51:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOB, 10, PAL_MODE_OUTPUT_PUSHPULL);
 154              		.loc 1 51 5 discriminator 3 view .LVU20
 155 001c 2E48     		ldr	r0, .L10+8
 156 001e 0122     		movs	r2, #1
 157 0020 4FF48061 		mov	r1, #1024
 158 0024 FFF7FEFF 		bl	_pal_lld_setgroupmode
 159              	.LVL4:
  52:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOB, 2, PAL_MODE_OUTPUT_PUSHPULL);
 160              		.loc 1 52 5 discriminator 3 view .LVU21
 161 0028 2B48     		ldr	r0, .L10+8
 162 002a 0122     		movs	r2, #1
 163 002c 0421     		movs	r1, #4
 164 002e FFF7FEFF 		bl	_pal_lld_setgroupmode
 165              	.LVL5:
  53:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOB, 1, PAL_MODE_OUTPUT_PUSHPULL);
 166              		.loc 1 53 5 discriminator 3 view .LVU22
 167 0032 2948     		ldr	r0, .L10+8
 168 0034 0122     		movs	r2, #1
 169 0036 0221     		movs	r1, #2
 170 0038 FFF7FEFF 		bl	_pal_lld_setgroupmode
 171              	.LVL6:
  54:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOA, 7, PAL_MODE_OUTPUT_PUSHPULL);
 172              		.loc 1 54 5 discriminator 3 view .LVU23
 173 003c 0122     		movs	r2, #1
 174 003e 8021     		movs	r1, #128
 175 0040 4FF09040 		mov	r0, #1207959552
 176 0044 FFF7FEFF 		bl	_pal_lld_setgroupmode
 177              	.LVL7:
  55:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOB, 0, PAL_MODE_OUTPUT_PUSHPULL);
 178              		.loc 1 55 5 discriminator 3 view .LVU24
 179 0048 0122     		movs	r2, #1
 180 004a 1146     		mov	r1, r2
 181 004c 2248     		ldr	r0, .L10+8
 182 004e FFF7FEFF 		bl	_pal_lld_setgroupmode
 183              	.LVL8:
  56:keyboards/planck/rev6_drop/matrix.c **** 
  57:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOA, 10, PAL_MODE_INPUT_PULLDOWN);
 184              		.loc 1 57 5 discriminator 3 view .LVU25
 185 0052 4022     		movs	r2, #64
 186 0054 4FF48061 		mov	r1, #1024
 187 0058 4FF09040 		mov	r0, #1207959552
 188 005c FFF7FEFF 		bl	_pal_lld_setgroupmode
 189              	.LVL9:
  58:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOA, 9, PAL_MODE_INPUT_PULLDOWN);
 190              		.loc 1 58 5 discriminator 3 view .LVU26
 191 0060 4022     		movs	r2, #64
 192 0062 4FF40071 		mov	r1, #512
 193 0066 4FF09040 		mov	r0, #1207959552
 194 006a FFF7FEFF 		bl	_pal_lld_setgroupmode
 195              	.LVL10:
  59:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOA, 8, PAL_MODE_INPUT_PULLDOWN);
 196              		.loc 1 59 5 discriminator 3 view .LVU27
 197 006e 4022     		movs	r2, #64
 198 0070 4FF48071 		mov	r1, #256
 199 0074 4FF09040 		mov	r0, #1207959552
 200 0078 FFF7FEFF 		bl	_pal_lld_setgroupmode
 201              	.LVL11:
  60:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOB, 15, PAL_MODE_INPUT_PULLDOWN);
 202              		.loc 1 60 5 discriminator 3 view .LVU28
 203 007c 1648     		ldr	r0, .L10+8
 204 007e 4022     		movs	r2, #64
 205 0080 4FF40041 		mov	r1, #32768
 206 0084 FFF7FEFF 		bl	_pal_lld_setgroupmode
 207              	.LVL12:
  61:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOC, 13, PAL_MODE_INPUT_PULLDOWN);
 208              		.loc 1 61 5 discriminator 3 view .LVU29
 209 0088 1448     		ldr	r0, .L10+12
 210 008a 4022     		movs	r2, #64
 211 008c 4FF40051 		mov	r1, #8192
 212 0090 FFF7FEFF 		bl	_pal_lld_setgroupmode
 213              	.LVL13:
  62:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOC, 14, PAL_MODE_INPUT_PULLDOWN);
 214              		.loc 1 62 5 discriminator 3 view .LVU30
 215 0094 1148     		ldr	r0, .L10+12
 216 0096 4022     		movs	r2, #64
 217 0098 4FF48041 		mov	r1, #16384
 218 009c FFF7FEFF 		bl	_pal_lld_setgroupmode
 219              	.LVL14:
  63:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOC, 15, PAL_MODE_INPUT_PULLDOWN);
 220              		.loc 1 63 5 discriminator 3 view .LVU31
 221 00a0 0E48     		ldr	r0, .L10+12
 222 00a2 4022     		movs	r2, #64
 223 00a4 4FF40041 		mov	r1, #32768
 224 00a8 FFF7FEFF 		bl	_pal_lld_setgroupmode
 225              	.LVL15:
  64:keyboards/planck/rev6_drop/matrix.c ****     palSetPadMode(GPIOA, 2, PAL_MODE_INPUT_PULLDOWN);
 226              		.loc 1 64 5 discriminator 3 view .LVU32
 227 00ac 4022     		movs	r2, #64
 228 00ae 0421     		movs	r1, #4
 229 00b0 4FF09040 		mov	r0, #1207959552
 230 00b4 FFF7FEFF 		bl	_pal_lld_setgroupmode
 231              	.LVL16:
  65:keyboards/planck/rev6_drop/matrix.c **** 
  66:keyboards/planck/rev6_drop/matrix.c ****     memset(matrix, 0, MATRIX_ROWS * sizeof(matrix_row_t));
 232              		.loc 1 66 5 discriminator 3 view .LVU33
 233 00b8 094A     		ldr	r2, .L10+16
 234 00ba 0023     		movs	r3, #0
 235 00bc 1360     		str	r3, [r2]	@ unaligned
 236 00be 5360     		str	r3, [r2, #4]	@ unaligned
  67:keyboards/planck/rev6_drop/matrix.c ****     memset(matrix_debouncing, 0, MATRIX_COLS * sizeof(matrix_row_t));
 237              		.loc 1 67 5 discriminator 3 view .LVU34
 238 00c0 084A     		ldr	r2, .L10+20
 239 00c2 1360     		str	r3, [r2]	@ unaligned
 240 00c4 9380     		strh	r3, [r2, #4]	@ unaligned
  68:keyboards/planck/rev6_drop/matrix.c **** 
  69:keyboards/planck/rev6_drop/matrix.c ****     matrix_init_quantum();
 241              		.loc 1 69 5 discriminator 3 view .LVU35
  70:keyboards/planck/rev6_drop/matrix.c **** }
 242              		.loc 1 70 1 is_stmt 0 discriminator 3 view .LVU36
 243 00c6 BDE80840 		pop	{r3, lr}
 244              		.cfi_restore 14
 245              		.cfi_restore 3
 246              		.cfi_def_cfa_offset 0
  69:keyboards/planck/rev6_drop/matrix.c **** }
 247              		.loc 1 69 5 discriminator 3 view .LVU37
 248 00ca FFF7FEBF 		b	matrix_init_quantum
 249              	.LVL17:
 250              	.L11:
 251 00ce 00BF     		.align	2
 252              	.L10:
 253 00d0 00000000 		.word	debug_config
 254 00d4 00000000 		.word	.LC0
 255 00d8 00040048 		.word	1207960576
 256 00dc 00080048 		.word	1207961600
 257 00e0 00000000 		.word	.LANCHOR0
 258 00e4 00000000 		.word	.LANCHOR1
 259              		.cfi_endproc
 260              	.LFE289:
 262              		.section	.text.matrix_scan,"ax",%progbits
 263              		.align	1
 264              		.global	matrix_scan
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	matrix_scan:
 271              	.LFB290:
  71:keyboards/planck/rev6_drop/matrix.c **** 
  72:keyboards/planck/rev6_drop/matrix.c **** uint8_t matrix_scan(void) {
 272              		.loc 1 72 27 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 0, uses_anonymous_args = 0
  73:keyboards/planck/rev6_drop/matrix.c ****     // actual matrix
  74:keyboards/planck/rev6_drop/matrix.c ****     for (int col = 0; col < MATRIX_COLS; col++) {
 276              		.loc 1 74 5 view .LVU39
 277              	.LBB7:
 278              		.loc 1 74 10 view .LVU40
 279              	.LVL18:
 280              		.loc 1 74 27 view .LVU41
 281              	.LBE7:
  72:keyboards/planck/rev6_drop/matrix.c ****     // actual matrix
 282              		.loc 1 72 27 is_stmt 0 view .LVU42
 283 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 284              		.cfi_def_cfa_offset 48
 285              		.cfi_offset 4, -36
 286              		.cfi_offset 5, -32
 287              		.cfi_offset 6, -28
 288              		.cfi_offset 7, -24
 289              		.cfi_offset 8, -20
 290              		.cfi_offset 9, -16
 291              		.cfi_offset 10, -12
 292              		.cfi_offset 11, -8
 293              		.cfi_offset 14, -4
 294 0004 534F     		ldr	r7, .L41
 295 0006 544C     		ldr	r4, .L41+4
  72:keyboards/planck/rev6_drop/matrix.c ****     // actual matrix
 296              		.loc 1 72 27 view .LVU43
 297 0008 B946     		mov	r9, r7
 298              	.LBB10:
 299              		.loc 1 74 14 view .LVU44
 300 000a 0026     		movs	r6, #0
 301              	.LBB8:
  75:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = 0;
  76:keyboards/planck/rev6_drop/matrix.c **** 
  77:keyboards/planck/rev6_drop/matrix.c ****         // strobe col { B11, B10, B2, B1, A7, B0 }
  78:keyboards/planck/rev6_drop/matrix.c ****         switch (col) {
  79:keyboards/planck/rev6_drop/matrix.c ****             case 0:
  80:keyboards/planck/rev6_drop/matrix.c ****                 palSetPad(GPIOB, 11);
  81:keyboards/planck/rev6_drop/matrix.c ****                 break;
  82:keyboards/planck/rev6_drop/matrix.c ****             case 1:
  83:keyboards/planck/rev6_drop/matrix.c ****                 palSetPad(GPIOB, 10);
  84:keyboards/planck/rev6_drop/matrix.c ****                 break;
  85:keyboards/planck/rev6_drop/matrix.c ****             case 2:
  86:keyboards/planck/rev6_drop/matrix.c ****                 palSetPad(GPIOB, 2);
  87:keyboards/planck/rev6_drop/matrix.c ****                 break;
  88:keyboards/planck/rev6_drop/matrix.c ****             case 3:
  89:keyboards/planck/rev6_drop/matrix.c ****                 palSetPad(GPIOB, 1);
  90:keyboards/planck/rev6_drop/matrix.c ****                 break;
  91:keyboards/planck/rev6_drop/matrix.c ****             case 4:
  92:keyboards/planck/rev6_drop/matrix.c ****                 palSetPad(GPIOA, 7);
  93:keyboards/planck/rev6_drop/matrix.c ****                 break;
  94:keyboards/planck/rev6_drop/matrix.c ****             case 5:
  95:keyboards/planck/rev6_drop/matrix.c ****                 palSetPad(GPIOB, 0);
 302              		.loc 1 95 17 view .LVU45
 303 000c 4FF0010A 		mov	r10, #1
 304              	.LVL19:
 305              	.L30:
  75:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = 0;
 306              		.loc 1 75 9 is_stmt 1 view .LVU46
  78:keyboards/planck/rev6_drop/matrix.c ****             case 0:
 307              		.loc 1 78 9 view .LVU47
 308 0010 06F1FF38 		add	r8, r6, #-1
 309 0014 B8F1040F 		cmp	r8, #4
 310 0018 04D8     		bhi	.L13
 311 001a DFE808F0 		tbb	[pc, r8]
 312              	.L15:
 313 001e 43       		.byte	(.L19-.L15)/2
 314 001f 46       		.byte	(.L18-.L15)/2
 315 0020 48       		.byte	(.L17-.L15)/2
 316 0021 4A       		.byte	(.L16-.L15)/2
 317 0022 4F       		.byte	(.L14-.L15)/2
 318 0023 00       		.p2align 1
 319              	.L13:
 320              	.LVL20:
  80:keyboards/planck/rev6_drop/matrix.c ****                 break;
 321              		.loc 1 80 17 view .LVU48
 322 0024 4FF40063 		mov	r3, #2048
 323              	.LVL21:
 324              	.L39:
  89:keyboards/planck/rev6_drop/matrix.c ****                 break;
 325              		.loc 1 89 17 is_stmt 0 view .LVU49
 326 0028 2383     		strh	r3, [r4, #24]	@ movhi
  90:keyboards/planck/rev6_drop/matrix.c ****             case 4:
 327              		.loc 1 90 17 is_stmt 1 view .LVU50
 328              	.L20:
  96:keyboards/planck/rev6_drop/matrix.c ****                 break;
  97:keyboards/planck/rev6_drop/matrix.c ****         }
  98:keyboards/planck/rev6_drop/matrix.c **** 
  99:keyboards/planck/rev6_drop/matrix.c ****         // need wait to settle pin state
 100:keyboards/planck/rev6_drop/matrix.c ****         wait_us(20);
 329              		.loc 1 100 9 discriminator 1 view .LVU51
 330              		.loc 1 100 9 discriminator 1 view .LVU52
 331              		.loc 1 100 9 discriminator 1 view .LVU53
 332 002a 0120     		movs	r0, #1
 333 002c FFF7FEFF 		bl	chThdSleep
 334              	.LVL22:
 335              		.loc 1 100 9 discriminator 1 view .LVU54
 101:keyboards/planck/rev6_drop/matrix.c **** 
 102:keyboards/planck/rev6_drop/matrix.c ****         // read row data { A10, A9, A8, B15, C13, C14, C15, A2 }
 103:keyboards/planck/rev6_drop/matrix.c ****         data = ((palReadPad(GPIOA, 10) << 0) | (palReadPad(GPIOA, 9) << 1) | (palReadPad(GPIOA, 8) 
 336              		.loc 1 103 9 discriminator 1 view .LVU55
 337              		.loc 1 103 18 is_stmt 0 discriminator 1 view .LVU56
 338 0030 4FF09042 		mov	r2, #1207959552
 339              		.loc 1 103 140 discriminator 1 view .LVU57
 340 0034 494B     		ldr	r3, .L41+8
 341              		.loc 1 103 18 discriminator 1 view .LVU58
 342 0036 D2F810B0 		ldr	fp, [r2, #16]
 343              		.loc 1 103 49 discriminator 1 view .LVU59
 344 003a D2F810E0 		ldr	lr, [r2, #16]
 345              		.loc 1 103 79 discriminator 1 view .LVU60
 346 003e D2F810C0 		ldr	ip, [r2, #16]
 347              		.loc 1 103 109 discriminator 1 view .LVU61
 348 0042 2569     		ldr	r5, [r4, #16]
 349              		.loc 1 103 140 discriminator 1 view .LVU62
 350 0044 1869     		ldr	r0, [r3, #16]
 351              		.loc 1 103 171 discriminator 1 view .LVU63
 352 0046 1969     		ldr	r1, [r3, #16]
 353              		.loc 1 103 202 discriminator 1 view .LVU64
 354 0048 1B69     		ldr	r3, [r3, #16]
 355 004a 0193     		str	r3, [sp, #4]
 356              		.loc 1 103 233 discriminator 1 view .LVU65
 357 004c 1369     		ldr	r3, [r2, #16]
 358              		.loc 1 103 40 discriminator 1 view .LVU66
 359 004e CBF3802B 		ubfx	fp, fp, #10, #1
 360              		.loc 1 103 233 discriminator 1 view .LVU67
 361 0052 9B08     		lsrs	r3, r3, #2
 362              		.loc 1 103 70 discriminator 1 view .LVU68
 363 0054 4FEA1E2E 		lsr	lr, lr, #8
 364              		.loc 1 103 14 discriminator 1 view .LVU69
 365 0058 4BEAC313 		orr	r3, fp, r3, lsl #7
 366              		.loc 1 103 70 discriminator 1 view .LVU70
 367 005c 0EF0020E 		and	lr, lr, #2
 368              		.loc 1 103 100 discriminator 1 view .LVU71
 369 0060 4FEA9C1C 		lsr	ip, ip, #6
 370              		.loc 1 103 14 discriminator 1 view .LVU72
 371 0064 43EA0E03 		orr	r3, r3, lr
 372              		.loc 1 103 100 discriminator 1 view .LVU73
 373 0068 0CF0040C 		and	ip, ip, #4
 374              		.loc 1 103 131 discriminator 1 view .LVU74
 375 006c 2D0B     		lsrs	r5, r5, #12
 376              		.loc 1 103 14 discriminator 1 view .LVU75
 377 006e 43EA0C03 		orr	r3, r3, ip
 378              		.loc 1 103 131 discriminator 1 view .LVU76
 379 0072 05F00805 		and	r5, r5, #8
 380              		.loc 1 103 162 discriminator 1 view .LVU77
 381 0076 400A     		lsrs	r0, r0, #9
 382              		.loc 1 103 14 discriminator 1 view .LVU78
 383 0078 2B43     		orrs	r3, r3, r5
 384              		.loc 1 103 162 discriminator 1 view .LVU79
 385 007a 00F01000 		and	r0, r0, #16
 386              		.loc 1 103 193 discriminator 1 view .LVU80
 387 007e 490A     		lsrs	r1, r1, #9
 388 0080 01F02001 		and	r1, r1, #32
 389              		.loc 1 103 14 discriminator 1 view .LVU81
 390 0084 0343     		orrs	r3, r3, r0
 391 0086 0B43     		orrs	r3, r3, r1
 392              		.loc 1 103 224 discriminator 1 view .LVU82
 393 0088 0199     		ldr	r1, [sp, #4]
 394 008a 490A     		lsrs	r1, r1, #9
 395 008c 01F04001 		and	r1, r1, #64
 396              		.loc 1 103 14 discriminator 1 view .LVU83
 397 0090 0B43     		orrs	r3, r3, r1
 398 0092 DBB2     		uxtb	r3, r3
 399              	.LVL23:
 104:keyboards/planck/rev6_drop/matrix.c **** 
 105:keyboards/planck/rev6_drop/matrix.c ****         // unstrobe  col { B11, B10, B2, B1, A7, B0 }
 106:keyboards/planck/rev6_drop/matrix.c ****         switch (col) {
 400              		.loc 1 106 9 is_stmt 1 discriminator 1 view .LVU84
 401 0094 B8F1040F 		cmp	r8, #4
 402 0098 13D8     		bhi	.L21
 403 009a DFE808F0 		tbb	[pc, r8]
 404              	.L23:
 405 009e 4D       		.byte	(.L27-.L23)/2
 406 009f 50       		.byte	(.L26-.L23)/2
 407 00a0 52       		.byte	(.L25-.L23)/2
 408 00a1 54       		.byte	(.L24-.L23)/2
 409 00a2 57       		.byte	(.L22-.L23)/2
 410              	.LVL24:
 411 00a3 00       		.p2align 1
 412              	.L19:
  83:keyboards/planck/rev6_drop/matrix.c ****                 break;
 413              		.loc 1 83 17 view .LVU85
 414 00a4 4FF48063 		mov	r3, #1024
 415 00a8 BEE7     		b	.L39
 416              	.L18:
  86:keyboards/planck/rev6_drop/matrix.c ****                 break;
 417              		.loc 1 86 17 view .LVU86
 418 00aa 0423     		movs	r3, #4
 419 00ac BCE7     		b	.L39
 420              	.L17:
  89:keyboards/planck/rev6_drop/matrix.c ****                 break;
 421              		.loc 1 89 17 view .LVU87
 422 00ae 0223     		movs	r3, #2
 423 00b0 BAE7     		b	.L39
 424              	.L16:
  92:keyboards/planck/rev6_drop/matrix.c ****                 break;
 425              		.loc 1 92 17 view .LVU88
 426 00b2 4FF09043 		mov	r3, #1207959552
 427 00b6 8022     		movs	r2, #128
 428 00b8 1A83     		strh	r2, [r3, #24]	@ movhi
  93:keyboards/planck/rev6_drop/matrix.c ****             case 5:
 429              		.loc 1 93 17 view .LVU89
 430 00ba B6E7     		b	.L20
 431              	.L14:
  95:keyboards/planck/rev6_drop/matrix.c ****                 break;
 432              		.loc 1 95 17 view .LVU90
 433 00bc A4F818A0 		strh	r10, [r4, #24]	@ movhi
  96:keyboards/planck/rev6_drop/matrix.c ****         }
 434              		.loc 1 96 17 view .LVU91
 435 00c0 B3E7     		b	.L20
 436              	.LVL25:
 437              	.L21:
 107:keyboards/planck/rev6_drop/matrix.c ****             case 0:
 108:keyboards/planck/rev6_drop/matrix.c ****                 palClearPad(GPIOB, 11);
 438              		.loc 1 108 17 view .LVU92
 439 00c2 4FF40062 		mov	r2, #2048
 440              	.L40:
 109:keyboards/planck/rev6_drop/matrix.c ****                 break;
 110:keyboards/planck/rev6_drop/matrix.c ****             case 1:
 111:keyboards/planck/rev6_drop/matrix.c ****                 palClearPad(GPIOB, 10);
 112:keyboards/planck/rev6_drop/matrix.c ****                 break;
 113:keyboards/planck/rev6_drop/matrix.c ****             case 2:
 114:keyboards/planck/rev6_drop/matrix.c ****                 palClearPad(GPIOB, 2);
 115:keyboards/planck/rev6_drop/matrix.c ****                 break;
 116:keyboards/planck/rev6_drop/matrix.c ****             case 3:
 117:keyboards/planck/rev6_drop/matrix.c ****                 palClearPad(GPIOB, 1);
 441              		.loc 1 117 17 is_stmt 0 view .LVU93
 442 00c6 6283     		strh	r2, [r4, #26]	@ movhi
 118:keyboards/planck/rev6_drop/matrix.c ****                 break;
 443              		.loc 1 118 17 is_stmt 1 view .LVU94
 444              	.L28:
 119:keyboards/planck/rev6_drop/matrix.c ****             case 4:
 120:keyboards/planck/rev6_drop/matrix.c ****                 palClearPad(GPIOA, 7);
 121:keyboards/planck/rev6_drop/matrix.c ****                 break;
 122:keyboards/planck/rev6_drop/matrix.c ****             case 5:
 123:keyboards/planck/rev6_drop/matrix.c ****                 palClearPad(GPIOB, 0);
 124:keyboards/planck/rev6_drop/matrix.c ****                 break;
 125:keyboards/planck/rev6_drop/matrix.c ****         }
 126:keyboards/planck/rev6_drop/matrix.c **** 
 127:keyboards/planck/rev6_drop/matrix.c ****         if (matrix_debouncing[col] != data) {
 445              		.loc 1 127 9 view .LVU95
 446              		.loc 1 127 30 is_stmt 0 view .LVU96
 447 00c8 19F8012B 		ldrb	r2, [r9], #1	@ zero_extendqisi2
 448              		.loc 1 127 12 view .LVU97
 449 00cc 9A42     		cmp	r2, r3
 450 00ce 08D0     		beq	.L29
 128:keyboards/planck/rev6_drop/matrix.c ****             matrix_debouncing[col] = data;
 451              		.loc 1 128 13 is_stmt 1 view .LVU98
 452              		.loc 1 128 36 is_stmt 0 view .LVU99
 453 00d0 09F8013C 		strb	r3, [r9, #-1]
 129:keyboards/planck/rev6_drop/matrix.c ****             debouncing             = true;
 454              		.loc 1 129 13 is_stmt 1 view .LVU100
 455              		.loc 1 129 36 is_stmt 0 view .LVU101
 456 00d4 224B     		ldr	r3, .L41+12
 457              	.LVL26:
 458              		.loc 1 129 36 view .LVU102
 459 00d6 83F800A0 		strb	r10, [r3]
 130:keyboards/planck/rev6_drop/matrix.c ****             debouncing_time        = timer_read();
 460              		.loc 1 130 13 is_stmt 1 view .LVU103
 461              		.loc 1 130 38 is_stmt 0 view .LVU104
 462 00da FFF7FEFF 		bl	timer_read
 463              	.LVL27:
 464              		.loc 1 130 36 view .LVU105
 465 00de 214B     		ldr	r3, .L41+16
 466 00e0 1880     		strh	r0, [r3]	@ movhi
 467              	.L29:
 468              		.loc 1 130 36 view .LVU106
 469              	.LBE8:
  74:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = 0;
 470              		.loc 1 74 45 is_stmt 1 discriminator 2 view .LVU107
 471 00e2 0136     		adds	r6, r6, #1
 472              	.LVL28:
  74:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = 0;
 473              		.loc 1 74 27 discriminator 2 view .LVU108
 474 00e4 062E     		cmp	r6, #6
 475 00e6 93D1     		bne	.L30
 476              	.LVL29:
  74:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = 0;
 477              		.loc 1 74 27 is_stmt 0 discriminator 2 view .LVU109
 478              	.LBE10:
 131:keyboards/planck/rev6_drop/matrix.c ****         }
 132:keyboards/planck/rev6_drop/matrix.c ****     }
 133:keyboards/planck/rev6_drop/matrix.c **** 
 134:keyboards/planck/rev6_drop/matrix.c ****     if (debouncing && timer_elapsed(debouncing_time) > DEBOUNCE) {
 479              		.loc 1 134 5 is_stmt 1 view .LVU110
 480              		.loc 1 134 9 is_stmt 0 view .LVU111
 481 00e8 1D4C     		ldr	r4, .L41+12
 482              		.loc 1 134 8 view .LVU112
 483 00ea 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 484 00ec F3B1     		cbz	r3, .L32
 485              		.loc 1 134 23 discriminator 1 view .LVU113
 486 00ee 1D4B     		ldr	r3, .L41+16
 487 00f0 1888     		ldrh	r0, [r3]
 488 00f2 FFF7FEFF 		bl	timer_elapsed
 489              	.LVL30:
 490              		.loc 1 134 20 discriminator 1 view .LVU114
 491 00f6 0528     		cmp	r0, #5
 492 00f8 18D9     		bls	.L32
 493              	.LBB11:
 135:keyboards/planck/rev6_drop/matrix.c ****         for (int row = 0; row < MATRIX_ROWS; row++) {
 136:keyboards/planck/rev6_drop/matrix.c ****             matrix[row] = 0;
 494              		.loc 1 136 25 view .LVU115
 495 00fa 1B49     		ldr	r1, .L41+20
 496 00fc 0023     		movs	r3, #0
 497 00fe 0B60     		str	r3, [r1]	@ unaligned
 498 0100 4B60     		str	r3, [r1, #4]	@ unaligned
 499              	.L35:
 500              	.LVL31:
 501              		.loc 1 136 13 is_stmt 1 view .LVU116
 137:keyboards/planck/rev6_drop/matrix.c ****             for (int col = 0; col < MATRIX_COLS; col++) {
 502              		.loc 1 137 13 view .LVU117
 503              	.LBB12:
 504              		.loc 1 137 18 view .LVU118
 505              		.loc 1 137 35 view .LVU119
 506              	.LBE12:
 135:keyboards/planck/rev6_drop/matrix.c ****         for (int row = 0; row < MATRIX_ROWS; row++) {
 507              		.loc 1 135 18 is_stmt 0 view .LVU120
 508 0102 0020     		movs	r0, #0
 509 0104 3E46     		mov	r6, r7
 510              	.LBB13:
 511              		.loc 1 137 22 view .LVU121
 512 0106 0546     		mov	r5, r0
 513              	.LVL32:
 514              	.L34:
 138:keyboards/planck/rev6_drop/matrix.c ****                 matrix[row] |= ((matrix_debouncing[col] & (1 << row) ? 1 : 0) << col);
 515              		.loc 1 138 17 is_stmt 1 discriminator 3 view .LVU122
 516              		.loc 1 138 51 is_stmt 0 discriminator 3 view .LVU123
 517 0108 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 518              		.loc 1 138 70 discriminator 3 view .LVU124
 519 010c 1A41     		asrs	r2, r2, r3
 520              		.loc 1 138 74 discriminator 3 view .LVU125
 521 010e 02F00102 		and	r2, r2, #1
 522              		.loc 1 138 79 discriminator 3 view .LVU126
 523 0112 AA40     		lsls	r2, r2, r5
 137:keyboards/planck/rev6_drop/matrix.c ****             for (int col = 0; col < MATRIX_COLS; col++) {
 524              		.loc 1 137 53 discriminator 3 view .LVU127
 525 0114 0135     		adds	r5, r5, #1
 526              	.LVL33:
 527              		.loc 1 138 29 discriminator 3 view .LVU128
 528 0116 1043     		orrs	r0, r0, r2
 137:keyboards/planck/rev6_drop/matrix.c ****             for (int col = 0; col < MATRIX_COLS; col++) {
 529              		.loc 1 137 35 discriminator 3 view .LVU129
 530 0118 062D     		cmp	r5, #6
 531              		.loc 1 138 29 discriminator 3 view .LVU130
 532 011a C0B2     		uxtb	r0, r0
 137:keyboards/planck/rev6_drop/matrix.c ****             for (int col = 0; col < MATRIX_COLS; col++) {
 533              		.loc 1 137 53 is_stmt 1 discriminator 3 view .LVU131
 534              	.LVL34:
 137:keyboards/planck/rev6_drop/matrix.c ****             for (int col = 0; col < MATRIX_COLS; col++) {
 535              		.loc 1 137 35 discriminator 3 view .LVU132
 536 011c F4D1     		bne	.L34
 537              	.LBE13:
 135:keyboards/planck/rev6_drop/matrix.c ****         for (int row = 0; row < MATRIX_ROWS; row++) {
 538              		.loc 1 135 49 is_stmt 0 discriminator 2 view .LVU133
 539 011e 0133     		adds	r3, r3, #1
 540              	.LVL35:
 135:keyboards/planck/rev6_drop/matrix.c ****         for (int row = 0; row < MATRIX_ROWS; row++) {
 541              		.loc 1 135 31 discriminator 2 view .LVU134
 542 0120 082B     		cmp	r3, #8
 543 0122 01F8010B 		strb	r0, [r1], #1
 135:keyboards/planck/rev6_drop/matrix.c ****         for (int row = 0; row < MATRIX_ROWS; row++) {
 544              		.loc 1 135 49 is_stmt 1 discriminator 2 view .LVU135
 545              	.LVL36:
 135:keyboards/planck/rev6_drop/matrix.c ****         for (int row = 0; row < MATRIX_ROWS; row++) {
 546              		.loc 1 135 31 discriminator 2 view .LVU136
 547 0126 ECD1     		bne	.L35
 548              	.LBE11:
 139:keyboards/planck/rev6_drop/matrix.c ****             }
 140:keyboards/planck/rev6_drop/matrix.c ****         }
 141:keyboards/planck/rev6_drop/matrix.c ****         debouncing = false;
 549              		.loc 1 141 9 view .LVU137
 550              		.loc 1 141 20 is_stmt 0 view .LVU138
 551 0128 0023     		movs	r3, #0
 552              	.LVL37:
 553              		.loc 1 141 20 view .LVU139
 554 012a 2370     		strb	r3, [r4]
 555              	.LVL38:
 556              	.L32:
 142:keyboards/planck/rev6_drop/matrix.c ****     }
 143:keyboards/planck/rev6_drop/matrix.c **** 
 144:keyboards/planck/rev6_drop/matrix.c ****     matrix_scan_quantum();
 557              		.loc 1 144 5 is_stmt 1 view .LVU140
 558 012c FFF7FEFF 		bl	matrix_scan_quantum
 559              	.LVL39:
 145:keyboards/planck/rev6_drop/matrix.c **** 
 146:keyboards/planck/rev6_drop/matrix.c ****     return 1;
 560              		.loc 1 146 5 view .LVU141
 147:keyboards/planck/rev6_drop/matrix.c **** }
 561              		.loc 1 147 1 is_stmt 0 view .LVU142
 562 0130 0120     		movs	r0, #1
 563 0132 03B0     		add	sp, sp, #12
 564              		.cfi_remember_state
 565              		.cfi_def_cfa_offset 36
 566              		@ sp needed
 567 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 568              	.LVL40:
 569              	.L27:
 570              		.cfi_restore_state
 571              	.LBB14:
 572              	.LBB9:
 111:keyboards/planck/rev6_drop/matrix.c ****                 break;
 573              		.loc 1 111 17 is_stmt 1 view .LVU143
 574 0138 4FF48062 		mov	r2, #1024
 575 013c C3E7     		b	.L40
 576              	.L26:
 114:keyboards/planck/rev6_drop/matrix.c ****                 break;
 577              		.loc 1 114 17 view .LVU144
 578 013e 0422     		movs	r2, #4
 579 0140 C1E7     		b	.L40
 580              	.L25:
 117:keyboards/planck/rev6_drop/matrix.c ****                 break;
 581              		.loc 1 117 17 view .LVU145
 582 0142 0222     		movs	r2, #2
 583 0144 BFE7     		b	.L40
 584              	.L24:
 120:keyboards/planck/rev6_drop/matrix.c ****                 break;
 585              		.loc 1 120 17 view .LVU146
 586 0146 8021     		movs	r1, #128
 587 0148 5183     		strh	r1, [r2, #26]	@ movhi
 121:keyboards/planck/rev6_drop/matrix.c ****             case 5:
 588              		.loc 1 121 17 view .LVU147
 589 014a BDE7     		b	.L28
 590              	.L22:
 123:keyboards/planck/rev6_drop/matrix.c ****                 break;
 591              		.loc 1 123 17 view .LVU148
 592 014c A4F81AA0 		strh	r10, [r4, #26]	@ movhi
 124:keyboards/planck/rev6_drop/matrix.c ****         }
 593              		.loc 1 124 17 view .LVU149
 594 0150 BAE7     		b	.L28
 595              	.L42:
 596 0152 00BF     		.align	2
 597              	.L41:
 598 0154 00000000 		.word	.LANCHOR1
 599 0158 00040048 		.word	1207960576
 600 015c 00080048 		.word	1207961600
 601 0160 00000000 		.word	.LANCHOR2
 602 0164 00000000 		.word	.LANCHOR3
 603 0168 00000000 		.word	.LANCHOR0
 604              	.LBE9:
 605              	.LBE14:
 606              		.cfi_endproc
 607              	.LFE290:
 609              		.section	.text.matrix_is_on,"ax",%progbits
 610              		.align	1
 611              		.global	matrix_is_on
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu fpv4-sp-d16
 617              	matrix_is_on:
 618              	.LVL41:
 619              	.LFB291:
 148:keyboards/planck/rev6_drop/matrix.c **** 
 149:keyboards/planck/rev6_drop/matrix.c **** bool matrix_is_on(uint8_t row, uint8_t col) { return (matrix[row] & (1 << col)); }
 620              		.loc 1 149 45 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625              		.loc 1 149 47 view .LVU151
 626              		.loc 1 149 61 is_stmt 0 view .LVU152
 627 0000 044B     		ldr	r3, .L44
 628 0002 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 629              		.loc 1 149 72 view .LVU153
 630 0004 0123     		movs	r3, #1
 631 0006 03FA01F1 		lsl	r1, r3, r1
 632              	.LVL42:
 633              		.loc 1 149 67 view .LVU154
 634 000a 0A42     		tst	r2, r1
 635              		.loc 1 149 82 view .LVU155
 636 000c 14BF     		ite	ne
 637 000e 1846     		movne	r0, r3
 638              	.LVL43:
 639              		.loc 1 149 82 view .LVU156
 640 0010 0020     		moveq	r0, #0
 641 0012 7047     		bx	lr
 642              	.L45:
 643              		.align	2
 644              	.L44:
 645 0014 00000000 		.word	.LANCHOR0
 646              		.cfi_endproc
 647              	.LFE291:
 649              		.section	.text.matrix_get_row,"ax",%progbits
 650              		.align	1
 651              		.global	matrix_get_row
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	matrix_get_row:
 658              	.LVL44:
 659              	.LFB292:
 150:keyboards/planck/rev6_drop/matrix.c **** 
 151:keyboards/planck/rev6_drop/matrix.c **** matrix_row_t matrix_get_row(uint8_t row) { return matrix[row]; }
 660              		.loc 1 151 42 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665              		.loc 1 151 44 view .LVU158
 666              		.loc 1 151 64 is_stmt 0 view .LVU159
 667 0000 014B     		ldr	r3, .L47
 668 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 669              	.LVL45:
 670              		.loc 1 151 64 view .LVU160
 671 0004 7047     		bx	lr
 672              	.L48:
 673 0006 00BF     		.align	2
 674              	.L47:
 675 0008 00000000 		.word	.LANCHOR0
 676              		.cfi_endproc
 677              	.LFE292:
 679              		.section	.rodata.matrix_print.str1.1,"aMS",%progbits,1
 680              	.LC1:
 681 0000 0A722F63 		.ascii	"\012r/c 01234567\012\000"
 681      20303132 
 681      33343536 
 681      370A00
 682              	.LC2:
 683 000f 2558303A 		.ascii	"%X0: \000"
 683      2000
 684              	.LC3:
 685 0015 3100     		.ascii	"1\000"
 686              	.LC4:
 687 0017 3000     		.ascii	"0\000"
 688              	.LC5:
 689 0019 0A00     		.ascii	"\012\000"
 690              		.section	.text.matrix_print,"ax",%progbits
 691              		.align	1
 692              		.global	matrix_print
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	matrix_print:
 699              	.LFB293:
 152:keyboards/planck/rev6_drop/matrix.c **** 
 153:keyboards/planck/rev6_drop/matrix.c **** void matrix_print(void) {
 700              		.loc 1 153 25 is_stmt 1 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 154:keyboards/planck/rev6_drop/matrix.c ****     dprintf("\nr/c 01234567\n");
 704              		.loc 1 154 5 view .LVU162
 705              		.loc 1 154 5 view .LVU163
 153:keyboards/planck/rev6_drop/matrix.c ****     dprintf("\nr/c 01234567\n");
 706              		.loc 1 153 25 is_stmt 0 view .LVU164
 707 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 708              		.cfi_def_cfa_offset 40
 709              		.cfi_offset 3, -40
 710              		.cfi_offset 4, -36
 711              		.cfi_offset 5, -32
 712              		.cfi_offset 6, -28
 713              		.cfi_offset 7, -24
 714              		.cfi_offset 8, -20
 715              		.cfi_offset 9, -16
 716              		.cfi_offset 10, -12
 717              		.cfi_offset 11, -8
 718              		.cfi_offset 14, -4
 719              		.loc 1 154 5 view .LVU165
 720 0004 1A4D     		ldr	r5, .L75
 721 0006 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 722 0008 D807     		lsls	r0, r3, #31
 723 000a 02D5     		bpl	.L50
 724              		.loc 1 154 5 is_stmt 1 discriminator 1 view .LVU166
 725 000c 1948     		ldr	r0, .L75+4
 726 000e FFF7FEFF 		bl	printf_
 727              	.LVL46:
 728              	.L50:
 729 0012 194F     		ldr	r7, .L75+8
 730              	.LBB15:
 731              	.LBB16:
 155:keyboards/planck/rev6_drop/matrix.c ****     for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
 156:keyboards/planck/rev6_drop/matrix.c ****         dprintf("%X0: ", row);
 732              		.loc 1 156 9 is_stmt 0 view .LVU167
 733 0014 DFF868A0 		ldr	r10, .L75+16
 734              	.LBB17:
 157:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = matrix_get_row(row);
 158:keyboards/planck/rev6_drop/matrix.c ****         for (int col = 0; col < MATRIX_COLS; col++) {
 159:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 160:keyboards/planck/rev6_drop/matrix.c ****                 dprintf("1");
 161:keyboards/planck/rev6_drop/matrix.c ****             else
 162:keyboards/planck/rev6_drop/matrix.c ****                 dprintf("0");
 735              		.loc 1 162 17 view .LVU168
 736 0018 DFF86880 		ldr	r8, .L75+20
 160:keyboards/planck/rev6_drop/matrix.c ****             else
 737              		.loc 1 160 17 view .LVU169
 738 001c DFF86890 		ldr	r9, .L75+24
 739              	.LBE17:
 740              	.LBE16:
 741              	.LBE15:
 153:keyboards/planck/rev6_drop/matrix.c ****     dprintf("\nr/c 01234567\n");
 742              		.loc 1 153 25 view .LVU170
 743 0020 0024     		movs	r4, #0
 744              	.L56:
 745              	.LVL47:
 746              	.LBB24:
 747              	.LBB22:
 156:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = matrix_get_row(row);
 748              		.loc 1 156 9 is_stmt 1 view .LVU171
 156:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = matrix_get_row(row);
 749              		.loc 1 156 9 view .LVU172
 750 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 751 0024 D907     		lsls	r1, r3, #31
 752 0026 03D5     		bpl	.L51
 156:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = matrix_get_row(row);
 753              		.loc 1 156 9 discriminator 1 view .LVU173
 754 0028 2146     		mov	r1, r4
 755 002a 5046     		mov	r0, r10
 756 002c FFF7FEFF 		bl	printf_
 757              	.LVL48:
 758              	.L51:
 156:keyboards/planck/rev6_drop/matrix.c ****         matrix_row_t data = matrix_get_row(row);
 759              		.loc 1 156 9 discriminator 3 view .LVU174
 157:keyboards/planck/rev6_drop/matrix.c ****         for (int col = 0; col < MATRIX_COLS; col++) {
 760              		.loc 1 157 9 discriminator 3 view .LVU175
 761              	.LBB18:
 762              	.LBI18:
 151:keyboards/planck/rev6_drop/matrix.c **** 
 763              		.loc 1 151 14 discriminator 3 view .LVU176
 764              	.LBB19:
 151:keyboards/planck/rev6_drop/matrix.c **** 
 765              		.loc 1 151 44 discriminator 3 view .LVU177
 151:keyboards/planck/rev6_drop/matrix.c **** 
 766              		.loc 1 151 57 is_stmt 0 discriminator 3 view .LVU178
 767 0030 17F801BB 		ldrb	fp, [r7], #1	@ zero_extendqisi2
 768              	.LVL49:
 151:keyboards/planck/rev6_drop/matrix.c **** 
 769              		.loc 1 151 57 discriminator 3 view .LVU179
 770              	.LBE19:
 771              	.LBE18:
 158:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 772              		.loc 1 158 9 is_stmt 1 discriminator 3 view .LVU180
 773              	.LBB20:
 158:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 774              		.loc 1 158 14 discriminator 3 view .LVU181
 158:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 775              		.loc 1 158 31 discriminator 3 view .LVU182
 158:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 776              		.loc 1 158 18 is_stmt 0 discriminator 3 view .LVU183
 777 0034 0026     		movs	r6, #0
 778              	.LVL50:
 779              	.L54:
 159:keyboards/planck/rev6_drop/matrix.c ****                 dprintf("1");
 780              		.loc 1 159 13 is_stmt 1 view .LVU184
 160:keyboards/planck/rev6_drop/matrix.c ****             else
 781              		.loc 1 160 17 is_stmt 0 view .LVU185
 782 0036 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 159:keyboards/planck/rev6_drop/matrix.c ****                 dprintf("1");
 783              		.loc 1 159 17 view .LVU186
 784 0038 4BFA06F2 		asr	r2, fp, r6
 159:keyboards/planck/rev6_drop/matrix.c ****                 dprintf("1");
 785              		.loc 1 159 16 view .LVU187
 786 003c D207     		lsls	r2, r2, #31
 160:keyboards/planck/rev6_drop/matrix.c ****             else
 787              		.loc 1 160 17 view .LVU188
 788 003e 03F00103 		and	r3, r3, #1
 159:keyboards/planck/rev6_drop/matrix.c ****                 dprintf("1");
 789              		.loc 1 159 16 view .LVU189
 790 0042 11D5     		bpl	.L52
 160:keyboards/planck/rev6_drop/matrix.c ****             else
 791              		.loc 1 160 17 is_stmt 1 view .LVU190
 160:keyboards/planck/rev6_drop/matrix.c ****             else
 792              		.loc 1 160 17 view .LVU191
 793 0044 13B1     		cbz	r3, .L53
 160:keyboards/planck/rev6_drop/matrix.c ****             else
 794              		.loc 1 160 17 discriminator 1 view .LVU192
 795 0046 4846     		mov	r0, r9
 796              	.L74:
 797              		.loc 1 162 17 is_stmt 0 discriminator 1 view .LVU193
 798 0048 FFF7FEFF 		bl	printf_
 799              	.LVL51:
 800              	.L53:
 801              		.loc 1 162 17 is_stmt 1 discriminator 3 view .LVU194
 158:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 802              		.loc 1 158 49 discriminator 3 view .LVU195
 803 004c 0136     		adds	r6, r6, #1
 804              	.LVL52:
 158:keyboards/planck/rev6_drop/matrix.c ****             if (data & (1 << col))
 805              		.loc 1 158 31 discriminator 3 view .LVU196
 806 004e 062E     		cmp	r6, #6
 807 0050 F1D1     		bne	.L54
 808              	.LBE20:
 163:keyboards/planck/rev6_drop/matrix.c ****         }
 164:keyboards/planck/rev6_drop/matrix.c ****         dprintf("\n");
 809              		.loc 1 164 9 view .LVU197
 810              		.loc 1 164 9 view .LVU198
 811 0052 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 812 0054 DB07     		lsls	r3, r3, #31
 813 0056 02D5     		bpl	.L55
 814              		.loc 1 164 9 discriminator 1 view .LVU199
 815 0058 0848     		ldr	r0, .L75+12
 816 005a FFF7FEFF 		bl	printf_
 817              	.LVL53:
 818              	.L55:
 819              		.loc 1 164 9 discriminator 3 view .LVU200
 820              	.LBE22:
 155:keyboards/planck/rev6_drop/matrix.c ****         dprintf("%X0: ", row);
 821              		.loc 1 155 49 discriminator 3 view .LVU201
 155:keyboards/planck/rev6_drop/matrix.c ****         dprintf("%X0: ", row);
 822              		.loc 1 155 31 discriminator 3 view .LVU202
 823 005e 0134     		adds	r4, r4, #1
 824              	.LVL54:
 155:keyboards/planck/rev6_drop/matrix.c ****         dprintf("%X0: ", row);
 825              		.loc 1 155 31 is_stmt 0 discriminator 3 view .LVU203
 826 0060 082C     		cmp	r4, #8
 827 0062 DED1     		bne	.L56
 828              	.LBE24:
 165:keyboards/planck/rev6_drop/matrix.c ****     }
 166:keyboards/planck/rev6_drop/matrix.c **** }
 829              		.loc 1 166 1 view .LVU204
 830 0064 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 831              	.LVL55:
 832              	.L52:
 833              	.LBB25:
 834              	.LBB23:
 835              	.LBB21:
 162:keyboards/planck/rev6_drop/matrix.c ****         }
 836              		.loc 1 162 17 is_stmt 1 view .LVU205
 162:keyboards/planck/rev6_drop/matrix.c ****         }
 837              		.loc 1 162 17 view .LVU206
 838 0068 002B     		cmp	r3, #0
 839 006a EFD0     		beq	.L53
 162:keyboards/planck/rev6_drop/matrix.c ****         }
 840              		.loc 1 162 17 discriminator 1 view .LVU207
 841 006c 4046     		mov	r0, r8
 842 006e EBE7     		b	.L74
 843              	.L76:
 844              		.align	2
 845              	.L75:
 846 0070 00000000 		.word	debug_config
 847 0074 00000000 		.word	.LC1
 848 0078 00000000 		.word	.LANCHOR0
 849 007c 19000000 		.word	.LC5
 850 0080 0F000000 		.word	.LC2
 851 0084 17000000 		.word	.LC4
 852 0088 15000000 		.word	.LC3
 853              	.LBE21:
 854              	.LBE23:
 855              	.LBE25:
 856              		.cfi_endproc
 857              	.LFE293:
 859              		.section	.bss.debouncing,"aw",%nobits
 860              		.set	.LANCHOR2,. + 0
 863              	debouncing:
 864 0000 00       		.space	1
 865              		.section	.bss.debouncing_time,"aw",%nobits
 866              		.align	1
 867              		.set	.LANCHOR3,. + 0
 870              	debouncing_time:
 871 0000 0000     		.space	2
 872              		.section	.bss.matrix,"aw",%nobits
 873              		.set	.LANCHOR0,. + 0
 876              	matrix:
 877 0000 00000000 		.space	8
 877      00000000 
 878              		.section	.bss.matrix_debouncing,"aw",%nobits
 879              		.set	.LANCHOR1,. + 0
 882              	matrix_debouncing:
 883 0000 00000000 		.space	6
 883      0000
 884              		.text
 885              	.Letext0:
 886              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 887              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 888              		.file 4 "/usr/lib/gcc/arm-none-eabi/11.2.0/include/stddef.h"
 889              		.file 5 "./lib/chibios/os/rt/include/chtime.h"
 890              		.file 6 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 891              		.file 7 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 892              		.file 8 "quantum/logging/debug.h"
 893              		.file 9 "quantum/matrix.h"
 894              		.file 10 "tmk_core/common/timer.h"
 895              		.file 11 "/usr/arm-none-eabi/include/string.h"
 896              		.file 12 "./lib/chibios/os/rt/include/chthreads.h"
 897              		.file 13 "lib/printf/printf.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 matrix.c
     /tmp/ccDpxoxY.s:18     .text.matrix_init_user:0000000000000000 $t
     /tmp/ccDpxoxY.s:26     .text.matrix_init_user:0000000000000000 matrix_init_user
     /tmp/ccDpxoxY.s:40     .text.matrix_scan_user:0000000000000000 $t
     /tmp/ccDpxoxY.s:47     .text.matrix_scan_user:0000000000000000 matrix_scan_user
     /tmp/ccDpxoxY.s:58     .text.matrix_init_kb:0000000000000000 $t
     /tmp/ccDpxoxY.s:65     .text.matrix_init_kb:0000000000000000 matrix_init_kb
     /tmp/ccDpxoxY.s:86     .text.matrix_scan_kb:0000000000000000 $t
     /tmp/ccDpxoxY.s:93     .text.matrix_scan_kb:0000000000000000 matrix_scan_kb
     /tmp/ccDpxoxY.s:117    .text.matrix_init:0000000000000000 $t
     /tmp/ccDpxoxY.s:124    .text.matrix_init:0000000000000000 matrix_init
     /tmp/ccDpxoxY.s:253    .text.matrix_init:00000000000000d0 $d
     /tmp/ccDpxoxY.s:263    .text.matrix_scan:0000000000000000 $t
     /tmp/ccDpxoxY.s:270    .text.matrix_scan:0000000000000000 matrix_scan
     /tmp/ccDpxoxY.s:313    .text.matrix_scan:000000000000001e $d
     /tmp/ccDpxoxY.s:405    .text.matrix_scan:000000000000009e $d
     /tmp/ccDpxoxY.s:598    .text.matrix_scan:0000000000000154 $d
     /tmp/ccDpxoxY.s:610    .text.matrix_is_on:0000000000000000 $t
     /tmp/ccDpxoxY.s:617    .text.matrix_is_on:0000000000000000 matrix_is_on
     /tmp/ccDpxoxY.s:645    .text.matrix_is_on:0000000000000014 $d
     /tmp/ccDpxoxY.s:650    .text.matrix_get_row:0000000000000000 $t
     /tmp/ccDpxoxY.s:657    .text.matrix_get_row:0000000000000000 matrix_get_row
     /tmp/ccDpxoxY.s:675    .text.matrix_get_row:0000000000000008 $d
     /tmp/ccDpxoxY.s:691    .text.matrix_print:0000000000000000 $t
     /tmp/ccDpxoxY.s:698    .text.matrix_print:0000000000000000 matrix_print
     /tmp/ccDpxoxY.s:846    .text.matrix_print:0000000000000070 $d
     /tmp/ccDpxoxY.s:863    .bss.debouncing:0000000000000000 debouncing
     /tmp/ccDpxoxY.s:864    .bss.debouncing:0000000000000000 $d
     /tmp/ccDpxoxY.s:866    .bss.debouncing_time:0000000000000000 $d
     /tmp/ccDpxoxY.s:870    .bss.debouncing_time:0000000000000000 debouncing_time
     /tmp/ccDpxoxY.s:876    .bss.matrix:0000000000000000 matrix
     /tmp/ccDpxoxY.s:877    .bss.matrix:0000000000000000 $d
     /tmp/ccDpxoxY.s:882    .bss.matrix_debouncing:0000000000000000 matrix_debouncing
     /tmp/ccDpxoxY.s:883    .bss.matrix_debouncing:0000000000000000 $d
     /tmp/ccDpxoxY.s:318    .text.matrix_scan:0000000000000023 $d
     /tmp/ccDpxoxY.s:318    .text.matrix_scan:0000000000000024 $t
     /tmp/ccDpxoxY.s:411    .text.matrix_scan:00000000000000a3 $d
     /tmp/ccDpxoxY.s:411    .text.matrix_scan:00000000000000a4 $t

UNDEFINED SYMBOLS
printf_
_pal_lld_setgroupmode
matrix_init_quantum
debug_config
chThdSleep
timer_read
timer_elapsed
matrix_scan_quantum
