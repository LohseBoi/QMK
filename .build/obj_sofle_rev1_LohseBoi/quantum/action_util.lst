   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB3:
  16               		.file 1 "quantum/action_util.h"
   1:quantum/action_util.h **** /*
   2:quantum/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.h **** 
   4:quantum/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.h **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.h **** (at your option) any later version.
   8:quantum/action_util.h **** 
   9:quantum/action_util.h **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.h **** GNU General Public License for more details.
  13:quantum/action_util.h **** 
  14:quantum/action_util.h **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.h **** */
  17:quantum/action_util.h **** 
  18:quantum/action_util.h **** #pragma once
  19:quantum/action_util.h **** 
  20:quantum/action_util.h **** #include <stdint.h>
  21:quantum/action_util.h **** #include "report.h"
  22:quantum/action_util.h **** 
  23:quantum/action_util.h **** #ifdef __cplusplus
  24:quantum/action_util.h **** extern "C" {
  25:quantum/action_util.h **** #endif
  26:quantum/action_util.h **** 
  27:quantum/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:quantum/action_util.h **** 
  29:quantum/action_util.h **** void send_keyboard_report(void);
  30:quantum/action_util.h **** 
  31:quantum/action_util.h **** /* key */
  32:quantum/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  17               		.loc 1 32 34 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 32 36 view .LVU1
  24 0000 682F      		mov r22,r24
  25 0002 8091 0000 		lds r24,keyboard_report
  26 0006 9091 0000 		lds r25,keyboard_report+1
  27               	.LVL1:
  28               		.loc 1 32 36 is_stmt 0 view .LVU2
  29 000a 0C94 0000 		jmp add_key_to_report
  30               	.LVL2:
  31               		.loc 1 32 36 view .LVU3
  32               		.cfi_endproc
  33               	.LFE3:
  35               		.section	.text.del_key,"ax",@progbits
  36               	.global	del_key
  38               	del_key:
  39               	.LVL3:
  40               	.LFB4:
  33:quantum/action_util.h **** 
  34:quantum/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  41               		.loc 1 34 34 is_stmt 1 view -0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  47               		.loc 1 34 36 view .LVU5
  48 0000 682F      		mov r22,r24
  49 0002 8091 0000 		lds r24,keyboard_report
  50 0006 9091 0000 		lds r25,keyboard_report+1
  51               	.LVL4:
  52               		.loc 1 34 36 is_stmt 0 view .LVU6
  53 000a 0C94 0000 		jmp del_key_from_report
  54               	.LVL5:
  55               		.loc 1 34 36 view .LVU7
  56               		.cfi_endproc
  57               	.LFE4:
  59               		.section	.text.clear_keys,"ax",@progbits
  60               	.global	clear_keys
  62               	clear_keys:
  63               	.LFB5:
  35:quantum/action_util.h **** 
  36:quantum/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  64               		.loc 1 36 30 is_stmt 1 view -0
  65               		.cfi_startproc
  66               	/* prologue: function */
  67               	/* frame size = 0 */
  68               	/* stack size = 0 */
  69               	.L__stack_usage = 0
  70               		.loc 1 36 32 view .LVU9
  71 0000 8091 0000 		lds r24,keyboard_report
  72 0004 9091 0000 		lds r25,keyboard_report+1
  73 0008 0C94 0000 		jmp clear_keys_from_report
  74               	.LVL6:
  75               		.cfi_endproc
  76               	.LFE5:
  78               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  79               	.global	get_oneshot_locked_mods
  81               	get_oneshot_locked_mods:
  82               	.LFB11:
  83               		.file 2 "quantum/action_util.c"
   1:quantum/action_util.c **** /*
   2:quantum/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.c **** 
   4:quantum/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.c **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.c **** (at your option) any later version.
   8:quantum/action_util.c **** 
   9:quantum/action_util.c **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.c **** GNU General Public License for more details.
  13:quantum/action_util.c **** 
  14:quantum/action_util.c **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.c **** */
  17:quantum/action_util.c **** #include "host.h"
  18:quantum/action_util.c **** #include "report.h"
  19:quantum/action_util.c **** #include "debug.h"
  20:quantum/action_util.c **** #include "action_util.h"
  21:quantum/action_util.c **** #include "action_layer.h"
  22:quantum/action_util.c **** #include "timer.h"
  23:quantum/action_util.c **** #include "keycode_config.h"
  24:quantum/action_util.c **** 
  25:quantum/action_util.c **** extern keymap_config_t keymap_config;
  26:quantum/action_util.c **** 
  27:quantum/action_util.c **** static uint8_t real_mods  = 0;
  28:quantum/action_util.c **** static uint8_t weak_mods  = 0;
  29:quantum/action_util.c **** static uint8_t macro_mods = 0;
  30:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
  31:quantum/action_util.c **** static uint8_t weak_override_mods = 0;
  32:quantum/action_util.c **** static uint8_t suppressed_mods    = 0;
  33:quantum/action_util.c **** #endif
  34:quantum/action_util.c **** 
  35:quantum/action_util.c **** // TODO: pointer variable is not needed
  36:quantum/action_util.c **** // report_keyboard_t keyboard_report = {};
  37:quantum/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  38:quantum/action_util.c **** 
  39:quantum/action_util.c **** extern inline void add_key(uint8_t key);
  40:quantum/action_util.c **** extern inline void del_key(uint8_t key);
  41:quantum/action_util.c **** extern inline void clear_keys(void);
  42:quantum/action_util.c **** 
  43:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  44:quantum/action_util.c **** static uint8_t oneshot_mods        = 0;
  45:quantum/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  46:quantum/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  84               		.loc 2 46 46 view -0
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
  90               		.loc 2 46 48 view .LVU11
  91               		.loc 2 46 1 is_stmt 0 view .LVU12
  92 0000 8091 0000 		lds r24,oneshot_locked_mods
  93               	/* epilogue start */
  94 0004 0895      		ret
  95               		.cfi_endproc
  96               	.LFE11:
  98               		.section	.text.has_oneshot_mods_timed_out,"ax",@progbits
  99               	.global	has_oneshot_mods_timed_out
 101               	has_oneshot_mods_timed_out:
 102               	.LFB14:
  47:quantum/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  48:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
  49:quantum/action_util.c ****         oneshot_locked_mods = mods;
  50:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  51:quantum/action_util.c ****     }
  52:quantum/action_util.c **** }
  53:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
  54:quantum/action_util.c ****     if (oneshot_locked_mods) {
  55:quantum/action_util.c ****         oneshot_locked_mods = 0;
  56:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  57:quantum/action_util.c ****     }
  58:quantum/action_util.c **** }
  59:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  60:quantum/action_util.c **** static uint16_t oneshot_time = 0;
  61:quantum/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  62:quantum/action_util.c **** #    else
  63:quantum/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 103               		.loc 2 63 39 is_stmt 1 view -0
 104               		.cfi_startproc
 105               	/* prologue: function */
 106               	/* frame size = 0 */
 107               	/* stack size = 0 */
 108               	.L__stack_usage = 0
 109               		.loc 2 63 41 view .LVU14
 110               		.loc 2 63 1 is_stmt 0 view .LVU15
 111 0000 80E0      		ldi r24,0
 112               	/* epilogue start */
 113 0002 0895      		ret
 114               		.cfi_endproc
 115               	.LFE14:
 117               		.section	.text.get_oneshot_layer,"ax",@progbits
 118               	.global	get_oneshot_layer
 120               	get_oneshot_layer:
 121               	.LFB15:
  64:quantum/action_util.c **** #    endif
  65:quantum/action_util.c **** #endif
  66:quantum/action_util.c **** 
  67:quantum/action_util.c **** /* oneshot layer */
  68:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  69:quantum/action_util.c **** /** \brief oneshot_layer_data bits
  70:quantum/action_util.c ****  * LLLL LSSS
  71:quantum/action_util.c ****  * where:
  72:quantum/action_util.c ****  *   L => are layer bits
  73:quantum/action_util.c ****  *   S => oneshot state bits
  74:quantum/action_util.c ****  */
  75:quantum/action_util.c **** static int8_t oneshot_layer_data = 0;
  76:quantum/action_util.c **** 
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 122               		.loc 2 77 40 is_stmt 1 view -0
 123               		.cfi_startproc
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 128               		.loc 2 77 42 view .LVU17
 129               		.loc 2 77 68 is_stmt 0 view .LVU18
 130 0000 8091 0000 		lds r24,oneshot_layer_data
 131               		.loc 2 77 1 view .LVU19
 132 0004 8595      		asr r24
 133 0006 8595      		asr r24
 134 0008 8595      		asr r24
 135               	/* epilogue start */
 136 000a 0895      		ret
 137               		.cfi_endproc
 138               	.LFE15:
 140               		.section	.text.get_oneshot_layer_state,"ax",@progbits
 141               	.global	get_oneshot_layer_state
 143               	get_oneshot_layer_state:
 144               	.LFB16:
  78:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 145               		.loc 2 78 46 is_stmt 1 view -0
 146               		.cfi_startproc
 147               	/* prologue: function */
 148               	/* frame size = 0 */
 149               	/* stack size = 0 */
 150               	.L__stack_usage = 0
 151               		.loc 2 78 48 view .LVU21
 152               		.loc 2 78 74 is_stmt 0 view .LVU22
 153 0000 8091 0000 		lds r24,oneshot_layer_data
 154               		.loc 2 78 1 view .LVU23
 155 0004 8770      		andi r24,lo8(7)
 156               	/* epilogue start */
 157 0006 0895      		ret
 158               		.cfi_endproc
 159               	.LFE16:
 161               		.section	.text.set_oneshot_swaphands,"ax",@progbits
 162               	.global	set_oneshot_swaphands
 164               	set_oneshot_swaphands:
 165               	.LFB17:
  79:quantum/action_util.c **** 
  80:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  81:quantum/action_util.c **** enum {
  82:quantum/action_util.c ****     SHO_OFF,
  83:quantum/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  84:quantum/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  85:quantum/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  86:quantum/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  87:quantum/action_util.c **** #    endif
  88:quantum/action_util.c **** 
  89:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  90:quantum/action_util.c **** static uint16_t oneshot_layer_time = 0;
  91:quantum/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
  92:quantum/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
  93:quantum/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
  94:quantum/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
  95:quantum/action_util.c **** #        endif
  96:quantum/action_util.c **** #    endif
  97:quantum/action_util.c **** 
  98:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  99:quantum/action_util.c **** 
 100:quantum/action_util.c **** void set_oneshot_swaphands(void) {
 166               		.loc 2 100 34 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 101:quantum/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 172               		.loc 2 101 5 view .LVU25
 173               		.loc 2 101 24 is_stmt 0 view .LVU26
 174 0000 82E0      		ldi r24,lo8(2)
 175 0002 8093 0000 		sts swap_hands_oneshot,r24
 102:quantum/action_util.c ****     swap_hands         = true;
 176               		.loc 2 102 5 is_stmt 1 view .LVU27
 177               		.loc 2 102 24 is_stmt 0 view .LVU28
 178 0006 81E0      		ldi r24,lo8(1)
 179 0008 8093 0000 		sts swap_hands,r24
 180               	/* epilogue start */
 103:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 104:quantum/action_util.c ****     oneshot_swaphands_time = timer_read();
 105:quantum/action_util.c ****     if (oneshot_layer_time != 0) {
 106:quantum/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 107:quantum/action_util.c ****     }
 108:quantum/action_util.c **** #        endif
 109:quantum/action_util.c **** }
 181               		.loc 2 109 1 view .LVU29
 182 000c 0895      		ret
 183               		.cfi_endproc
 184               	.LFE17:
 186               		.section	.text.clear_oneshot_swaphands,"ax",@progbits
 187               	.global	clear_oneshot_swaphands
 189               	clear_oneshot_swaphands:
 190               	.LFB20:
 110:quantum/action_util.c **** 
 111:quantum/action_util.c **** void release_oneshot_swaphands(void) {
 112:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 113:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 114:quantum/action_util.c ****     }
 115:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 116:quantum/action_util.c ****         clear_oneshot_swaphands();
 117:quantum/action_util.c ****     }
 118:quantum/action_util.c **** }
 119:quantum/action_util.c **** 
 120:quantum/action_util.c **** void use_oneshot_swaphands(void) {
 121:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 123:quantum/action_util.c ****     }
 124:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 126:quantum/action_util.c ****     }
 127:quantum/action_util.c **** }
 128:quantum/action_util.c **** 
 129:quantum/action_util.c **** void clear_oneshot_swaphands(void) {
 191               		.loc 2 129 36 is_stmt 1 view -0
 192               		.cfi_startproc
 193               	/* prologue: function */
 194               	/* frame size = 0 */
 195               	/* stack size = 0 */
 196               	.L__stack_usage = 0
 130:quantum/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 197               		.loc 2 130 5 view .LVU31
 198               		.loc 2 130 24 is_stmt 0 view .LVU32
 199 0000 1092 0000 		sts swap_hands_oneshot,__zero_reg__
 131:quantum/action_util.c ****     swap_hands         = false;
 200               		.loc 2 131 5 is_stmt 1 view .LVU33
 201               		.loc 2 131 24 is_stmt 0 view .LVU34
 202 0004 1092 0000 		sts swap_hands,__zero_reg__
 203               	/* epilogue start */
 132:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 133:quantum/action_util.c ****     oneshot_swaphands_time = 0;
 134:quantum/action_util.c **** #        endif
 135:quantum/action_util.c **** }
 204               		.loc 2 135 1 view .LVU35
 205 0008 0895      		ret
 206               		.cfi_endproc
 207               	.LFE20:
 209               		.section	.text.release_oneshot_swaphands,"ax",@progbits
 210               	.global	release_oneshot_swaphands
 212               	release_oneshot_swaphands:
 213               	.LFB18:
 111:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 214               		.loc 2 111 38 is_stmt 1 view -0
 215               		.cfi_startproc
 216               	/* prologue: function */
 217               	/* frame size = 0 */
 218               	/* stack size = 0 */
 219               	.L__stack_usage = 0
 112:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 220               		.loc 2 112 5 view .LVU37
 112:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 221               		.loc 2 112 28 is_stmt 0 view .LVU38
 222 0000 8091 0000 		lds r24,swap_hands_oneshot
 112:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 223               		.loc 2 112 8 view .LVU39
 224 0004 8230      		cpi r24,lo8(2)
 225 0006 01F4      		brne .L11
 113:quantum/action_util.c ****     }
 226               		.loc 2 113 9 is_stmt 1 view .LVU40
 113:quantum/action_util.c ****     }
 227               		.loc 2 113 28 is_stmt 0 view .LVU41
 228 0008 81E0      		ldi r24,lo8(1)
 229 000a 8093 0000 		sts swap_hands_oneshot,r24
 115:quantum/action_util.c ****         clear_oneshot_swaphands();
 230               		.loc 2 115 5 is_stmt 1 view .LVU42
 231 000e 0895      		ret
 232               	.L11:
 115:quantum/action_util.c ****         clear_oneshot_swaphands();
 233               		.loc 2 115 5 view .LVU43
 115:quantum/action_util.c ****         clear_oneshot_swaphands();
 234               		.loc 2 115 8 is_stmt 0 view .LVU44
 235 0010 8330      		cpi r24,lo8(3)
 236 0012 01F4      		brne .L10
 116:quantum/action_util.c ****     }
 237               		.loc 2 116 9 is_stmt 1 view .LVU45
 238 0014 0C94 0000 		jmp clear_oneshot_swaphands
 239               	.LVL7:
 240               	.L10:
 241               	/* epilogue start */
 118:quantum/action_util.c **** 
 242               		.loc 2 118 1 is_stmt 0 view .LVU46
 243 0018 0895      		ret
 244               		.cfi_endproc
 245               	.LFE18:
 247               		.section	.text.use_oneshot_swaphands,"ax",@progbits
 248               	.global	use_oneshot_swaphands
 250               	use_oneshot_swaphands:
 251               	.LFB19:
 120:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 252               		.loc 2 120 34 is_stmt 1 view -0
 253               		.cfi_startproc
 254               	/* prologue: function */
 255               	/* frame size = 0 */
 256               	/* stack size = 0 */
 257               	.L__stack_usage = 0
 121:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 258               		.loc 2 121 5 view .LVU48
 121:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 259               		.loc 2 121 28 is_stmt 0 view .LVU49
 260 0000 8091 0000 		lds r24,swap_hands_oneshot
 121:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 261               		.loc 2 121 8 view .LVU50
 262 0004 8230      		cpi r24,lo8(2)
 263 0006 01F4      		brne .L14
 122:quantum/action_util.c ****     }
 264               		.loc 2 122 9 is_stmt 1 view .LVU51
 122:quantum/action_util.c ****     }
 265               		.loc 2 122 28 is_stmt 0 view .LVU52
 266 0008 83E0      		ldi r24,lo8(3)
 267 000a 8093 0000 		sts swap_hands_oneshot,r24
 124:quantum/action_util.c ****         clear_oneshot_swaphands();
 268               		.loc 2 124 5 is_stmt 1 view .LVU53
 269 000e 0895      		ret
 270               	.L14:
 124:quantum/action_util.c ****         clear_oneshot_swaphands();
 271               		.loc 2 124 5 view .LVU54
 124:quantum/action_util.c ****         clear_oneshot_swaphands();
 272               		.loc 2 124 8 is_stmt 0 view .LVU55
 273 0010 8130      		cpi r24,lo8(1)
 274 0012 01F4      		brne .L13
 125:quantum/action_util.c ****     }
 275               		.loc 2 125 9 is_stmt 1 view .LVU56
 276 0014 0C94 0000 		jmp clear_oneshot_swaphands
 277               	.LVL8:
 278               	.L13:
 279               	/* epilogue start */
 127:quantum/action_util.c **** 
 280               		.loc 2 127 1 is_stmt 0 view .LVU57
 281 0018 0895      		ret
 282               		.cfi_endproc
 283               	.LFE19:
 285               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 286               	.global	is_oneshot_layer_active
 288               	is_oneshot_layer_active:
 289               	.LFB24:
 136:quantum/action_util.c **** 
 137:quantum/action_util.c **** #    endif
 138:quantum/action_util.c **** 
 139:quantum/action_util.c **** /** \brief Set oneshot layer
 140:quantum/action_util.c ****  *
 141:quantum/action_util.c ****  * FIXME: needs doc
 142:quantum/action_util.c ****  */
 143:quantum/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 144:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 145:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 146:quantum/action_util.c ****         layer_on(layer);
 147:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 148:quantum/action_util.c ****         oneshot_layer_time = timer_read();
 149:quantum/action_util.c **** #    endif
 150:quantum/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 151:quantum/action_util.c ****     } else {
 152:quantum/action_util.c ****         layer_on(layer);
 153:quantum/action_util.c ****     }
 154:quantum/action_util.c **** }
 155:quantum/action_util.c **** /** \brief Reset oneshot layer
 156:quantum/action_util.c ****  *
 157:quantum/action_util.c ****  * FIXME: needs doc
 158:quantum/action_util.c ****  */
 159:quantum/action_util.c **** void reset_oneshot_layer(void) {
 160:quantum/action_util.c ****     oneshot_layer_data = 0;
 161:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 162:quantum/action_util.c ****     oneshot_layer_time = 0;
 163:quantum/action_util.c **** #    endif
 164:quantum/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 165:quantum/action_util.c **** }
 166:quantum/action_util.c **** /** \brief Clear oneshot layer
 167:quantum/action_util.c ****  *
 168:quantum/action_util.c ****  * FIXME: needs doc
 169:quantum/action_util.c ****  */
 170:quantum/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 171:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 172:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 173:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 174:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 175:quantum/action_util.c ****         reset_oneshot_layer();
 176:quantum/action_util.c ****     }
 177:quantum/action_util.c **** }
 178:quantum/action_util.c **** /** \brief Is oneshot layer active
 179:quantum/action_util.c ****  *
 180:quantum/action_util.c ****  * FIXME: needs doc
 181:quantum/action_util.c ****  */
 182:quantum/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 290               		.loc 2 182 36 is_stmt 1 view -0
 291               		.cfi_startproc
 292               	/* prologue: function */
 293               	/* frame size = 0 */
 294               	/* stack size = 0 */
 295               	.L__stack_usage = 0
 296               		.loc 2 182 38 view .LVU59
 297               	.LBB12:
 298               	.LBI12:
  78:quantum/action_util.c **** 
 299               		.loc 2 78 16 view .LVU60
 300               	.LBB13:
  78:quantum/action_util.c **** 
 301               		.loc 2 78 48 view .LVU61
  78:quantum/action_util.c **** 
 302               		.loc 2 78 74 is_stmt 0 view .LVU62
 303 0000 9091 0000 		lds r25,oneshot_layer_data
 304 0004 9770      		andi r25,lo8(7)
 305               	.LBE13:
 306               	.LBE12:
 307               		.loc 2 182 45 view .LVU63
 308 0006 81E0      		ldi r24,lo8(1)
 309 0008 01F4      		brne .L17
 310 000a 80E0      		ldi r24,0
 311               	.L17:
 312               	/* epilogue start */
 313               		.loc 2 182 1 view .LVU64
 314 000c 0895      		ret
 315               		.cfi_endproc
 316               	.LFE24:
 318               		.section	.text.oneshot_set,"ax",@progbits
 319               	.global	oneshot_set
 321               	oneshot_set:
 322               	.LVL9:
 323               	.LFB25:
 183:quantum/action_util.c **** 
 184:quantum/action_util.c **** /** \brief set oneshot
 185:quantum/action_util.c ****  *
 186:quantum/action_util.c ****  * FIXME: needs doc
 187:quantum/action_util.c ****  */
 188:quantum/action_util.c **** void oneshot_set(bool active) {
 324               		.loc 2 188 31 is_stmt 1 view -0
 325               		.cfi_startproc
 326               	/* prologue: function */
 327               	/* frame size = 0 */
 328               	/* stack size = 0 */
 329               	.L__stack_usage = 0
 189:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 330               		.loc 2 189 5 view .LVU66
 331               		.loc 2 189 22 is_stmt 0 view .LVU67
 332 0000 9091 0000 		lds r25,keymap_config+1
 333 0004 92FB      		bst r25,2
 334 0006 2227      		clr r18
 335 0008 20F9      		bld r18,0
 336               		.loc 2 189 8 view .LVU68
 337 000a 2817      		cp r18,r24
 338 000c 01F0      		breq .L18
 190:quantum/action_util.c ****         keymap_config.oneshot_disable = active;
 339               		.loc 2 190 9 is_stmt 1 view .LVU69
 340               		.loc 2 190 39 is_stmt 0 view .LVU70
 341 000e 80FB      		bst r24,0
 342 0010 92F9      		bld r25,2
 343 0012 9093 0000 		sts keymap_config+1,r25
 191:quantum/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 344               		.loc 2 191 9 is_stmt 1 view .LVU71
 345 0016 8091 0000 		lds r24,keymap_config
 346 001a 9091 0000 		lds r25,keymap_config+1
 347               	.LVL10:
 348               		.loc 2 191 9 is_stmt 0 view .LVU72
 349 001e 0C94 0000 		jmp eeconfig_update_keymap
 350               	.LVL11:
 351               	.L18:
 352               	/* epilogue start */
 192:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 193:quantum/action_util.c ****     }
 194:quantum/action_util.c **** }
 353               		.loc 2 194 1 view .LVU73
 354 0022 0895      		ret
 355               		.cfi_endproc
 356               	.LFE25:
 358               		.section	.text.oneshot_toggle,"ax",@progbits
 359               	.global	oneshot_toggle
 361               	oneshot_toggle:
 362               	.LFB26:
 195:quantum/action_util.c **** 
 196:quantum/action_util.c **** /** \brief toggle oneshot
 197:quantum/action_util.c ****  *
 198:quantum/action_util.c ****  * FIXME: needs doc
 199:quantum/action_util.c ****  */
 200:quantum/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 363               		.loc 2 200 27 is_stmt 1 view -0
 364               		.cfi_startproc
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
 369               		.loc 2 200 29 view .LVU75
 370               		.loc 2 200 55 is_stmt 0 view .LVU76
 371 0000 8091 0000 		lds r24,keymap_config+1
 372 0004 82FB      		bst r24,2
 373 0006 8827      		clr r24
 374 0008 80F9      		bld r24,0
 375               		.loc 2 200 29 view .LVU77
 376 000a 91E0      		ldi r25,lo8(1)
 377 000c 8927      		eor r24,r25
 378 000e 0C94 0000 		jmp oneshot_set
 379               	.LVL12:
 380               		.cfi_endproc
 381               	.LFE26:
 383               		.section	.text.oneshot_enable,"ax",@progbits
 384               	.global	oneshot_enable
 386               	oneshot_enable:
 387               	.LFB27:
 201:quantum/action_util.c **** 
 202:quantum/action_util.c **** /** \brief enable oneshot
 203:quantum/action_util.c ****  *
 204:quantum/action_util.c ****  * FIXME: needs doc
 205:quantum/action_util.c ****  */
 206:quantum/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 388               		.loc 2 206 27 is_stmt 1 view -0
 389               		.cfi_startproc
 390               	/* prologue: function */
 391               	/* frame size = 0 */
 392               	/* stack size = 0 */
 393               	.L__stack_usage = 0
 394               		.loc 2 206 29 view .LVU79
 395 0000 81E0      		ldi r24,lo8(1)
 396 0002 0C94 0000 		jmp oneshot_set
 397               	.LVL13:
 398               		.cfi_endproc
 399               	.LFE27:
 401               		.section	.text.oneshot_disable,"ax",@progbits
 402               	.global	oneshot_disable
 404               	oneshot_disable:
 405               	.LFB28:
 207:quantum/action_util.c **** 
 208:quantum/action_util.c **** /** \brief disable oneshot
 209:quantum/action_util.c ****  *
 210:quantum/action_util.c ****  * FIXME: needs doc
 211:quantum/action_util.c ****  */
 212:quantum/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 406               		.loc 2 212 28 view -0
 407               		.cfi_startproc
 408               	/* prologue: function */
 409               	/* frame size = 0 */
 410               	/* stack size = 0 */
 411               	.L__stack_usage = 0
 412               		.loc 2 212 30 view .LVU81
 413 0000 80E0      		ldi r24,0
 414 0002 0C94 0000 		jmp oneshot_set
 415               	.LVL14:
 416               		.cfi_endproc
 417               	.LFE28:
 419               		.section	.text.is_oneshot_enabled,"ax",@progbits
 420               	.global	is_oneshot_enabled
 422               	is_oneshot_enabled:
 423               	.LFB29:
 213:quantum/action_util.c **** 
 214:quantum/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 424               		.loc 2 214 31 view -0
 425               		.cfi_startproc
 426               	/* prologue: function */
 427               	/* frame size = 0 */
 428               	/* stack size = 0 */
 429               	.L__stack_usage = 0
 430               		.loc 2 214 33 view .LVU83
 431               		.loc 2 214 53 is_stmt 0 view .LVU84
 432 0000 8091 0000 		lds r24,keymap_config+1
 433               		.loc 2 214 1 view .LVU85
 434 0004 82FB      		bst r24,2
 435 0006 8827      		clr r24
 436 0008 80F9      		bld r24,0
 437               	/* epilogue start */
 438 000a 0895      		ret
 439               		.cfi_endproc
 440               	.LFE29:
 442               		.section	.text.get_mods,"ax",@progbits
 443               	.global	get_mods
 445               	get_mods:
 446               	.LFB31:
 215:quantum/action_util.c **** 
 216:quantum/action_util.c **** #endif
 217:quantum/action_util.c **** 
 218:quantum/action_util.c **** /** \brief Send keyboard report
 219:quantum/action_util.c ****  *
 220:quantum/action_util.c ****  * FIXME: needs doc
 221:quantum/action_util.c ****  */
 222:quantum/action_util.c **** void send_keyboard_report(void) {
 223:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 224:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 225:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 226:quantum/action_util.c **** 
 227:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 228:quantum/action_util.c ****     if (oneshot_mods) {
 229:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 230:quantum/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 231:quantum/action_util.c ****             dprintf("Oneshot: timeout\n");
 232:quantum/action_util.c ****             clear_oneshot_mods();
 233:quantum/action_util.c ****         }
 234:quantum/action_util.c **** #    endif
 235:quantum/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 236:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 237:quantum/action_util.c ****             clear_oneshot_mods();
 238:quantum/action_util.c ****         }
 239:quantum/action_util.c ****     }
 240:quantum/action_util.c **** 
 241:quantum/action_util.c **** #endif
 242:quantum/action_util.c **** 
 243:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 244:quantum/action_util.c ****     // These need to be last to be able to properly control key overrides
 245:quantum/action_util.c ****     keyboard_report->mods &= ~suppressed_mods;
 246:quantum/action_util.c ****     keyboard_report->mods |= weak_override_mods;
 247:quantum/action_util.c **** #endif
 248:quantum/action_util.c **** 
 249:quantum/action_util.c ****     host_keyboard_send(keyboard_report);
 250:quantum/action_util.c **** }
 251:quantum/action_util.c **** 
 252:quantum/action_util.c **** /** \brief Get mods
 253:quantum/action_util.c ****  *
 254:quantum/action_util.c ****  * FIXME: needs doc
 255:quantum/action_util.c ****  */
 256:quantum/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 447               		.loc 2 256 24 is_stmt 1 view -0
 448               		.cfi_startproc
 449               	/* prologue: function */
 450               	/* frame size = 0 */
 451               	/* stack size = 0 */
 452               	.L__stack_usage = 0
 453               		.loc 2 256 26 view .LVU87
 454               		.loc 2 256 1 is_stmt 0 view .LVU88
 455 0000 8091 0000 		lds r24,real_mods
 456               	/* epilogue start */
 457 0004 0895      		ret
 458               		.cfi_endproc
 459               	.LFE31:
 461               		.section	.text.add_mods,"ax",@progbits
 462               	.global	add_mods
 464               	add_mods:
 465               	.LVL15:
 466               	.LFB32:
 257:quantum/action_util.c **** /** \brief add mods
 258:quantum/action_util.c ****  *
 259:quantum/action_util.c ****  * FIXME: needs doc
 260:quantum/action_util.c ****  */
 261:quantum/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 467               		.loc 2 261 29 is_stmt 1 view -0
 468               		.cfi_startproc
 469               	/* prologue: function */
 470               	/* frame size = 0 */
 471               	/* stack size = 0 */
 472               	.L__stack_usage = 0
 473               		.loc 2 261 31 view .LVU90
 474               		.loc 2 261 41 is_stmt 0 view .LVU91
 475 0000 9091 0000 		lds r25,real_mods
 476 0004 892B      		or r24,r25
 477               	.LVL16:
 478               		.loc 2 261 41 view .LVU92
 479 0006 8093 0000 		sts real_mods,r24
 480               	/* epilogue start */
 481               		.loc 2 261 1 view .LVU93
 482 000a 0895      		ret
 483               		.cfi_endproc
 484               	.LFE32:
 486               		.section	.text.del_mods,"ax",@progbits
 487               	.global	del_mods
 489               	del_mods:
 490               	.LVL17:
 491               	.LFB33:
 262:quantum/action_util.c **** /** \brief del mods
 263:quantum/action_util.c ****  *
 264:quantum/action_util.c ****  * FIXME: needs doc
 265:quantum/action_util.c ****  */
 266:quantum/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 492               		.loc 2 266 29 is_stmt 1 view -0
 493               		.cfi_startproc
 494               	/* prologue: function */
 495               	/* frame size = 0 */
 496               	/* stack size = 0 */
 497               	.L__stack_usage = 0
 498               		.loc 2 266 31 view .LVU95
 499               		.loc 2 266 41 is_stmt 0 view .LVU96
 500 0000 8095      		com r24
 501               	.LVL18:
 502               		.loc 2 266 41 view .LVU97
 503 0002 9091 0000 		lds r25,real_mods
 504 0006 9823      		and r25,r24
 505 0008 9093 0000 		sts real_mods,r25
 506               	/* epilogue start */
 507               		.loc 2 266 1 view .LVU98
 508 000c 0895      		ret
 509               		.cfi_endproc
 510               	.LFE33:
 512               		.section	.text.set_mods,"ax",@progbits
 513               	.global	set_mods
 515               	set_mods:
 516               	.LVL19:
 517               	.LFB34:
 267:quantum/action_util.c **** /** \brief set mods
 268:quantum/action_util.c ****  *
 269:quantum/action_util.c ****  * FIXME: needs doc
 270:quantum/action_util.c ****  */
 271:quantum/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 518               		.loc 2 271 29 is_stmt 1 view -0
 519               		.cfi_startproc
 520               	/* prologue: function */
 521               	/* frame size = 0 */
 522               	/* stack size = 0 */
 523               	.L__stack_usage = 0
 524               		.loc 2 271 31 view .LVU100
 525               		.loc 2 271 41 is_stmt 0 view .LVU101
 526 0000 8093 0000 		sts real_mods,r24
 527               	/* epilogue start */
 528               		.loc 2 271 1 view .LVU102
 529 0004 0895      		ret
 530               		.cfi_endproc
 531               	.LFE34:
 533               		.section	.text.clear_mods,"ax",@progbits
 534               	.global	clear_mods
 536               	clear_mods:
 537               	.LFB35:
 272:quantum/action_util.c **** /** \brief clear mods
 273:quantum/action_util.c ****  *
 274:quantum/action_util.c ****  * FIXME: needs doc
 275:quantum/action_util.c ****  */
 276:quantum/action_util.c **** void clear_mods(void) { real_mods = 0; }
 538               		.loc 2 276 23 is_stmt 1 view -0
 539               		.cfi_startproc
 540               	/* prologue: function */
 541               	/* frame size = 0 */
 542               	/* stack size = 0 */
 543               	.L__stack_usage = 0
 544               		.loc 2 276 25 view .LVU104
 545               		.loc 2 276 35 is_stmt 0 view .LVU105
 546 0000 1092 0000 		sts real_mods,__zero_reg__
 547               	/* epilogue start */
 548               		.loc 2 276 1 view .LVU106
 549 0004 0895      		ret
 550               		.cfi_endproc
 551               	.LFE35:
 553               		.section	.text.get_weak_mods,"ax",@progbits
 554               	.global	get_weak_mods
 556               	get_weak_mods:
 557               	.LFB36:
 277:quantum/action_util.c **** 
 278:quantum/action_util.c **** /** \brief get weak mods
 279:quantum/action_util.c ****  *
 280:quantum/action_util.c ****  * FIXME: needs doc
 281:quantum/action_util.c ****  */
 282:quantum/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 558               		.loc 2 282 29 is_stmt 1 view -0
 559               		.cfi_startproc
 560               	/* prologue: function */
 561               	/* frame size = 0 */
 562               	/* stack size = 0 */
 563               	.L__stack_usage = 0
 564               		.loc 2 282 31 view .LVU108
 565               		.loc 2 282 1 is_stmt 0 view .LVU109
 566 0000 8091 0000 		lds r24,weak_mods
 567               	/* epilogue start */
 568 0004 0895      		ret
 569               		.cfi_endproc
 570               	.LFE36:
 572               		.section	.text.add_weak_mods,"ax",@progbits
 573               	.global	add_weak_mods
 575               	add_weak_mods:
 576               	.LVL20:
 577               	.LFB37:
 283:quantum/action_util.c **** /** \brief add weak mods
 284:quantum/action_util.c ****  *
 285:quantum/action_util.c ****  * FIXME: needs doc
 286:quantum/action_util.c ****  */
 287:quantum/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 578               		.loc 2 287 34 is_stmt 1 view -0
 579               		.cfi_startproc
 580               	/* prologue: function */
 581               	/* frame size = 0 */
 582               	/* stack size = 0 */
 583               	.L__stack_usage = 0
 584               		.loc 2 287 36 view .LVU111
 585               		.loc 2 287 46 is_stmt 0 view .LVU112
 586 0000 9091 0000 		lds r25,weak_mods
 587 0004 892B      		or r24,r25
 588               	.LVL21:
 589               		.loc 2 287 46 view .LVU113
 590 0006 8093 0000 		sts weak_mods,r24
 591               	/* epilogue start */
 592               		.loc 2 287 1 view .LVU114
 593 000a 0895      		ret
 594               		.cfi_endproc
 595               	.LFE37:
 597               		.section	.text.del_weak_mods,"ax",@progbits
 598               	.global	del_weak_mods
 600               	del_weak_mods:
 601               	.LVL22:
 602               	.LFB38:
 288:quantum/action_util.c **** /** \brief del weak mods
 289:quantum/action_util.c ****  *
 290:quantum/action_util.c ****  * FIXME: needs doc
 291:quantum/action_util.c ****  */
 292:quantum/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 603               		.loc 2 292 34 is_stmt 1 view -0
 604               		.cfi_startproc
 605               	/* prologue: function */
 606               	/* frame size = 0 */
 607               	/* stack size = 0 */
 608               	.L__stack_usage = 0
 609               		.loc 2 292 36 view .LVU116
 610               		.loc 2 292 46 is_stmt 0 view .LVU117
 611 0000 8095      		com r24
 612               	.LVL23:
 613               		.loc 2 292 46 view .LVU118
 614 0002 9091 0000 		lds r25,weak_mods
 615 0006 9823      		and r25,r24
 616 0008 9093 0000 		sts weak_mods,r25
 617               	/* epilogue start */
 618               		.loc 2 292 1 view .LVU119
 619 000c 0895      		ret
 620               		.cfi_endproc
 621               	.LFE38:
 623               		.section	.text.set_weak_mods,"ax",@progbits
 624               	.global	set_weak_mods
 626               	set_weak_mods:
 627               	.LVL24:
 628               	.LFB39:
 293:quantum/action_util.c **** /** \brief set weak mods
 294:quantum/action_util.c ****  *
 295:quantum/action_util.c ****  * FIXME: needs doc
 296:quantum/action_util.c ****  */
 297:quantum/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 629               		.loc 2 297 34 is_stmt 1 view -0
 630               		.cfi_startproc
 631               	/* prologue: function */
 632               	/* frame size = 0 */
 633               	/* stack size = 0 */
 634               	.L__stack_usage = 0
 635               		.loc 2 297 36 view .LVU121
 636               		.loc 2 297 46 is_stmt 0 view .LVU122
 637 0000 8093 0000 		sts weak_mods,r24
 638               	/* epilogue start */
 639               		.loc 2 297 1 view .LVU123
 640 0004 0895      		ret
 641               		.cfi_endproc
 642               	.LFE39:
 644               		.section	.text.clear_weak_mods,"ax",@progbits
 645               	.global	clear_weak_mods
 647               	clear_weak_mods:
 648               	.LFB40:
 298:quantum/action_util.c **** /** \brief clear weak mods
 299:quantum/action_util.c ****  *
 300:quantum/action_util.c ****  * FIXME: needs doc
 301:quantum/action_util.c ****  */
 302:quantum/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 649               		.loc 2 302 28 is_stmt 1 view -0
 650               		.cfi_startproc
 651               	/* prologue: function */
 652               	/* frame size = 0 */
 653               	/* stack size = 0 */
 654               	.L__stack_usage = 0
 655               		.loc 2 302 30 view .LVU125
 656               		.loc 2 302 40 is_stmt 0 view .LVU126
 657 0000 1092 0000 		sts weak_mods,__zero_reg__
 658               	/* epilogue start */
 659               		.loc 2 302 1 view .LVU127
 660 0004 0895      		ret
 661               		.cfi_endproc
 662               	.LFE40:
 664               		.section	.text.get_macro_mods,"ax",@progbits
 665               	.global	get_macro_mods
 667               	get_macro_mods:
 668               	.LFB41:
 303:quantum/action_util.c **** 
 304:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 305:quantum/action_util.c **** /** \brief set weak mods used by key overrides. DO not call this manually
 306:quantum/action_util.c ****  */
 307:quantum/action_util.c **** void set_weak_override_mods(uint8_t mods) { weak_override_mods = mods; }
 308:quantum/action_util.c **** /** \brief clear weak mods used by key overrides. DO not call this manually
 309:quantum/action_util.c ****  */
 310:quantum/action_util.c **** void clear_weak_override_mods(void) { weak_override_mods = 0; }
 311:quantum/action_util.c **** 
 312:quantum/action_util.c **** /** \brief set suppressed mods used by key overrides. DO not call this manually
 313:quantum/action_util.c ****  */
 314:quantum/action_util.c **** void set_suppressed_override_mods(uint8_t mods) { suppressed_mods = mods; }
 315:quantum/action_util.c **** /** \brief clear suppressed mods used by key overrides. DO not call this manually
 316:quantum/action_util.c ****  */
 317:quantum/action_util.c **** void clear_suppressed_override_mods(void) { suppressed_mods = 0; }
 318:quantum/action_util.c **** #endif
 319:quantum/action_util.c **** 
 320:quantum/action_util.c **** /* macro modifier */
 321:quantum/action_util.c **** /** \brief get macro mods
 322:quantum/action_util.c ****  *
 323:quantum/action_util.c ****  * FIXME: needs doc
 324:quantum/action_util.c ****  */
 325:quantum/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 669               		.loc 2 325 30 is_stmt 1 view -0
 670               		.cfi_startproc
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 0 */
 674               	.L__stack_usage = 0
 675               		.loc 2 325 32 view .LVU129
 676               		.loc 2 325 1 is_stmt 0 view .LVU130
 677 0000 8091 0000 		lds r24,macro_mods
 678               	/* epilogue start */
 679 0004 0895      		ret
 680               		.cfi_endproc
 681               	.LFE41:
 683               		.section	.text.add_macro_mods,"ax",@progbits
 684               	.global	add_macro_mods
 686               	add_macro_mods:
 687               	.LVL25:
 688               	.LFB42:
 326:quantum/action_util.c **** /** \brief add macro mods
 327:quantum/action_util.c ****  *
 328:quantum/action_util.c ****  * FIXME: needs doc
 329:quantum/action_util.c ****  */
 330:quantum/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 689               		.loc 2 330 35 is_stmt 1 view -0
 690               		.cfi_startproc
 691               	/* prologue: function */
 692               	/* frame size = 0 */
 693               	/* stack size = 0 */
 694               	.L__stack_usage = 0
 695               		.loc 2 330 37 view .LVU132
 696               		.loc 2 330 48 is_stmt 0 view .LVU133
 697 0000 9091 0000 		lds r25,macro_mods
 698 0004 892B      		or r24,r25
 699               	.LVL26:
 700               		.loc 2 330 48 view .LVU134
 701 0006 8093 0000 		sts macro_mods,r24
 702               	/* epilogue start */
 703               		.loc 2 330 1 view .LVU135
 704 000a 0895      		ret
 705               		.cfi_endproc
 706               	.LFE42:
 708               		.section	.text.del_macro_mods,"ax",@progbits
 709               	.global	del_macro_mods
 711               	del_macro_mods:
 712               	.LVL27:
 713               	.LFB43:
 331:quantum/action_util.c **** /** \brief del macro mods
 332:quantum/action_util.c ****  *
 333:quantum/action_util.c ****  * FIXME: needs doc
 334:quantum/action_util.c ****  */
 335:quantum/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 714               		.loc 2 335 35 is_stmt 1 view -0
 715               		.cfi_startproc
 716               	/* prologue: function */
 717               	/* frame size = 0 */
 718               	/* stack size = 0 */
 719               	.L__stack_usage = 0
 720               		.loc 2 335 37 view .LVU137
 721               		.loc 2 335 48 is_stmt 0 view .LVU138
 722 0000 8095      		com r24
 723               	.LVL28:
 724               		.loc 2 335 48 view .LVU139
 725 0002 9091 0000 		lds r25,macro_mods
 726 0006 9823      		and r25,r24
 727 0008 9093 0000 		sts macro_mods,r25
 728               	/* epilogue start */
 729               		.loc 2 335 1 view .LVU140
 730 000c 0895      		ret
 731               		.cfi_endproc
 732               	.LFE43:
 734               		.section	.text.set_macro_mods,"ax",@progbits
 735               	.global	set_macro_mods
 737               	set_macro_mods:
 738               	.LVL29:
 739               	.LFB44:
 336:quantum/action_util.c **** /** \brief set macro mods
 337:quantum/action_util.c ****  *
 338:quantum/action_util.c ****  * FIXME: needs doc
 339:quantum/action_util.c ****  */
 340:quantum/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 740               		.loc 2 340 35 is_stmt 1 view -0
 741               		.cfi_startproc
 742               	/* prologue: function */
 743               	/* frame size = 0 */
 744               	/* stack size = 0 */
 745               	.L__stack_usage = 0
 746               		.loc 2 340 37 view .LVU142
 747               		.loc 2 340 48 is_stmt 0 view .LVU143
 748 0000 8093 0000 		sts macro_mods,r24
 749               	/* epilogue start */
 750               		.loc 2 340 1 view .LVU144
 751 0004 0895      		ret
 752               		.cfi_endproc
 753               	.LFE44:
 755               		.section	.text.clear_macro_mods,"ax",@progbits
 756               	.global	clear_macro_mods
 758               	clear_macro_mods:
 759               	.LFB45:
 341:quantum/action_util.c **** /** \brief clear macro mods
 342:quantum/action_util.c ****  *
 343:quantum/action_util.c ****  * FIXME: needs doc
 344:quantum/action_util.c ****  */
 345:quantum/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 760               		.loc 2 345 29 is_stmt 1 view -0
 761               		.cfi_startproc
 762               	/* prologue: function */
 763               	/* frame size = 0 */
 764               	/* stack size = 0 */
 765               	.L__stack_usage = 0
 766               		.loc 2 345 31 view .LVU146
 767               		.loc 2 345 42 is_stmt 0 view .LVU147
 768 0000 1092 0000 		sts macro_mods,__zero_reg__
 769               	/* epilogue start */
 770               		.loc 2 345 1 view .LVU148
 771 0004 0895      		ret
 772               		.cfi_endproc
 773               	.LFE45:
 775               		.section	.text.get_oneshot_mods,"ax",@progbits
 776               	.global	get_oneshot_mods
 778               	get_oneshot_mods:
 779               	.LFB46:
 346:quantum/action_util.c **** 
 347:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 348:quantum/action_util.c **** /** \brief get oneshot mods
 349:quantum/action_util.c ****  *
 350:quantum/action_util.c ****  * FIXME: needs doc
 351:quantum/action_util.c ****  */
 352:quantum/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 780               		.loc 2 352 32 is_stmt 1 view -0
 781               		.cfi_startproc
 782               	/* prologue: function */
 783               	/* frame size = 0 */
 784               	/* stack size = 0 */
 785               	.L__stack_usage = 0
 786               		.loc 2 352 34 view .LVU150
 787               		.loc 2 352 1 is_stmt 0 view .LVU151
 788 0000 8091 0000 		lds r24,oneshot_mods
 789               	/* epilogue start */
 790 0004 0895      		ret
 791               		.cfi_endproc
 792               	.LFE46:
 794               		.section	.text.oneshot_locked_mods_changed_user,"ax",@progbits
 795               		.weak	oneshot_locked_mods_changed_user
 797               	oneshot_locked_mods_changed_user:
 798               	.LVL30:
 799               	.LFB51:
 353:quantum/action_util.c **** 
 354:quantum/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 355:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 356:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 357:quantum/action_util.c ****         oneshot_time = timer_read();
 358:quantum/action_util.c **** #    endif
 359:quantum/action_util.c ****         oneshot_mods |= mods;
 360:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 361:quantum/action_util.c ****     }
 362:quantum/action_util.c **** }
 363:quantum/action_util.c **** 
 364:quantum/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 365:quantum/action_util.c ****     if (oneshot_mods & mods) {
 366:quantum/action_util.c ****         oneshot_mods &= ~mods;
 367:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 368:quantum/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 369:quantum/action_util.c **** #    endif
 370:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 371:quantum/action_util.c ****     }
 372:quantum/action_util.c **** }
 373:quantum/action_util.c **** 
 374:quantum/action_util.c **** /** \brief set oneshot mods
 375:quantum/action_util.c ****  *
 376:quantum/action_util.c ****  * FIXME: needs doc
 377:quantum/action_util.c ****  */
 378:quantum/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 379:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 380:quantum/action_util.c ****         if (oneshot_mods != mods) {
 381:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 382:quantum/action_util.c ****             oneshot_time = timer_read();
 383:quantum/action_util.c **** #    endif
 384:quantum/action_util.c ****             oneshot_mods = mods;
 385:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 386:quantum/action_util.c ****         }
 387:quantum/action_util.c ****     }
 388:quantum/action_util.c **** }
 389:quantum/action_util.c **** 
 390:quantum/action_util.c **** /** \brief clear oneshot mods
 391:quantum/action_util.c ****  *
 392:quantum/action_util.c ****  * FIXME: needs doc
 393:quantum/action_util.c ****  */
 394:quantum/action_util.c **** void clear_oneshot_mods(void) {
 395:quantum/action_util.c ****     if (oneshot_mods) {
 396:quantum/action_util.c ****         oneshot_mods = 0;
 397:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 398:quantum/action_util.c ****         oneshot_time = 0;
 399:quantum/action_util.c **** #    endif
 400:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 401:quantum/action_util.c ****     }
 402:quantum/action_util.c **** }
 403:quantum/action_util.c **** #endif
 404:quantum/action_util.c **** 
 405:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 406:quantum/action_util.c ****  *
 407:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 408:quantum/action_util.c ****  */
 409:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 800               		.loc 2 409 75 is_stmt 1 view -0
 801               		.cfi_startproc
 802               	/* prologue: function */
 803               	/* frame size = 0 */
 804               	/* stack size = 0 */
 805               	.L__stack_usage = 0
 806               		.loc 2 409 76 view .LVU153
 807               	/* epilogue start */
 808               		.loc 2 409 1 is_stmt 0 view .LVU154
 809 0000 0895      		ret
 810               		.cfi_endproc
 811               	.LFE51:
 813               		.set	oneshot_locked_mods_changed_user.localalias.0,oneshot_locked_mods_changed_user
 814               		.section	.text.oneshot_locked_mods_changed_kb,"ax",@progbits
 815               		.weak	oneshot_locked_mods_changed_kb
 817               	oneshot_locked_mods_changed_kb:
 818               	.LVL31:
 819               	.LFB52:
 410:quantum/action_util.c **** 
 411:quantum/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 412:quantum/action_util.c ****  *
 413:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 414:quantum/action_util.c ****  */
 415:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 820               		.loc 2 415 73 is_stmt 1 view -0
 821               		.cfi_startproc
 822               	/* prologue: function */
 823               	/* frame size = 0 */
 824               	/* stack size = 0 */
 825               	.L__stack_usage = 0
 826               		.loc 2 415 75 view .LVU156
 827 0000 0C94 0000 		jmp oneshot_locked_mods_changed_user
 828               	.LVL32:
 829               		.loc 2 415 75 is_stmt 0 view .LVU157
 830               		.cfi_endproc
 831               	.LFE52:
 833               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
 834               	.global	set_oneshot_locked_mods
 836               	set_oneshot_locked_mods:
 837               	.LVL33:
 838               	.LFB12:
  47:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 839               		.loc 2 47 54 is_stmt 1 view -0
 840               		.cfi_startproc
 841               	/* prologue: function */
 842               	/* frame size = 0 */
 843               	/* stack size = 0 */
 844               	.L__stack_usage = 0
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 845               		.loc 2 48 5 view .LVU159
  48:quantum/action_util.c ****         oneshot_locked_mods = mods;
 846               		.loc 2 48 8 is_stmt 0 view .LVU160
 847 0000 9091 0000 		lds r25,oneshot_locked_mods
 848 0004 9817      		cp r25,r24
 849 0006 01F0      		breq .L42
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 850               		.loc 2 49 9 is_stmt 1 view .LVU161
  49:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 851               		.loc 2 49 29 is_stmt 0 view .LVU162
 852 0008 8093 0000 		sts oneshot_locked_mods,r24
  50:quantum/action_util.c ****     }
 853               		.loc 2 50 9 is_stmt 1 view .LVU163
 854 000c 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 855               	.LVL34:
 856               	.L42:
 857               	/* epilogue start */
  52:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
 858               		.loc 2 52 1 is_stmt 0 view .LVU164
 859 0010 0895      		ret
 860               		.cfi_endproc
 861               	.LFE12:
 863               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
 864               	.global	clear_oneshot_locked_mods
 866               	clear_oneshot_locked_mods:
 867               	.LFB13:
  53:quantum/action_util.c ****     if (oneshot_locked_mods) {
 868               		.loc 2 53 38 is_stmt 1 view -0
 869               		.cfi_startproc
 870               	/* prologue: function */
 871               	/* frame size = 0 */
 872               	/* stack size = 0 */
 873               	.L__stack_usage = 0
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 874               		.loc 2 54 5 view .LVU166
  54:quantum/action_util.c ****         oneshot_locked_mods = 0;
 875               		.loc 2 54 8 is_stmt 0 view .LVU167
 876 0000 8091 0000 		lds r24,oneshot_locked_mods
 877 0004 8823      		tst r24
 878 0006 01F0      		breq .L44
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 879               		.loc 2 55 9 is_stmt 1 view .LVU168
  55:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 880               		.loc 2 55 29 is_stmt 0 view .LVU169
 881 0008 1092 0000 		sts oneshot_locked_mods,__zero_reg__
  56:quantum/action_util.c ****     }
 882               		.loc 2 56 9 is_stmt 1 view .LVU170
 883 000c 80E0      		ldi r24,0
 884 000e 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 885               	.LVL35:
 886               	.L44:
 887               	/* epilogue start */
  58:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 888               		.loc 2 58 1 is_stmt 0 view .LVU171
 889 0012 0895      		ret
 890               		.cfi_endproc
 891               	.LFE13:
 893               		.section	.text.oneshot_mods_changed_user,"ax",@progbits
 894               		.weak	oneshot_mods_changed_user
 896               	oneshot_mods_changed_user:
 897               	.LFB59:
 898               		.cfi_startproc
 899               	/* prologue: function */
 900               	/* frame size = 0 */
 901               	/* stack size = 0 */
 902               	.L__stack_usage = 0
 903               	/* epilogue start */
 904 0000 0895      		ret
 905               		.cfi_endproc
 906               	.LFE59:
 908               		.section	.text.oneshot_mods_changed_kb,"ax",@progbits
 909               		.weak	oneshot_mods_changed_kb
 911               	oneshot_mods_changed_kb:
 912               	.LVL36:
 913               	.LFB54:
 416:quantum/action_util.c **** 
 417:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 418:quantum/action_util.c ****  *
 419:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 420:quantum/action_util.c ****  */
 421:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 422:quantum/action_util.c **** 
 423:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 424:quantum/action_util.c ****  *
 425:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 426:quantum/action_util.c ****  */
 427:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 914               		.loc 2 427 66 is_stmt 1 view -0
 915               		.cfi_startproc
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 918               	/* stack size = 0 */
 919               	.L__stack_usage = 0
 920               		.loc 2 427 68 view .LVU173
 921 0000 0C94 0000 		jmp oneshot_mods_changed_user
 922               	.LVL37:
 923               		.loc 2 427 68 is_stmt 0 view .LVU174
 924               		.cfi_endproc
 925               	.LFE54:
 927               		.section	.text.add_oneshot_mods,"ax",@progbits
 928               	.global	add_oneshot_mods
 930               	add_oneshot_mods:
 931               	.LVL38:
 932               	.LFB47:
 354:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 933               		.loc 2 354 37 is_stmt 1 view -0
 934               		.cfi_startproc
 935               	/* prologue: function */
 936               	/* frame size = 0 */
 937               	/* stack size = 0 */
 938               	.L__stack_usage = 0
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 939               		.loc 2 355 5 view .LVU176
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 940               		.loc 2 355 31 is_stmt 0 view .LVU177
 941 0000 9091 0000 		lds r25,oneshot_mods
 942 0004 292F      		mov r18,r25
 943 0006 2823      		and r18,r24
 355:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 944               		.loc 2 355 8 view .LVU178
 945 0008 2817      		cp r18,r24
 946 000a 01F0      		breq .L48
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 947               		.loc 2 359 9 is_stmt 1 view .LVU179
 359:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 948               		.loc 2 359 22 is_stmt 0 view .LVU180
 949 000c 982B      		or r25,r24
 950 000e 9093 0000 		sts oneshot_mods,r25
 360:quantum/action_util.c ****     }
 951               		.loc 2 360 9 is_stmt 1 view .LVU181
 952 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 953               	.LVL39:
 954               	.L48:
 955               	/* epilogue start */
 362:quantum/action_util.c **** 
 956               		.loc 2 362 1 is_stmt 0 view .LVU182
 957 0016 0895      		ret
 958               		.cfi_endproc
 959               	.LFE47:
 961               		.section	.text.del_oneshot_mods,"ax",@progbits
 962               	.global	del_oneshot_mods
 964               	del_oneshot_mods:
 965               	.LVL40:
 966               	.LFB48:
 364:quantum/action_util.c ****     if (oneshot_mods & mods) {
 967               		.loc 2 364 37 is_stmt 1 view -0
 968               		.cfi_startproc
 969               	/* prologue: function */
 970               	/* frame size = 0 */
 971               	/* stack size = 0 */
 972               	.L__stack_usage = 0
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 973               		.loc 2 365 5 view .LVU184
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 974               		.loc 2 365 9 is_stmt 0 view .LVU185
 975 0000 9091 0000 		lds r25,oneshot_mods
 976 0004 292F      		mov r18,r25
 977 0006 2823      		and r18,r24
 365:quantum/action_util.c ****         oneshot_mods &= ~mods;
 978               		.loc 2 365 8 view .LVU186
 979 0008 01F0      		breq .L50
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 980               		.loc 2 366 9 is_stmt 1 view .LVU187
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 981               		.loc 2 366 22 is_stmt 0 view .LVU188
 982 000a 8095      		com r24
 983               	.LVL41:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 984               		.loc 2 366 22 view .LVU189
 985 000c 8923      		and r24,r25
 986               	.LVL42:
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 987               		.loc 2 366 22 view .LVU190
 988 000e 8093 0000 		sts oneshot_mods,r24
 370:quantum/action_util.c ****     }
 989               		.loc 2 370 9 is_stmt 1 view .LVU191
 990 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 991               	.LVL43:
 992               	.L50:
 993               	/* epilogue start */
 372:quantum/action_util.c **** 
 994               		.loc 2 372 1 is_stmt 0 view .LVU192
 995 0016 0895      		ret
 996               		.cfi_endproc
 997               	.LFE48:
 999               		.section	.text.set_oneshot_mods,"ax",@progbits
 1000               	.global	set_oneshot_mods
 1002               	set_oneshot_mods:
 1003               	.LVL44:
 1004               	.LFB49:
 378:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1005               		.loc 2 378 37 is_stmt 1 view -0
 1006               		.cfi_startproc
 1007               	/* prologue: function */
 1008               	/* frame size = 0 */
 1009               	/* stack size = 0 */
 1010               	.L__stack_usage = 0
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1011               		.loc 2 379 5 view .LVU194
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1012               		.loc 2 379 23 is_stmt 0 view .LVU195
 1013 0000 9091 0000 		lds r25,keymap_config+1
 379:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1014               		.loc 2 379 8 view .LVU196
 1015 0004 92FD      		sbrc r25,2
 1016 0006 00C0      		rjmp .L52
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1017               		.loc 2 380 9 is_stmt 1 view .LVU197
 380:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1018               		.loc 2 380 12 is_stmt 0 view .LVU198
 1019 0008 9091 0000 		lds r25,oneshot_mods
 1020 000c 9817      		cp r25,r24
 1021 000e 01F0      		breq .L52
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1022               		.loc 2 384 13 is_stmt 1 view .LVU199
 384:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1023               		.loc 2 384 26 is_stmt 0 view .LVU200
 1024 0010 8093 0000 		sts oneshot_mods,r24
 385:quantum/action_util.c ****         }
 1025               		.loc 2 385 13 is_stmt 1 view .LVU201
 1026 0014 0C94 0000 		jmp oneshot_mods_changed_kb
 1027               	.LVL45:
 1028               	.L52:
 1029               	/* epilogue start */
 388:quantum/action_util.c **** 
 1030               		.loc 2 388 1 is_stmt 0 view .LVU202
 1031 0018 0895      		ret
 1032               		.cfi_endproc
 1033               	.LFE49:
 1035               		.section	.text.clear_oneshot_mods,"ax",@progbits
 1036               	.global	clear_oneshot_mods
 1038               	clear_oneshot_mods:
 1039               	.LFB50:
 394:quantum/action_util.c ****     if (oneshot_mods) {
 1040               		.loc 2 394 31 is_stmt 1 view -0
 1041               		.cfi_startproc
 1042               	/* prologue: function */
 1043               	/* frame size = 0 */
 1044               	/* stack size = 0 */
 1045               	.L__stack_usage = 0
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1046               		.loc 2 395 5 view .LVU204
 395:quantum/action_util.c ****         oneshot_mods = 0;
 1047               		.loc 2 395 8 is_stmt 0 view .LVU205
 1048 0000 8091 0000 		lds r24,oneshot_mods
 1049 0004 8823      		tst r24
 1050 0006 01F0      		breq .L54
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1051               		.loc 2 396 9 is_stmt 1 view .LVU206
 396:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1052               		.loc 2 396 22 is_stmt 0 view .LVU207
 1053 0008 1092 0000 		sts oneshot_mods,__zero_reg__
 400:quantum/action_util.c ****     }
 1054               		.loc 2 400 9 is_stmt 1 view .LVU208
 1055 000c 80E0      		ldi r24,0
 1056 000e 0C94 0000 		jmp oneshot_mods_changed_kb
 1057               	.LVL46:
 1058               	.L54:
 1059               	/* epilogue start */
 402:quantum/action_util.c **** #endif
 1060               		.loc 2 402 1 is_stmt 0 view .LVU209
 1061 0012 0895      		ret
 1062               		.cfi_endproc
 1063               	.LFE50:
 1065               		.section	.text.send_keyboard_report,"ax",@progbits
 1066               	.global	send_keyboard_report
 1068               	send_keyboard_report:
 1069               	.LFB30:
 222:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1070               		.loc 2 222 33 is_stmt 1 view -0
 1071               		.cfi_startproc
 1072               	/* prologue: function */
 1073               	/* frame size = 0 */
 1074               	/* stack size = 0 */
 1075               	.L__stack_usage = 0
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1076               		.loc 2 223 5 view .LVU211
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1077               		.loc 2 223 20 is_stmt 0 view .LVU212
 1078 0000 E091 0000 		lds r30,keyboard_report
 1079 0004 F091 0000 		lds r31,keyboard_report+1
 223:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1080               		.loc 2 223 27 view .LVU213
 1081 0008 8091 0000 		lds r24,real_mods
 1082 000c 8083      		st Z,r24
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1083               		.loc 2 224 5 is_stmt 1 view .LVU214
 224:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1084               		.loc 2 224 27 is_stmt 0 view .LVU215
 1085 000e E091 0000 		lds r30,keyboard_report
 1086 0012 F091 0000 		lds r31,keyboard_report+1
 1087 0016 8081      		ld r24,Z
 1088 0018 9091 0000 		lds r25,weak_mods
 1089 001c 892B      		or r24,r25
 1090 001e 8083      		st Z,r24
 225:quantum/action_util.c **** 
 1091               		.loc 2 225 5 is_stmt 1 view .LVU216
 225:quantum/action_util.c **** 
 1092               		.loc 2 225 27 is_stmt 0 view .LVU217
 1093 0020 E091 0000 		lds r30,keyboard_report
 1094 0024 F091 0000 		lds r31,keyboard_report+1
 1095 0028 8081      		ld r24,Z
 1096 002a 9091 0000 		lds r25,macro_mods
 1097 002e 892B      		or r24,r25
 1098 0030 8083      		st Z,r24
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1099               		.loc 2 228 5 is_stmt 1 view .LVU218
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1100               		.loc 2 228 9 is_stmt 0 view .LVU219
 1101 0032 9091 0000 		lds r25,oneshot_mods
 228:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1102               		.loc 2 228 8 view .LVU220
 1103 0036 9923      		tst r25
 1104 0038 01F0      		breq .L58
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1105               		.loc 2 235 9 is_stmt 1 view .LVU221
 235:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1106               		.loc 2 235 31 is_stmt 0 view .LVU222
 1107 003a E091 0000 		lds r30,keyboard_report
 1108 003e F091 0000 		lds r31,keyboard_report+1
 1109 0042 8081      		ld r24,Z
 1110 0044 892B      		or r24,r25
 1111 0046 8083      		st Z,r24
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1112               		.loc 2 236 9 is_stmt 1 view .LVU223
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1113               		.loc 2 236 13 is_stmt 0 view .LVU224
 1114 0048 8091 0000 		lds r24,keyboard_report
 1115 004c 9091 0000 		lds r25,keyboard_report+1
 1116 0050 0E94 0000 		call has_anykey
 1117               	.LVL47:
 236:quantum/action_util.c ****             clear_oneshot_mods();
 1118               		.loc 2 236 12 view .LVU225
 1119 0054 8111      		cpse r24,__zero_reg__
 237:quantum/action_util.c ****         }
 1120               		.loc 2 237 13 is_stmt 1 view .LVU226
 1121 0056 0E94 0000 		call clear_oneshot_mods
 1122               	.LVL48:
 1123               	.L58:
 249:quantum/action_util.c **** }
 1124               		.loc 2 249 5 view .LVU227
 1125 005a 8091 0000 		lds r24,keyboard_report
 1126 005e 9091 0000 		lds r25,keyboard_report+1
 1127 0062 0C94 0000 		jmp host_keyboard_send
 1128               	.LVL49:
 1129               		.cfi_endproc
 1130               	.LFE30:
 1132               		.section	.text.oneshot_layer_changed_user,"ax",@progbits
 1133               		.weak	oneshot_layer_changed_user
 1135               	oneshot_layer_changed_user:
 1136               	.LFB61:
 1137               		.cfi_startproc
 1138               	/* prologue: function */
 1139               	/* frame size = 0 */
 1140               	/* stack size = 0 */
 1141               	.L__stack_usage = 0
 1142               	/* epilogue start */
 1143 0000 0895      		ret
 1144               		.cfi_endproc
 1145               	.LFE61:
 1147               		.section	.text.oneshot_layer_changed_kb,"ax",@progbits
 1148               		.weak	oneshot_layer_changed_kb
 1150               	oneshot_layer_changed_kb:
 1151               	.LVL50:
 1152               	.LFB56:
 428:quantum/action_util.c **** 
 429:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 430:quantum/action_util.c ****  *
 431:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 432:quantum/action_util.c ****  */
 433:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 434:quantum/action_util.c **** 
 435:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 436:quantum/action_util.c ****  *
 437:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 438:quantum/action_util.c ****  */
 439:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1153               		.loc 2 439 68 view -0
 1154               		.cfi_startproc
 1155               	/* prologue: function */
 1156               	/* frame size = 0 */
 1157               	/* stack size = 0 */
 1158               	.L__stack_usage = 0
 1159               		.loc 2 439 70 view .LVU229
 1160 0000 0C94 0000 		jmp oneshot_layer_changed_user
 1161               	.LVL51:
 1162               		.loc 2 439 70 is_stmt 0 view .LVU230
 1163               		.cfi_endproc
 1164               	.LFE56:
 1166               		.section	.text.set_oneshot_layer,"ax",@progbits
 1167               	.global	set_oneshot_layer
 1169               	set_oneshot_layer:
 1170               	.LVL52:
 1171               	.LFB21:
 143:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1172               		.loc 2 143 54 is_stmt 1 view -0
 1173               		.cfi_startproc
 1174               	/* prologue: function */
 1175               	/* frame size = 0 */
 1176               	/* stack size = 0 */
 1177               	.L__stack_usage = 0
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1178               		.loc 2 144 5 view .LVU232
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1179               		.loc 2 144 23 is_stmt 0 view .LVU233
 1180 0000 9091 0000 		lds r25,keymap_config+1
 144:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1181               		.loc 2 144 8 view .LVU234
 1182 0004 92FD      		sbrc r25,2
 1183 0006 00C0      		rjmp .L66
 145:quantum/action_util.c ****         layer_on(layer);
 1184               		.loc 2 145 9 is_stmt 1 view .LVU235
 145:quantum/action_util.c ****         layer_on(layer);
 1185               		.loc 2 145 36 is_stmt 0 view .LVU236
 1186 0008 98E0      		ldi r25,lo8(8)
 1187 000a 899F      		mul r24,r25
 1188 000c 9001      		movw r18,r0
 1189 000e 1124      		clr __zero_reg__
 145:quantum/action_util.c ****         layer_on(layer);
 1190               		.loc 2 145 41 view .LVU237
 1191 0010 622B      		or r22,r18
 1192               	.LVL53:
 145:quantum/action_util.c ****         layer_on(layer);
 1193               		.loc 2 145 28 view .LVU238
 1194 0012 6093 0000 		sts oneshot_layer_data,r22
 146:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1195               		.loc 2 146 9 is_stmt 1 view .LVU239
 1196 0016 0E94 0000 		call layer_on
 1197               	.LVL54:
 150:quantum/action_util.c ****     } else {
 1198               		.loc 2 150 9 view .LVU240
 1199               	.LBB14:
 1200               	.LBI14:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1201               		.loc 2 77 16 view .LVU241
 1202               	.LBB15:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1203               		.loc 2 77 42 view .LVU242
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1204               		.loc 2 77 68 is_stmt 0 view .LVU243
 1205 001a 8091 0000 		lds r24,oneshot_layer_data
 1206               	.LBE15:
 1207               	.LBE14:
 150:quantum/action_util.c ****     } else {
 1208               		.loc 2 150 9 view .LVU244
 1209 001e 8595      		asr r24
 1210 0020 8595      		asr r24
 1211 0022 8595      		asr r24
 1212 0024 0C94 0000 		jmp oneshot_layer_changed_kb
 1213               	.LVL55:
 1214               	.L66:
 152:quantum/action_util.c ****     }
 1215               		.loc 2 152 9 is_stmt 1 view .LVU245
 1216 0028 0C94 0000 		jmp layer_on
 1217               	.LVL56:
 152:quantum/action_util.c ****     }
 1218               		.loc 2 152 9 is_stmt 0 view .LVU246
 1219               		.cfi_endproc
 1220               	.LFE21:
 1222               		.section	.text.reset_oneshot_layer,"ax",@progbits
 1223               	.global	reset_oneshot_layer
 1225               	reset_oneshot_layer:
 1226               	.LFB22:
 159:quantum/action_util.c ****     oneshot_layer_data = 0;
 1227               		.loc 2 159 32 is_stmt 1 view -0
 1228               		.cfi_startproc
 1229               	/* prologue: function */
 1230               	/* frame size = 0 */
 1231               	/* stack size = 0 */
 1232               	.L__stack_usage = 0
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1233               		.loc 2 160 5 view .LVU248
 160:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1234               		.loc 2 160 24 is_stmt 0 view .LVU249
 1235 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 164:quantum/action_util.c **** }
 1236               		.loc 2 164 5 is_stmt 1 view .LVU250
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1237               		.loc 2 77 42 view .LVU251
 164:quantum/action_util.c **** }
 1238               		.loc 2 164 5 is_stmt 0 view .LVU252
 1239 0004 80E0      		ldi r24,0
 1240 0006 0C94 0000 		jmp oneshot_layer_changed_kb
 1241               	.LVL57:
 1242               		.cfi_endproc
 1243               	.LFE22:
 1245               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 1246               	.global	clear_oneshot_layer_state
 1248               	clear_oneshot_layer_state:
 1249               	.LVL58:
 1250               	.LFB23:
 170:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1251               		.loc 2 170 62 is_stmt 1 view -0
 1252               		.cfi_startproc
 1253               	/* prologue: function */
 1254               	/* frame size = 0 */
 1255               	/* stack size = 0 */
 1256               	.L__stack_usage = 0
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1257               		.loc 2 171 5 view .LVU254
 171:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1258               		.loc 2 171 13 is_stmt 0 view .LVU255
 1259 0000 9091 0000 		lds r25,oneshot_layer_data
 1260               	.LVL59:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1261               		.loc 2 172 5 is_stmt 1 view .LVU256
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1262               		.loc 2 172 24 is_stmt 0 view .LVU257
 1263 0004 8095      		com r24
 1264               	.LVL60:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1265               		.loc 2 172 24 view .LVU258
 1266 0006 8923      		and r24,r25
 1267               	.LVL61:
 172:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1268               		.loc 2 172 24 view .LVU259
 1269 0008 8093 0000 		sts oneshot_layer_data,r24
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1270               		.loc 2 173 5 is_stmt 1 view .LVU260
 1271               	.LBB16:
 1272               	.LBI16:
  78:quantum/action_util.c **** 
 1273               		.loc 2 78 16 view .LVU261
 1274               	.LBB17:
  78:quantum/action_util.c **** 
 1275               		.loc 2 78 48 view .LVU262
  78:quantum/action_util.c **** 
 1276               		.loc 2 78 74 is_stmt 0 view .LVU263
 1277 000c 282F      		mov r18,r24
 1278 000e 2770      		andi r18,lo8(7)
 1279               	.LBE17:
 1280               	.LBE16:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1281               		.loc 2 173 8 view .LVU264
 1282 0010 01F4      		brne .L69
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1283               		.loc 2 173 52 discriminator 1 view .LVU265
 1284 0012 282F      		mov r18,r24
 1285 0014 082E      		mov __tmp_reg__,r24
 1286 0016 000C      		lsl r0
 1287 0018 330B      		sbc r19,r19
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1288               		.loc 2 173 37 discriminator 1 view .LVU266
 1289 001a 9217      		cp r25,r18
 1290 001c 1306      		cpc __zero_reg__,r19
 1291 001e 01F4      		brne .L70
 1292               	.L69:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1293               		.loc 2 173 75 discriminator 3 view .LVU267
 1294 0020 9091 0000 		lds r25,keymap_config+1
 1295               	.LVL62:
 173:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1296               		.loc 2 173 75 discriminator 3 view .LVU268
 1297 0024 92FF      		sbrs r25,2
 1298 0026 00C0      		rjmp .L68
 1299               	.L70:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1300               		.loc 2 174 9 is_stmt 1 view .LVU269
 1301               	.LBB18:
 1302               	.LBI18:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1303               		.loc 2 77 16 view .LVU270
 1304               	.LBB19:
  77:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1305               		.loc 2 77 42 view .LVU271
 1306               	.LBE19:
 1307               	.LBE18:
 174:quantum/action_util.c ****         reset_oneshot_layer();
 1308               		.loc 2 174 9 is_stmt 0 view .LVU272
 1309 0028 8595      		asr r24
 1310 002a 8595      		asr r24
 1311 002c 8595      		asr r24
 1312 002e 0E94 0000 		call layer_off
 1313               	.LVL63:
 175:quantum/action_util.c ****     }
 1314               		.loc 2 175 9 is_stmt 1 view .LVU273
 1315 0032 0C94 0000 		jmp reset_oneshot_layer
 1316               	.LVL64:
 1317               	.L68:
 1318               	/* epilogue start */
 177:quantum/action_util.c **** /** \brief Is oneshot layer active
 1319               		.loc 2 177 1 is_stmt 0 view .LVU274
 1320 0036 0895      		ret
 1321               		.cfi_endproc
 1322               	.LFE23:
 1324               		.section	.text.has_anymod,"ax",@progbits
 1325               	.global	has_anymod
 1327               	has_anymod:
 1328               	.LFB57:
 440:quantum/action_util.c **** 
 441:quantum/action_util.c **** /** \brief inspect keyboard state
 442:quantum/action_util.c ****  *
 443:quantum/action_util.c ****  * FIXME: needs doc
 444:quantum/action_util.c ****  */
 445:quantum/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1329               		.loc 2 445 26 is_stmt 1 view -0
 1330               		.cfi_startproc
 1331               	/* prologue: function */
 1332               	/* frame size = 0 */
 1333               	/* stack size = 0 */
 1334               	.L__stack_usage = 0
 1335               		.loc 2 445 28 view .LVU276
 1336               		.loc 2 445 35 is_stmt 0 view .LVU277
 1337 0000 8091 0000 		lds r24,real_mods
 1338 0004 0C94 0000 		jmp bitpop
 1339               	.LVL65:
 1340               		.cfi_endproc
 1341               	.LFE57:
 1343               	.global	swap_hands_oneshot
 1344               		.section	.bss.swap_hands_oneshot,"aw",@nobits
 1347               	swap_hands_oneshot:
 1348 0000 00        		.zero	1
 1349               		.section	.bss.oneshot_layer_data,"aw",@nobits
 1352               	oneshot_layer_data:
 1353 0000 00        		.zero	1
 1354               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 1357               	oneshot_locked_mods:
 1358 0000 00        		.zero	1
 1359               		.section	.bss.oneshot_mods,"aw",@nobits
 1362               	oneshot_mods:
 1363 0000 00        		.zero	1
 1364               	.global	keyboard_report
 1365               		.section	.data.keyboard_report,"aw"
 1368               	keyboard_report:
 1369 0000 0000      		.word	__compound_literal.0
 1370               		.section	.bss.__compound_literal.0,"aw",@nobits
 1373               	__compound_literal.0:
 1374 0000 0000 0000 		.zero	8
 1374      0000 0000 
 1375               		.section	.bss.macro_mods,"aw",@nobits
 1378               	macro_mods:
 1379 0000 00        		.zero	1
 1380               		.section	.bss.weak_mods,"aw",@nobits
 1383               	weak_mods:
 1384 0000 00        		.zero	1
 1385               		.section	.bss.real_mods,"aw",@nobits
 1388               	real_mods:
 1389 0000 00        		.zero	1
 1390               		.text
 1391               	.Letext0:
 1392               		.file 3 "/usr/avr/include/stdint.h"
 1393               		.file 4 "tmk_core/common/report.h"
 1394               		.file 5 "tmk_core/common/host.h"
 1395               		.file 6 "quantum/logging/debug.h"
 1396               		.file 7 "quantum/keyboard.h"
 1397               		.file 8 "quantum/action.h"
 1398               		.file 9 "quantum/action_layer.h"
 1399               		.file 10 "tmk_core/common/timer.h"
 1400               		.file 11 "quantum/keycode_config.h"
 1401               		.file 12 "quantum/bitwise.h"
 1402               		.file 13 "quantum/eeconfig.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccYbAKYb.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYbAKYb.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYbAKYb.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYbAKYb.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYbAKYb.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYbAKYb.s:13     .text.add_key:0000000000000000 add_key
     /tmp/ccYbAKYb.s:1368   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccYbAKYb.s:38     .text.del_key:0000000000000000 del_key
     /tmp/ccYbAKYb.s:62     .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccYbAKYb.s:81     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccYbAKYb.s:1357   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccYbAKYb.s:101    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
     /tmp/ccYbAKYb.s:120    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccYbAKYb.s:1352   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccYbAKYb.s:143    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccYbAKYb.s:164    .text.set_oneshot_swaphands:0000000000000000 set_oneshot_swaphands
     /tmp/ccYbAKYb.s:1347   .bss.swap_hands_oneshot:0000000000000000 swap_hands_oneshot
     /tmp/ccYbAKYb.s:189    .text.clear_oneshot_swaphands:0000000000000000 clear_oneshot_swaphands
     /tmp/ccYbAKYb.s:212    .text.release_oneshot_swaphands:0000000000000000 release_oneshot_swaphands
     /tmp/ccYbAKYb.s:250    .text.use_oneshot_swaphands:0000000000000000 use_oneshot_swaphands
     /tmp/ccYbAKYb.s:288    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccYbAKYb.s:321    .text.oneshot_set:0000000000000000 oneshot_set
     /tmp/ccYbAKYb.s:361    .text.oneshot_toggle:0000000000000000 oneshot_toggle
     /tmp/ccYbAKYb.s:386    .text.oneshot_enable:0000000000000000 oneshot_enable
     /tmp/ccYbAKYb.s:404    .text.oneshot_disable:0000000000000000 oneshot_disable
     /tmp/ccYbAKYb.s:422    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
     /tmp/ccYbAKYb.s:445    .text.get_mods:0000000000000000 get_mods
     /tmp/ccYbAKYb.s:1388   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccYbAKYb.s:464    .text.add_mods:0000000000000000 add_mods
     /tmp/ccYbAKYb.s:489    .text.del_mods:0000000000000000 del_mods
     /tmp/ccYbAKYb.s:515    .text.set_mods:0000000000000000 set_mods
     /tmp/ccYbAKYb.s:536    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccYbAKYb.s:556    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccYbAKYb.s:1383   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccYbAKYb.s:575    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccYbAKYb.s:600    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccYbAKYb.s:626    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccYbAKYb.s:647    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccYbAKYb.s:667    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccYbAKYb.s:1378   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccYbAKYb.s:686    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccYbAKYb.s:711    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccYbAKYb.s:737    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccYbAKYb.s:758    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccYbAKYb.s:778    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccYbAKYb.s:1362   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccYbAKYb.s:797    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
     /tmp/ccYbAKYb.s:797    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user.localalias.0
     /tmp/ccYbAKYb.s:817    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
     /tmp/ccYbAKYb.s:836    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccYbAKYb.s:866    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccYbAKYb.s:896    .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
     /tmp/ccYbAKYb.s:911    .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
     /tmp/ccYbAKYb.s:930    .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
     /tmp/ccYbAKYb.s:964    .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
     /tmp/ccYbAKYb.s:1002   .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccYbAKYb.s:1038   .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccYbAKYb.s:1068   .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccYbAKYb.s:1135   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
     /tmp/ccYbAKYb.s:1150   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
     /tmp/ccYbAKYb.s:1169   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccYbAKYb.s:1225   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccYbAKYb.s:1248   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccYbAKYb.s:1327   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccYbAKYb.s:1373   .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
swap_hands
keymap_config
eeconfig_update_keymap
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
__do_copy_data
__do_clear_bss
