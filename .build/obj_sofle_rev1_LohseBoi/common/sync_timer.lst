   1               		.file	"sync_timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.sync_timer_init,"ax",@progbits
  11               	.global	sync_timer_init
  13               	sync_timer_init:
  14               	.LFB5:
  15               		.file 1 "tmk_core/common/sync_timer.c"
   1:tmk_core/common/sync_timer.c **** /*
   2:tmk_core/common/sync_timer.c **** Copyright (C) 2020 Ryan Caltabiano <https://github.com/XScorpion2>
   3:tmk_core/common/sync_timer.c **** 
   4:tmk_core/common/sync_timer.c **** Permission is hereby granted, free of charge, to any person obtaining a copy of
   5:tmk_core/common/sync_timer.c **** this software and associated documentation files (the "Software"), to deal in
   6:tmk_core/common/sync_timer.c **** the Software without restriction, including without limitation the rights to
   7:tmk_core/common/sync_timer.c **** use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
   8:tmk_core/common/sync_timer.c **** of the Software, and to permit persons to whom the Software is furnished to do
   9:tmk_core/common/sync_timer.c **** so, subject to the following conditions:
  10:tmk_core/common/sync_timer.c **** 
  11:tmk_core/common/sync_timer.c **** The above copyright notice and this permission notice shall be included in all
  12:tmk_core/common/sync_timer.c **** copies or substantial portions of the Software.
  13:tmk_core/common/sync_timer.c **** 
  14:tmk_core/common/sync_timer.c **** If you happen to meet one of the copyright holders in a bar you are obligated
  15:tmk_core/common/sync_timer.c **** to buy them one pint of beer.
  16:tmk_core/common/sync_timer.c **** 
  17:tmk_core/common/sync_timer.c **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:tmk_core/common/sync_timer.c **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:tmk_core/common/sync_timer.c **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:tmk_core/common/sync_timer.c **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:tmk_core/common/sync_timer.c **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:tmk_core/common/sync_timer.c **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:tmk_core/common/sync_timer.c **** SOFTWARE.
  24:tmk_core/common/sync_timer.c **** */
  25:tmk_core/common/sync_timer.c **** 
  26:tmk_core/common/sync_timer.c **** #include "sync_timer.h"
  27:tmk_core/common/sync_timer.c **** #include "keyboard.h"
  28:tmk_core/common/sync_timer.c **** 
  29:tmk_core/common/sync_timer.c **** #if (defined(SPLIT_KEYBOARD) || defined(SERIAL_LINK_ENABLE)) && !defined(DISABLE_SYNC_TIMER)
  30:tmk_core/common/sync_timer.c **** volatile int32_t sync_timer_ms;
  31:tmk_core/common/sync_timer.c **** 
  32:tmk_core/common/sync_timer.c **** void sync_timer_init(void) { sync_timer_ms = 0; }
  16               		.loc 1 32 28 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               		.loc 1 32 30 view .LVU1
  23               		.loc 1 32 44 is_stmt 0 view .LVU2
  24 0000 1092 0000 		sts sync_timer_ms,__zero_reg__
  25 0004 1092 0000 		sts sync_timer_ms+1,__zero_reg__
  26 0008 1092 0000 		sts sync_timer_ms+2,__zero_reg__
  27 000c 1092 0000 		sts sync_timer_ms+3,__zero_reg__
  28               	/* epilogue start */
  29               		.loc 1 32 1 view .LVU3
  30 0010 0895      		ret
  31               		.cfi_endproc
  32               	.LFE5:
  34               		.section	.text.sync_timer_update,"ax",@progbits
  35               	.global	sync_timer_update
  37               	sync_timer_update:
  38               	.LVL0:
  39               	.LFB6:
  33:tmk_core/common/sync_timer.c **** 
  34:tmk_core/common/sync_timer.c **** void sync_timer_update(uint32_t time) {
  40               		.loc 1 34 39 is_stmt 1 view -0
  41               		.cfi_startproc
  42               		.loc 1 34 39 is_stmt 0 view .LVU5
  43 0000 CF92      		push r12
  44               	.LCFI0:
  45               		.cfi_def_cfa_offset 3
  46               		.cfi_offset 12, -2
  47 0002 DF92      		push r13
  48               	.LCFI1:
  49               		.cfi_def_cfa_offset 4
  50               		.cfi_offset 13, -3
  51 0004 EF92      		push r14
  52               	.LCFI2:
  53               		.cfi_def_cfa_offset 5
  54               		.cfi_offset 14, -4
  55 0006 FF92      		push r15
  56               	.LCFI3:
  57               		.cfi_def_cfa_offset 6
  58               		.cfi_offset 15, -5
  59               	/* prologue: function */
  60               	/* frame size = 0 */
  61               	/* stack size = 4 */
  62               	.L__stack_usage = 4
  63 0008 6B01      		movw r12,r22
  64 000a 7C01      		movw r14,r24
  35:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return;
  65               		.loc 1 35 5 is_stmt 1 view .LVU6
  66               		.loc 1 35 9 is_stmt 0 view .LVU7
  67 000c 0E94 0000 		call is_keyboard_master
  68               	.LVL1:
  69               		.loc 1 35 8 view .LVU8
  70 0010 8111      		cpse r24,__zero_reg__
  71 0012 00C0      		rjmp .L2
  36:tmk_core/common/sync_timer.c ****     sync_timer_ms = time - timer_read32();
  72               		.loc 1 36 5 is_stmt 1 view .LVU9
  73               		.loc 1 36 28 is_stmt 0 view .LVU10
  74 0014 0E94 0000 		call timer_read32
  75               	.LVL2:
  76               		.loc 1 36 26 view .LVU11
  77 0018 C61A      		sub r12,r22
  78 001a D70A      		sbc r13,r23
  79 001c E80A      		sbc r14,r24
  80 001e F90A      		sbc r15,r25
  81               		.loc 1 36 19 view .LVU12
  82 0020 C092 0000 		sts sync_timer_ms,r12
  83 0024 D092 0000 		sts sync_timer_ms+1,r13
  84 0028 E092 0000 		sts sync_timer_ms+2,r14
  85 002c F092 0000 		sts sync_timer_ms+3,r15
  86               	.L2:
  87               	/* epilogue start */
  37:tmk_core/common/sync_timer.c **** }
  88               		.loc 1 37 1 view .LVU13
  89 0030 FF90      		pop r15
  90 0032 EF90      		pop r14
  91 0034 DF90      		pop r13
  92 0036 CF90      		pop r12
  93 0038 0895      		ret
  94               		.cfi_endproc
  95               	.LFE6:
  97               		.section	.text.sync_timer_read32,"ax",@progbits
  98               	.global	sync_timer_read32
 100               	sync_timer_read32:
 101               	.LFB8:
  38:tmk_core/common/sync_timer.c **** 
  39:tmk_core/common/sync_timer.c **** uint16_t sync_timer_read(void) {
  40:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_read();
  41:tmk_core/common/sync_timer.c ****     return sync_timer_read32();
  42:tmk_core/common/sync_timer.c **** }
  43:tmk_core/common/sync_timer.c **** 
  44:tmk_core/common/sync_timer.c **** uint32_t sync_timer_read32(void) {
 102               		.loc 1 44 34 is_stmt 1 view -0
 103               		.cfi_startproc
 104 0000 0F93      		push r16
 105               	.LCFI4:
 106               		.cfi_def_cfa_offset 3
 107               		.cfi_offset 16, -2
 108 0002 1F93      		push r17
 109               	.LCFI5:
 110               		.cfi_def_cfa_offset 4
 111               		.cfi_offset 17, -3
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 2 */
 115               	.L__stack_usage = 2
  45:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_read32();
 116               		.loc 1 45 5 view .LVU15
 117               		.loc 1 45 9 is_stmt 0 view .LVU16
 118 0004 0E94 0000 		call is_keyboard_master
 119               	.LVL3:
 120               		.loc 1 45 8 view .LVU17
 121 0008 8823      		tst r24
 122 000a 01F0      		breq .L5
 123               		.loc 1 45 31 is_stmt 1 discriminator 1 view .LVU18
 124               	/* epilogue start */
  46:tmk_core/common/sync_timer.c ****     return sync_timer_ms + timer_read32();
  47:tmk_core/common/sync_timer.c **** }
 125               		.loc 1 47 1 is_stmt 0 discriminator 1 view .LVU19
 126 000c 1F91      		pop r17
 127 000e 0F91      		pop r16
  45:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_read32();
 128               		.loc 1 45 38 discriminator 1 view .LVU20
 129 0010 0C94 0000 		jmp timer_read32
 130               	.LVL4:
 131               	.L5:
  46:tmk_core/common/sync_timer.c ****     return sync_timer_ms + timer_read32();
 132               		.loc 1 46 5 is_stmt 1 view .LVU21
  46:tmk_core/common/sync_timer.c ****     return sync_timer_ms + timer_read32();
 133               		.loc 1 46 28 is_stmt 0 view .LVU22
 134 0014 0E94 0000 		call timer_read32
 135               	.LVL5:
  46:tmk_core/common/sync_timer.c ****     return sync_timer_ms + timer_read32();
 136               		.loc 1 46 26 view .LVU23
 137 0018 0091 0000 		lds r16,sync_timer_ms
 138 001c 1091 0000 		lds r17,sync_timer_ms+1
 139 0020 2091 0000 		lds r18,sync_timer_ms+2
 140 0024 3091 0000 		lds r19,sync_timer_ms+3
 141 0028 600F      		add r22,r16
 142 002a 711F      		adc r23,r17
 143 002c 821F      		adc r24,r18
 144 002e 931F      		adc r25,r19
 145               	/* epilogue start */
 146               		.loc 1 47 1 view .LVU24
 147 0030 1F91      		pop r17
 148 0032 0F91      		pop r16
 149 0034 0895      		ret
 150               		.cfi_endproc
 151               	.LFE8:
 153               		.section	.text.sync_timer_read,"ax",@progbits
 154               	.global	sync_timer_read
 156               	sync_timer_read:
 157               	.LFB7:
  39:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_read();
 158               		.loc 1 39 32 is_stmt 1 view -0
 159               		.cfi_startproc
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
  40:tmk_core/common/sync_timer.c ****     return sync_timer_read32();
 164               		.loc 1 40 5 view .LVU26
  40:tmk_core/common/sync_timer.c ****     return sync_timer_read32();
 165               		.loc 1 40 9 is_stmt 0 view .LVU27
 166 0000 0E94 0000 		call is_keyboard_master
 167               	.LVL6:
  40:tmk_core/common/sync_timer.c ****     return sync_timer_read32();
 168               		.loc 1 40 8 view .LVU28
 169 0004 8111      		cpse r24,__zero_reg__
  40:tmk_core/common/sync_timer.c ****     return sync_timer_read32();
 170               		.loc 1 40 31 is_stmt 1 discriminator 1 view .LVU29
  40:tmk_core/common/sync_timer.c ****     return sync_timer_read32();
 171               		.loc 1 40 38 is_stmt 0 discriminator 1 view .LVU30
 172 0006 0C94 0000 		jmp timer_read
 173               	.LVL7:
 174               	.L7:
  41:tmk_core/common/sync_timer.c **** }
 175               		.loc 1 41 5 is_stmt 1 view .LVU31
  41:tmk_core/common/sync_timer.c **** }
 176               		.loc 1 41 12 is_stmt 0 view .LVU32
 177 000a 0E94 0000 		call sync_timer_read32
 178               	.LVL8:
  42:tmk_core/common/sync_timer.c **** 
 179               		.loc 1 42 1 view .LVU33
 180 000e CB01      		movw r24,r22
 181               	/* epilogue start */
 182 0010 0895      		ret
 183               		.cfi_endproc
 184               	.LFE7:
 186               		.section	.text.sync_timer_elapsed,"ax",@progbits
 187               	.global	sync_timer_elapsed
 189               	sync_timer_elapsed:
 190               	.LVL9:
 191               	.LFB9:
  48:tmk_core/common/sync_timer.c **** 
  49:tmk_core/common/sync_timer.c **** uint16_t sync_timer_elapsed(uint16_t last) {
 192               		.loc 1 49 44 is_stmt 1 view -0
 193               		.cfi_startproc
 194               		.loc 1 49 44 is_stmt 0 view .LVU35
 195 0000 CF93      		push r28
 196               	.LCFI6:
 197               		.cfi_def_cfa_offset 3
 198               		.cfi_offset 28, -2
 199 0002 DF93      		push r29
 200               	.LCFI7:
 201               		.cfi_def_cfa_offset 4
 202               		.cfi_offset 29, -3
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 205               	/* stack size = 2 */
 206               	.L__stack_usage = 2
 207 0004 EC01      		movw r28,r24
  50:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_elapsed(last);
 208               		.loc 1 50 5 is_stmt 1 view .LVU36
 209               		.loc 1 50 9 is_stmt 0 view .LVU37
 210 0006 0E94 0000 		call is_keyboard_master
 211               	.LVL10:
 212               		.loc 1 50 8 view .LVU38
 213 000a 8823      		tst r24
 214 000c 01F0      		breq .L9
 215               		.loc 1 50 31 is_stmt 1 discriminator 1 view .LVU39
 216               		.loc 1 50 38 is_stmt 0 discriminator 1 view .LVU40
 217 000e CE01      		movw r24,r28
 218               	/* epilogue start */
  51:tmk_core/common/sync_timer.c ****     return TIMER_DIFF_16(sync_timer_read(), last);
  52:tmk_core/common/sync_timer.c **** }
 219               		.loc 1 52 1 discriminator 1 view .LVU41
 220 0010 DF91      		pop r29
 221 0012 CF91      		pop r28
 222               	.LVL11:
  50:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_elapsed(last);
 223               		.loc 1 50 38 discriminator 1 view .LVU42
 224 0014 0C94 0000 		jmp timer_elapsed
 225               	.LVL12:
 226               	.L9:
  51:tmk_core/common/sync_timer.c ****     return TIMER_DIFF_16(sync_timer_read(), last);
 227               		.loc 1 51 5 is_stmt 1 view .LVU43
  51:tmk_core/common/sync_timer.c ****     return TIMER_DIFF_16(sync_timer_read(), last);
 228               		.loc 1 51 12 is_stmt 0 view .LVU44
 229 0018 0E94 0000 		call sync_timer_read
 230               	.LVL13:
 231               		.loc 1 52 1 view .LVU45
 232 001c 8C1B      		sub r24,r28
 233 001e 9D0B      		sbc r25,r29
 234               	/* epilogue start */
 235 0020 DF91      		pop r29
 236 0022 CF91      		pop r28
 237               	.LVL14:
 238               		.loc 1 52 1 view .LVU46
 239 0024 0895      		ret
 240               		.cfi_endproc
 241               	.LFE9:
 243               		.section	.text.sync_timer_elapsed32,"ax",@progbits
 244               	.global	sync_timer_elapsed32
 246               	sync_timer_elapsed32:
 247               	.LVL15:
 248               	.LFB10:
  53:tmk_core/common/sync_timer.c **** 
  54:tmk_core/common/sync_timer.c **** uint32_t sync_timer_elapsed32(uint32_t last) {
 249               		.loc 1 54 46 is_stmt 1 view -0
 250               		.cfi_startproc
 251               		.loc 1 54 46 is_stmt 0 view .LVU48
 252 0000 CF92      		push r12
 253               	.LCFI8:
 254               		.cfi_def_cfa_offset 3
 255               		.cfi_offset 12, -2
 256 0002 DF92      		push r13
 257               	.LCFI9:
 258               		.cfi_def_cfa_offset 4
 259               		.cfi_offset 13, -3
 260 0004 EF92      		push r14
 261               	.LCFI10:
 262               		.cfi_def_cfa_offset 5
 263               		.cfi_offset 14, -4
 264 0006 FF92      		push r15
 265               	.LCFI11:
 266               		.cfi_def_cfa_offset 6
 267               		.cfi_offset 15, -5
 268               	/* prologue: function */
 269               	/* frame size = 0 */
 270               	/* stack size = 4 */
 271               	.L__stack_usage = 4
 272 0008 6B01      		movw r12,r22
 273 000a 7C01      		movw r14,r24
  55:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_elapsed32(last);
 274               		.loc 1 55 5 is_stmt 1 view .LVU49
 275               		.loc 1 55 9 is_stmt 0 view .LVU50
 276 000c 0E94 0000 		call is_keyboard_master
 277               	.LVL16:
 278               		.loc 1 55 8 view .LVU51
 279 0010 8823      		tst r24
 280 0012 01F0      		breq .L11
 281               		.loc 1 55 31 is_stmt 1 discriminator 1 view .LVU52
 282               		.loc 1 55 38 is_stmt 0 discriminator 1 view .LVU53
 283 0014 C701      		movw r24,r14
 284 0016 B601      		movw r22,r12
 285               	/* epilogue start */
  56:tmk_core/common/sync_timer.c ****     return TIMER_DIFF_32(sync_timer_read32(), last);
  57:tmk_core/common/sync_timer.c **** }
 286               		.loc 1 57 1 discriminator 1 view .LVU54
 287 0018 FF90      		pop r15
 288 001a EF90      		pop r14
 289 001c DF90      		pop r13
 290 001e CF90      		pop r12
  55:tmk_core/common/sync_timer.c ****     if (is_keyboard_master()) return timer_elapsed32(last);
 291               		.loc 1 55 38 discriminator 1 view .LVU55
 292 0020 0C94 0000 		jmp timer_elapsed32
 293               	.LVL17:
 294               	.L11:
  56:tmk_core/common/sync_timer.c ****     return TIMER_DIFF_32(sync_timer_read32(), last);
 295               		.loc 1 56 5 is_stmt 1 view .LVU56
  56:tmk_core/common/sync_timer.c ****     return TIMER_DIFF_32(sync_timer_read32(), last);
 296               		.loc 1 56 12 is_stmt 0 view .LVU57
 297 0024 0E94 0000 		call sync_timer_read32
 298               	.LVL18:
 299 0028 6C19      		sub r22,r12
 300 002a 7D09      		sbc r23,r13
 301 002c 8E09      		sbc r24,r14
 302 002e 9F09      		sbc r25,r15
 303               	/* epilogue start */
 304               		.loc 1 57 1 view .LVU58
 305 0030 FF90      		pop r15
 306 0032 EF90      		pop r14
 307 0034 DF90      		pop r13
 308 0036 CF90      		pop r12
 309 0038 0895      		ret
 310               		.cfi_endproc
 311               	.LFE10:
 313               		.comm	sync_timer_ms,4,1
 314               		.text
 315               	.Letext0:
 316               		.file 2 "/usr/avr/include/stdint.h"
 317               		.file 3 "tmk_core/common/timer.h"
 318               		.file 4 "quantum/keyboard.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 sync_timer.c
     /tmp/ccVW7vS5.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccVW7vS5.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccVW7vS5.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccVW7vS5.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccVW7vS5.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccVW7vS5.s:13     .text.sync_timer_init:0000000000000000 sync_timer_init
                            *COM*:0000000000000004 sync_timer_ms
     /tmp/ccVW7vS5.s:37     .text.sync_timer_update:0000000000000000 sync_timer_update
     /tmp/ccVW7vS5.s:100    .text.sync_timer_read32:0000000000000000 sync_timer_read32
     /tmp/ccVW7vS5.s:156    .text.sync_timer_read:0000000000000000 sync_timer_read
     /tmp/ccVW7vS5.s:189    .text.sync_timer_elapsed:0000000000000000 sync_timer_elapsed
     /tmp/ccVW7vS5.s:246    .text.sync_timer_elapsed32:0000000000000000 sync_timer_elapsed32

UNDEFINED SYMBOLS
is_keyboard_master
timer_read32
timer_read
timer_elapsed
timer_elapsed32
__do_clear_bss
